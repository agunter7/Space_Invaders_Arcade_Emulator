Instruction Number 0
Memory Address: 0x0000
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1
Memory Address: 0x0001
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2
Memory Address: 0x0002
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3
Memory Address: 0x0003
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd4 0x18'
PC <= adr


Instruction Number 4
Memory Address: 0x0006
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5
Memory Address: 0x0007
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 6
Memory Address: 0x0008
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 7
Memory Address: 0x0009
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 8
Memory Address: 0x000a
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 9
Memory Address: 0x000b
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 10
Memory Address: 0x000c
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x8c 0x00'
PC <= adr


Instruction Number 11
Memory Address: 0x000f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 12
Memory Address: 0x0010
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 13
Memory Address: 0x0011
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 14
Memory Address: 0x0012
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 15
Memory Address: 0x0013
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 16
Memory Address: 0x0014
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x80 0x00'
A <- byte 2


Instruction Number 17
Memory Address: 0x0016
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x72 0x20'
(adr) <- A


Instruction Number 18
Memory Address: 0x0019
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xc0 0x20'
H <- byte 3; L <- byte 2


Instruction Number 19
Memory Address: 0x001c
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 20
Memory Address: 0x001d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcd 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 21
Memory Address: 0x0020
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 22
Memory Address: 0x0022
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 23
Memory Address: 0x0023
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x67 0x00'
if CY; PC<-adr


Instruction Number 24
Memory Address: 0x0026
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xea 0x20'
A <- (adr)


Instruction Number 25
Memory Address: 0x0029
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 26
Memory Address: 0x002a
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x42 0x00'
if Z; PC <- adr


Instruction Number 27
Memory Address: 0x002d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xeb 0x20'
A <- (adr)


Instruction Number 28
Memory Address: 0x0030
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x99 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 29
Memory Address: 0x0032
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x3e 0x00'
if Z; PC <- adr


Instruction Number 30
Memory Address: 0x0035
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 31
Memory Address: 0x0037
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 32
Memory Address: 0x0038
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xeb 0x20'
(adr) <- A


Instruction Number 33
Memory Address: 0x003b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x47 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 34
Memory Address: 0x003e
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 35
Memory Address: 0x003f
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xea 0x20'
(adr) <- A


Instruction Number 36
Memory Address: 0x0042
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xe9 0x20'
A <- (adr)


Instruction Number 37
Memory Address: 0x0045
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 38
Memory Address: 0x0046
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x82 0x00'
if Z; PC <- adr


Instruction Number 39
Memory Address: 0x0049
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 40
Memory Address: 0x004c
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 41
Memory Address: 0x004d
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x6f 0x00'
if NZ; PC <- adr


Instruction Number 42
Memory Address: 0x0050
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xeb 0x20'
A <- (adr)


Instruction Number 43
Memory Address: 0x0053
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 44
Memory Address: 0x0054
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5d 0x00'
if NZ; PC <- adr


Instruction Number 45
Memory Address: 0x0057
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xbf 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 46
Memory Address: 0x005a
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x82 0x00'
PC <= adr


Instruction Number 47
Memory Address: 0x005d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x93 0x20'
A <- (adr)


Instruction Number 48
Memory Address: 0x0060
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 49
Memory Address: 0x0061
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x82 0x00'
if NZ; PC <- adr


Instruction Number 50
Memory Address: 0x0064
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x65 0x07'
PC <= adr


Instruction Number 51
Memory Address: 0x0067
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 52
Memory Address: 0x0069
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xea 0x20'
(adr) <- A


Instruction Number 53
Memory Address: 0x006c
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x3f 0x00'
PC <= adr


Instruction Number 54
Memory Address: 0x006f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x40 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 55
Memory Address: 0x0072
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x32 0x20'
A <- (adr)


Instruction Number 56
Memory Address: 0x0075
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x80 0x20'
(adr) <- A


Instruction Number 57
Memory Address: 0x0078
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x00 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 58
Memory Address: 0x007b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x48 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 59
Memory Address: 0x007e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x13 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 60
Memory Address: 0x0081
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 61
Memory Address: 0x0082
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 62
Memory Address: 0x0083
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 63
Memory Address: 0x0084
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 64
Memory Address: 0x0085
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 65
Memory Address: 0x0086
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 66
Memory Address: 0x0087
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 67
Memory Address: 0x0088
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 68
Memory Address: 0x0089
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 69
Memory Address: 0x008a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 70
Memory Address: 0x008b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 71
Memory Address: 0x008c
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 72
Memory Address: 0x008d
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x72 0x20'
(adr) <- A


Instruction Number 73
Memory Address: 0x0090
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xe9 0x20'
A <- (adr)


Instruction Number 74
Memory Address: 0x0093
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 75
Memory Address: 0x0094
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x82 0x00'
if Z; PC <- adr


Instruction Number 76
Memory Address: 0x0097
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 77
Memory Address: 0x009a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 78
Memory Address: 0x009b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xa5 0x00'
if NZ; PC <- adr


Instruction Number 79
Memory Address: 0x009e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc1 0x20'
A <- (adr)


Instruction Number 80
Memory Address: 0x00a1
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 81
Memory Address: 0x00a2
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x82 0x00'
if NCY; PC<-adr


Instruction Number 82
Memory Address: 0x00a5
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x20 0x20'
H <- byte 3; L <- byte 2


Instruction Number 83
Memory Address: 0x00a8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x4b 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 84
Memory Address: 0x00ab
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x41 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 85
Memory Address: 0x00ae
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x82 0x00'
PC <= adr


Instruction Number 86
Memory Address: 0x00b1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x86 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 87
Memory Address: 0x00b4
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 88
Memory Address: 0x00b5
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 89
Memory Address: 0x00b6
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 90
Memory Address: 0x00b7
Opcode: 0x66
MOV H;M
Operands (memory order, little endian): '0x00 0x00'
H <- (HL)


Instruction Number 91
Memory Address: 0x00b8
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 92
Memory Address: 0x00b9
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x09 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 93
Memory Address: 0x00bc
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x0b 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 94
Memory Address: 0x00bf
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 95
Memory Address: 0x00c0
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 96
Memory Address: 0x00c1
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 97
Memory Address: 0x00c2
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x03 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 98
Memory Address: 0x00c4
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xc8 0x00'
if NZ; PC <- adr


Instruction Number 99
Memory Address: 0x00c7
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 100
Memory Address: 0x00c8
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x08 0x20'
(adr) <- A


Instruction Number 101
Memory Address: 0x00cb
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xfe 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 102
Memory Address: 0x00cd
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x00 0x00'
A <- byte 2


Instruction Number 103
Memory Address: 0x00cf
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xd3 0x00'
if NZ; PC <- adr


Instruction Number 104
Memory Address: 0x00d2
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 105
Memory Address: 0x00d3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x0d 0x20'
(adr) <- A


Instruction Number 106
Memory Address: 0x00d6
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 107
Memory Address: 0x00d7
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x02 0x00'
A <- byte 2


Instruction Number 108
Memory Address: 0x00d9
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xfb 0x21'
(adr) <- A


Instruction Number 109
Memory Address: 0x00dc
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xfb 0x22'
(adr) <- A


Instruction Number 110
Memory Address: 0x00df
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xe4 0x08'
PC <= adr


Instruction Number 111
Memory Address: 0x00e2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 112
Memory Address: 0x00e3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 113
Memory Address: 0x00e4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 114
Memory Address: 0x00e5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 115
Memory Address: 0x00e6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 116
Memory Address: 0x00e7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 117
Memory Address: 0x00e8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 118
Memory Address: 0x00e9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 119
Memory Address: 0x00ea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 120
Memory Address: 0x00eb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 121
Memory Address: 0x00ec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 122
Memory Address: 0x00ed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 123
Memory Address: 0x00ee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 124
Memory Address: 0x00ef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 125
Memory Address: 0x00f0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 126
Memory Address: 0x00f1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 127
Memory Address: 0x00f2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 128
Memory Address: 0x00f3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 129
Memory Address: 0x00f4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 130
Memory Address: 0x00f5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 131
Memory Address: 0x00f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 132
Memory Address: 0x00f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 133
Memory Address: 0x00f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 134
Memory Address: 0x00f9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 135
Memory Address: 0x00fa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 136
Memory Address: 0x00fb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 137
Memory Address: 0x00fc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 138
Memory Address: 0x00fd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 139
Memory Address: 0x00fe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 140
Memory Address: 0x00ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 141
Memory Address: 0x0100
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x02 0x20'
H <- byte 3; L <- byte 2


Instruction Number 142
Memory Address: 0x0103
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 143
Memory Address: 0x0104
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 144
Memory Address: 0x0105
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x38 0x15'
if NZ; PC <- adr


Instruction Number 145
Memory Address: 0x0108
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 146
Memory Address: 0x0109
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x06 0x20'
A <- (adr)


Instruction Number 147
Memory Address: 0x010c
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 148
Memory Address: 0x010d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 149
Memory Address: 0x0110
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 150
Memory Address: 0x0111
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 151
Memory Address: 0x0112
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 152
Memory Address: 0x0113
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 153
Memory Address: 0x0114
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x36 0x01'
if Z; PC <- adr


Instruction Number 154
Memory Address: 0x0117
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 155
Memory Address: 0x0118
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 156
Memory Address: 0x0119
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 157
Memory Address: 0x011a
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 158
Memory Address: 0x011b
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 159
Memory Address: 0x011c
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0xfe 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 160
Memory Address: 0x011e
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 161
Memory Address: 0x011f
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 162
Memory Address: 0x0120
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 163
Memory Address: 0x0121
Opcode: 0x5f
MOV E;A
Operands (memory order, little endian): '0x00 0x00'
E <- A


Instruction Number 164
Memory Address: 0x0122
Opcode: 0x16
MVI D; D8
Operands (memory order, little endian): '0x00 0x00'
D <- byte 2


Instruction Number 165
Memory Address: 0x0124
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x1c'
H <- byte 3; L <- byte 2


Instruction Number 166
Memory Address: 0x0127
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 167
Memory Address: 0x0128
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 168
Memory Address: 0x0129
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 169
Memory Address: 0x012a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 170
Memory Address: 0x012b
Opcode: 0xc4
CNZ adr
Operands (memory order, little endian): '0x3b 0x01'
if NZ; CALL adr


Instruction Number 171
Memory Address: 0x012e
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x0b 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 172
Memory Address: 0x0131
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 173
Memory Address: 0x0133
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd3 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 174
Memory Address: 0x0136
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 175
Memory Address: 0x0137
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x00 0x20'
(adr) <- A


Instruction Number 176
Memory Address: 0x013a
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 177
Memory Address: 0x013b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x30 0x00'
H <- byte 3; L <- byte 2


Instruction Number 178
Memory Address: 0x013e
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 179
Memory Address: 0x013f
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 180
Memory Address: 0x0140
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 181
Memory Address: 0x0141
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x68 0x20'
A <- (adr)


Instruction Number 182
Memory Address: 0x0144
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 183
Memory Address: 0x0145
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 184
Memory Address: 0x0146
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x00 0x20'
A <- (adr)


Instruction Number 185
Memory Address: 0x0149
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 186
Memory Address: 0x014a
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 187
Memory Address: 0x014b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 188
Memory Address: 0x014e
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 189
Memory Address: 0x014f
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x06 0x20'
A <- (adr)


Instruction Number 190
Memory Address: 0x0152
Opcode: 0x16
MVI D; D8
Operands (memory order, little endian): '0x02 0x00'
D <- byte 2


Instruction Number 191
Memory Address: 0x0154
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 192
Memory Address: 0x0155
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x37 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 193
Memory Address: 0x0157
Opcode: 0xcc
CZ adr
Operands (memory order, little endian): '0xa1 0x01'
if Z; CALL adr


Instruction Number 194
Memory Address: 0x015a
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 195
Memory Address: 0x015b
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 196
Memory Address: 0x015c
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 197
Memory Address: 0x015d
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x54 0x01'
if NZ; PC <- adr


Instruction Number 198
Memory Address: 0x0160
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x06 0x20'
(adr) <- A


Instruction Number 199
Memory Address: 0x0163
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7a 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 200
Memory Address: 0x0166
Opcode: 0x61
MOV H;C
Operands (memory order, little endian): '0x00 0x00'
H <- C


Instruction Number 201
Memory Address: 0x0167
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x0b 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 202
Memory Address: 0x016a
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 203
Memory Address: 0x016b
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x28 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 204
Memory Address: 0x016d
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x71 0x19'
if CY; PC<-adr


Instruction Number 205
Memory Address: 0x0170
Opcode: 0x7a
MOV A;D
Operands (memory order, little endian): '0x00 0x00'
A <- D


Instruction Number 206
Memory Address: 0x0171
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x04 0x20'
(adr) <- A


Instruction Number 207
Memory Address: 0x0174
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 208
Memory Address: 0x0176
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x00 0x20'
(adr) <- A


Instruction Number 209
Memory Address: 0x0179
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 210
Memory Address: 0x017a
Opcode: 0x16
MVI D; D8
Operands (memory order, little endian): '0x00 0x00'
D <- byte 2


Instruction Number 211
Memory Address: 0x017c
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 212
Memory Address: 0x017d
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x09 0x20'
H <- byte 3; L <- byte 2


Instruction Number 213
Memory Address: 0x0180
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 214
Memory Address: 0x0181
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 215
Memory Address: 0x0182
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 216
Memory Address: 0x0183
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x0b 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 217
Memory Address: 0x0185
Opcode: 0xfa
JM adr
Operands (memory order, little endian): '0x94 0x01'
if M; PC <- adr


Instruction Number 218
Memory Address: 0x0188
Opcode: 0xde
SBI D8
Operands (memory order, little endian): '0x0b 0x00'
A <- A - data - CY
Z; S; P; CY; AC

Instruction Number 219
Memory Address: 0x018a
Opcode: 0x5f
MOV E;A
Operands (memory order, little endian): '0x00 0x00'
E <- A


Instruction Number 220
Memory Address: 0x018b
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 221
Memory Address: 0x018c
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 222
Memory Address: 0x018e
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 223
Memory Address: 0x018f
Opcode: 0x7b
MOV A;E
Operands (memory order, little endian): '0x00 0x00'
A <- E


Instruction Number 224
Memory Address: 0x0190
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 225
Memory Address: 0x0191
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x83 0x01'
PC <= adr


Instruction Number 226
Memory Address: 0x0194
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 227
Memory Address: 0x0195
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 228
Memory Address: 0x0196
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 229
Memory Address: 0x0197
Opcode: 0x5f
MOV E;A
Operands (memory order, little endian): '0x00 0x00'
E <- A


Instruction Number 230
Memory Address: 0x0198
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 231
Memory Address: 0x0199
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 232
Memory Address: 0x019b
Opcode: 0x4f
MOV C;A
Operands (memory order, little endian): '0x00 0x00'
C <- A


Instruction Number 233
Memory Address: 0x019c
Opcode: 0x7b
MOV A;E
Operands (memory order, little endian): '0x00 0x00'
A <- E


Instruction Number 234
Memory Address: 0x019d
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 235
Memory Address: 0x019e
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x95 0x01'
PC <= adr


Instruction Number 236
Memory Address: 0x01a1
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 237
Memory Address: 0x01a2
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xcd 0x01'
if Z; PC <- adr


Instruction Number 238
Memory Address: 0x01a5
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x06 0x20'
H <- byte 3; L <- byte 2


Instruction Number 239
Memory Address: 0x01a8
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 240
Memory Address: 0x01aa
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 241
Memory Address: 0x01ab
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 242
Memory Address: 0x01ac
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 243
Memory Address: 0x01ae
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd9 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 244
Memory Address: 0x01b1
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x05 0x20'
H <- byte 3; L <- byte 2


Instruction Number 245
Memory Address: 0x01b4
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 246
Memory Address: 0x01b5
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 247
Memory Address: 0x01b6
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 248
Memory Address: 0x01b8
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 249
Memory Address: 0x01b9
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 250
Memory Address: 0x01ba
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x67 0x20'
H <- byte 3; L <- byte 2


Instruction Number 251
Memory Address: 0x01bd
Opcode: 0x66
MOV H;M
Operands (memory order, little endian): '0x00 0x00'
H <- (HL)


Instruction Number 252
Memory Address: 0x01be
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 253
Memory Address: 0x01bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 254
Memory Address: 0x01c0
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x21'
H <- byte 3; L <- byte 2


Instruction Number 255
Memory Address: 0x01c3
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x37 0x00'
B <- byte 2


Instruction Number 256
Memory Address: 0x01c5
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 257
Memory Address: 0x01c7
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 258
Memory Address: 0x01c8
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 259
Memory Address: 0x01c9
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xc5 0x01'
if NZ; PC <- adr


Instruction Number 260
Memory Address: 0x01cc
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 261
Memory Address: 0x01cd
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 262
Memory Address: 0x01ce
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 263
Memory Address: 0x01cf
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 264
Memory Address: 0x01d1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xe0 0x00'
B <- byte 2


Instruction Number 265
Memory Address: 0x01d3
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x02 0x24'
H <- byte 3; L <- byte 2


Instruction Number 266
Memory Address: 0x01d6
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xcc 0x14'
PC <= adr


Instruction Number 267
Memory Address: 0x01d9
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 268
Memory Address: 0x01da
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 269
Memory Address: 0x01db
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 270
Memory Address: 0x01dc
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 271
Memory Address: 0x01dd
Opcode: 0x86
ADD M
Operands (memory order, little endian): '0x00 0x00'
A <- A + (HL)
Z; S; P; CY; AC

Instruction Number 272
Memory Address: 0x01de
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 273
Memory Address: 0x01df
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 274
Memory Address: 0x01e0
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 275
Memory Address: 0x01e1
Opcode: 0x86
ADD M
Operands (memory order, little endian): '0x00 0x00'
A <- A + (HL)
Z; S; P; CY; AC

Instruction Number 276
Memory Address: 0x01e2
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 277
Memory Address: 0x01e3
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 278
Memory Address: 0x01e4
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xc0 0x00'
B <- byte 2


Instruction Number 279
Memory Address: 0x01e6
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x00 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 280
Memory Address: 0x01e9
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x20'
H <- byte 3; L <- byte 2


Instruction Number 281
Memory Address: 0x01ec
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 282
Memory Address: 0x01ef
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x42 0x21'
H <- byte 3; L <- byte 2


Instruction Number 283
Memory Address: 0x01f2
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf8 0x01'
PC <= adr


Instruction Number 284
Memory Address: 0x01f5
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x42 0x22'
H <- byte 3; L <- byte 2


Instruction Number 285
Memory Address: 0x01f8
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 286
Memory Address: 0x01fa
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x20 0x1d'
D <- byte 3; E <- byte 2


Instruction Number 287
Memory Address: 0x01fd
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 288
Memory Address: 0x01fe
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x2c 0x00'
B <- byte 2


Instruction Number 289
Memory Address: 0x0200
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 290
Memory Address: 0x0203
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 291
Memory Address: 0x0204
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 292
Memory Address: 0x0205
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xfd 0x01'
if NZ; PC <- adr


Instruction Number 293
Memory Address: 0x0208
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 294
Memory Address: 0x0209
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 295
Memory Address: 0x020b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x1b 0x02'
PC <= adr


Instruction Number 296
Memory Address: 0x020e
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 297
Memory Address: 0x0210
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x14 0x02'
PC <= adr


Instruction Number 298
Memory Address: 0x0213
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 299
Memory Address: 0x0214
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x42 0x22'
D <- byte 3; E <- byte 2


Instruction Number 300
Memory Address: 0x0217
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x1e 0x02'
PC <= adr


Instruction Number 301
Memory Address: 0x021a
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 302
Memory Address: 0x021b
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x42 0x21'
D <- byte 3; E <- byte 2


Instruction Number 303
Memory Address: 0x021e
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x81 0x20'
(adr) <- A


Instruction Number 304
Memory Address: 0x0221
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x02 0x16'
B <- byte 3; C <- byte 2


Instruction Number 305
Memory Address: 0x0224
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x06 0x28'
H <- byte 3; L <- byte 2


Instruction Number 306
Memory Address: 0x0227
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x04 0x00'
A <- byte 2


Instruction Number 307
Memory Address: 0x0229
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 308
Memory Address: 0x022a
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 309
Memory Address: 0x022b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x81 0x20'
A <- (adr)


Instruction Number 310
Memory Address: 0x022e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 311
Memory Address: 0x022f
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x42 0x02'
if NZ; PC <- adr


Instruction Number 312
Memory Address: 0x0232
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x69 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 313
Memory Address: 0x0235
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 314
Memory Address: 0x0236
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 315
Memory Address: 0x0237
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 316
Memory Address: 0x0238
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 317
Memory Address: 0x0239
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 318
Memory Address: 0x023a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xe0 0x02'
D <- byte 3; E <- byte 2


Instruction Number 319
Memory Address: 0x023d
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 320
Memory Address: 0x023e
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 321
Memory Address: 0x023f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x29 0x02'
PC <= adr


Instruction Number 322
Memory Address: 0x0242
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7c 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 323
Memory Address: 0x0245
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x35 0x02'
PC <= adr


Instruction Number 324
Memory Address: 0x0248
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x10 0x20'
H <- byte 3; L <- byte 2


Instruction Number 325
Memory Address: 0x024b
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 326
Memory Address: 0x024c
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xff 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 327
Memory Address: 0x024e
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 328
Memory Address: 0x024f
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xfe 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 329
Memory Address: 0x0251
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x81 0x02'
if Z; PC <- adr


Instruction Number 330
Memory Address: 0x0254
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 331
Memory Address: 0x0255
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 332
Memory Address: 0x0256
Opcode: 0x4f
MOV C;A
Operands (memory order, little endian): '0x00 0x00'
C <- A


Instruction Number 333
Memory Address: 0x0257
Opcode: 0xb0
ORA B
Operands (memory order, little endian): '0x00 0x00'
A <- A | B
Z; S; P; CY; AC

Instruction Number 334
Memory Address: 0x0258
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 335
Memory Address: 0x0259
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x77 0x02'
if NZ; PC <- adr


Instruction Number 336
Memory Address: 0x025c
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 337
Memory Address: 0x025d
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 338
Memory Address: 0x025e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 339
Memory Address: 0x025f
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x88 0x02'
if NZ; PC <- adr


Instruction Number 340
Memory Address: 0x0262
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 341
Memory Address: 0x0263
Opcode: 0x5e
MOV E;M
Operands (memory order, little endian): '0x00 0x00'
E <- (HL)


Instruction Number 342
Memory Address: 0x0264
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 343
Memory Address: 0x0265
Opcode: 0x56
MOV D;M
Operands (memory order, little endian): '0x00 0x00'
D <- (HL)


Instruction Number 344
Memory Address: 0x0266
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 345
Memory Address: 0x0267
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 346
Memory Address: 0x0268
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 347
Memory Address: 0x0269
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x6f 0x02'
H <- byte 3; L <- byte 2


Instruction Number 348
Memory Address: 0x026c
Opcode: 0xe3
XTHL
Operands (memory order, little endian): '0x00 0x00'
L <-&gt; (SP); H <-&gt; (SP+1) 


Instruction Number 349
Memory Address: 0x026d
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 350
Memory Address: 0x026e
Opcode: 0xe9
PCHL
Operands (memory order, little endian): '0x00 0x00'
PC.hi <- H; PC.lo <- L


Instruction Number 351
Memory Address: 0x026f
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 352
Memory Address: 0x0270
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x0c 0x00'
D <- byte 3; E <- byte 2


Instruction Number 353
Memory Address: 0x0273
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 354
Memory Address: 0x0274
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x4b 0x02'
PC <= adr


Instruction Number 355
Memory Address: 0x0277
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 356
Memory Address: 0x0278
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 357
Memory Address: 0x0279
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x7d 0x02'
if NZ; PC <- adr


Instruction Number 358
Memory Address: 0x027c
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 359
Memory Address: 0x027d
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 360
Memory Address: 0x027e
Opcode: 0x70
MOV M;B
Operands (memory order, little endian): '0x00 0x00'
(HL) <- B


Instruction Number 361
Memory Address: 0x027f
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 362
Memory Address: 0x0280
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 363
Memory Address: 0x0281
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x10 0x00'
D <- byte 3; E <- byte 2


Instruction Number 364
Memory Address: 0x0284
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 365
Memory Address: 0x0285
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x4b 0x02'
PC <= adr


Instruction Number 366
Memory Address: 0x0288
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 367
Memory Address: 0x0289
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 368
Memory Address: 0x028a
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 369
Memory Address: 0x028b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x81 0x02'
PC <= adr


Instruction Number 370
Memory Address: 0x028e
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 371
Memory Address: 0x028f
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 372
Memory Address: 0x0290
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 373
Memory Address: 0x0291
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xff 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 374
Memory Address: 0x0293
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x3b 0x03'
if Z; PC <- adr


Instruction Number 375
Memory Address: 0x0296
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 376
Memory Address: 0x0297
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 377
Memory Address: 0x0298
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 378
Memory Address: 0x0299
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 379
Memory Address: 0x029a
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 380
Memory Address: 0x029b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x68 0x20'
(adr) <- A


Instruction Number 381
Memory Address: 0x029e
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x69 0x20'
(adr) <- A


Instruction Number 382
Memory Address: 0x02a1
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x30 0x00'
A <- byte 2


Instruction Number 383
Memory Address: 0x02a3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x6a 0x20'
(adr) <- A


Instruction Number 384
Memory Address: 0x02a6
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 385
Memory Address: 0x02a7
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x05 0x00'
(HL) <- byte 2


Instruction Number 386
Memory Address: 0x02a9
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 387
Memory Address: 0x02aa
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 388
Memory Address: 0x02ab
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x9b 0x03'
if NZ; PC <- adr


Instruction Number 389
Memory Address: 0x02ae
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x1a 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 390
Memory Address: 0x02b1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 391
Memory Address: 0x02b3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x24 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 392
Memory Address: 0x02b6
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x10 0x20'
H <- byte 3; L <- byte 2


Instruction Number 393
Memory Address: 0x02b9
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x10 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 394
Memory Address: 0x02bc
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 395
Memory Address: 0x02be
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 396
Memory Address: 0x02c1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 397
Memory Address: 0x02c3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xdc 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 398
Memory Address: 0x02c6
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6d 0x20'
A <- (adr)


Instruction Number 399
Memory Address: 0x02c9
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 400
Memory Address: 0x02ca
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 401
Memory Address: 0x02cb
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 402
Memory Address: 0x02ce
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 403
Memory Address: 0x02cf
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 404
Memory Address: 0x02d0
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x24'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 405
Memory Address: 0x02d3
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 406
Memory Address: 0x02d4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 407
Memory Address: 0x02d7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2e 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 408
Memory Address: 0x02da
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 409
Memory Address: 0x02db
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x6d 0x16'
if Z; PC <- adr


Instruction Number 410
Memory Address: 0x02de
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe7 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 411
Memory Address: 0x02e1
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 412
Memory Address: 0x02e2
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 413
Memory Address: 0x02e3
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x2c 0x03'
if Z; PC <- adr


Instruction Number 414
Memory Address: 0x02e6
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xce 0x20'
A <- (adr)


Instruction Number 415
Memory Address: 0x02e9
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 416
Memory Address: 0x02ea
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x2c 0x03'
if Z; PC <- adr


Instruction Number 417
Memory Address: 0x02ed
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 418
Memory Address: 0x02f0
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 419
Memory Address: 0x02f1
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 420
Memory Address: 0x02f2
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x32 0x03'
if CY; PC<-adr


Instruction Number 421
Memory Address: 0x02f5
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x0e 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 422
Memory Address: 0x02f8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x78 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 423
Memory Address: 0x02fb
Opcode: 0x73
MOV M;E
Operands (memory order, little endian): '0x00 0x00'
(HL) <- E


Instruction Number 424
Memory Address: 0x02fc
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 425
Memory Address: 0x02fd
Opcode: 0x72
MOV M;D
Operands (memory order, little endian): '0x00 0x00'
(HL) <- D


Instruction Number 426
Memory Address: 0x02fe
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 427
Memory Address: 0x02ff
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 428
Memory Address: 0x0300
Opcode: 0x70
MOV M;B
Operands (memory order, little endian): '0x00 0x00'
(HL) <- B


Instruction Number 429
Memory Address: 0x0301
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 430
Memory Address: 0x0302
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe4 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 431
Memory Address: 0x0305
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 432
Memory Address: 0x0306
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 433
Memory Address: 0x0307
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x21 0x00'
A <- byte 2


Instruction Number 434
Memory Address: 0x0309
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 435
Memory Address: 0x030b
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x12 0x03'
if NCY; PC<-adr


Instruction Number 436
Memory Address: 0x030e
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x20 0x00'
B <- byte 2


Instruction Number 437
Memory Address: 0x0310
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x22 0x00'
A <- byte 2


Instruction Number 438
Memory Address: 0x0312
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x67 0x20'
(adr) <- A


Instruction Number 439
Memory Address: 0x0315
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb6 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 440
Memory Address: 0x0318
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 441
Memory Address: 0x0319
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x11 0x20'
(adr) <- A


Instruction Number 442
Memory Address: 0x031c
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 443
Memory Address: 0x031d
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 444
Memory Address: 0x031f
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 445
Memory Address: 0x0320
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x98 0x20'
(adr) <- A


Instruction Number 446
Memory Address: 0x0323
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 447
Memory Address: 0x0326
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7f 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 448
Memory Address: 0x0329
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf9 0x07'
PC <= adr


Instruction Number 449
Memory Address: 0x032c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7f 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 450
Memory Address: 0x032f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x17 0x08'
PC <= adr


Instruction Number 451
Memory Address: 0x0332
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x09 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 452
Memory Address: 0x0335
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf8 0x02'
PC <= adr


Instruction Number 453
Memory Address: 0x0338
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 454
Memory Address: 0x0339
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 455
Memory Address: 0x033a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 456
Memory Address: 0x033b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x68 0x20'
H <- byte 3; L <- byte 2


Instruction Number 457
Memory Address: 0x033e
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 458
Memory Address: 0x0340
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 459
Memory Address: 0x0341
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 460
Memory Address: 0x0342
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 461
Memory Address: 0x0343
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xb0 0x03'
PC <= adr


Instruction Number 462
Memory Address: 0x0346
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 463
Memory Address: 0x0347
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 464
Memory Address: 0x0348
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 465
Memory Address: 0x034a
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x1b 0x20'
A <- (adr)


Instruction Number 466
Memory Address: 0x034d
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 467
Memory Address: 0x034e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 468
Memory Address: 0x0351
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 469
Memory Address: 0x0352
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x63 0x03'
if NZ; PC <- adr


Instruction Number 470
Memory Address: 0x0355
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x1d 0x20'
A <- (adr)


Instruction Number 471
Memory Address: 0x0358
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 472
Memory Address: 0x0359
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x81 0x03'
if CY; PC<-adr


Instruction Number 473
Memory Address: 0x035c
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 474
Memory Address: 0x035d
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x8e 0x03'
if CY; PC<-adr


Instruction Number 475
Memory Address: 0x0360
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6f 0x03'
PC <= adr


Instruction Number 476
Memory Address: 0x0363
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 477
Memory Address: 0x0366
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 478
Memory Address: 0x0367
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 479
Memory Address: 0x0368
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x81 0x03'
if CY; PC<-adr


Instruction Number 480
Memory Address: 0x036b
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 481
Memory Address: 0x036c
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x8e 0x03'
if CY; PC<-adr


Instruction Number 482
Memory Address: 0x036f
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x18 0x20'
H <- byte 3; L <- byte 2


Instruction Number 483
Memory Address: 0x0372
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 484
Memory Address: 0x0375
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x47 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 485
Memory Address: 0x0378
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x39 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 486
Memory Address: 0x037b
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x00 0x00'
A <- byte 2


Instruction Number 487
Memory Address: 0x037d
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x12 0x20'
(adr) <- A


Instruction Number 488
Memory Address: 0x0380
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 489
Memory Address: 0x0381
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 490
Memory Address: 0x0382
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xd9 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 491
Memory Address: 0x0384
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x6f 0x03'
if Z; PC <- adr


Instruction Number 492
Memory Address: 0x0387
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 493
Memory Address: 0x0388
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x1b 0x20'
(adr) <- A


Instruction Number 494
Memory Address: 0x038b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6f 0x03'
PC <= adr


Instruction Number 495
Memory Address: 0x038e
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 496
Memory Address: 0x038f
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x30 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 497
Memory Address: 0x0391
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x6f 0x03'
if Z; PC <- adr


Instruction Number 498
Memory Address: 0x0394
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 499
Memory Address: 0x0395
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x1b 0x20'
(adr) <- A


Instruction Number 500
Memory Address: 0x0398
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6f 0x03'
PC <= adr


Instruction Number 501
Memory Address: 0x039b
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 502
Memory Address: 0x039c
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 503
Memory Address: 0x039e
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x15 0x20'
(adr) <- A


Instruction Number 504
Memory Address: 0x03a1
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 505
Memory Address: 0x03a2
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 506
Memory Address: 0x03a3
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 507
Memory Address: 0x03a4
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 508
Memory Address: 0x03a5
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x70 0x1c'
H <- byte 3; L <- byte 2


Instruction Number 509
Memory Address: 0x03a8
Opcode: 0x85
ADD L
Operands (memory order, little endian): '0x00 0x00'
A <- A + L
Z; S; P; CY; AC

Instruction Number 510
Memory Address: 0x03a9
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 511
Memory Address: 0x03aa
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x18 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 512
Memory Address: 0x03ad
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6f 0x03'
PC <= adr


Instruction Number 513
Memory Address: 0x03b0
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x4a 0x03'
if NZ; PC <- adr


Instruction Number 514
Memory Address: 0x03b3
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 515
Memory Address: 0x03b4
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 516
Memory Address: 0x03b5
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x4a 0x03'
if NZ; PC <- adr


Instruction Number 517
Memory Address: 0x03b8
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x46 0x03'
PC <= adr


Instruction Number 518
Memory Address: 0x03bb
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x2a 0x20'
D <- byte 3; E <- byte 2


Instruction Number 519
Memory Address: 0x03be
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x06 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 520
Memory Address: 0x03c1
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 521
Memory Address: 0x03c2
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 522
Memory Address: 0x03c3
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 523
Memory Address: 0x03c4
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 524
Memory Address: 0x03c5
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 525
Memory Address: 0x03c6
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 526
Memory Address: 0x03c7
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x01 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 527
Memory Address: 0x03c9
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xfa 0x03'
if Z; PC <- adr


Instruction Number 528
Memory Address: 0x03cc
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x02 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 529
Memory Address: 0x03ce
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x0a 0x04'
if Z; PC <- adr


Instruction Number 530
Memory Address: 0x03d1
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 531
Memory Address: 0x03d2
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x03 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 532
Memory Address: 0x03d4
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x2a 0x04'
if NZ; PC <- adr


Instruction Number 533
Memory Address: 0x03d7
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 534
Memory Address: 0x03d8
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x36 0x04'
if Z; PC <- adr


Instruction Number 535
Memory Address: 0x03db
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 536
Memory Address: 0x03dc
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x0f 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 537
Memory Address: 0x03de
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 538
Memory Address: 0x03df
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 539
Memory Address: 0x03e0
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x30 0x04'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 540
Memory Address: 0x03e3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x52 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 541
Memory Address: 0x03e6
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 542
Memory Address: 0x03e7
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 543
Memory Address: 0x03e8
Opcode: 0x34
INR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)+1
Z; S; P; AC

Instruction Number 544
Memory Address: 0x03e9
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 545
Memory Address: 0x03ea
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 546
Memory Address: 0x03eb
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 547
Memory Address: 0x03ec
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 548
Memory Address: 0x03ed
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 549
Memory Address: 0x03ee
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 550
Memory Address: 0x03ef
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 551
Memory Address: 0x03f0
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 552
Memory Address: 0x03f1
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 553
Memory Address: 0x03f2
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x08 0x00'
(HL) <- byte 2


Instruction Number 554
Memory Address: 0x03f4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x30 0x04'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 555
Memory Address: 0x03f7
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x00 0x14'
PC <= adr


Instruction Number 556
Memory Address: 0x03fa
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 557
Memory Address: 0x03fb
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 558
Memory Address: 0x03fc
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x1b 0x20'
A <- (adr)


Instruction Number 559
Memory Address: 0x03ff
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x08 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 560
Memory Address: 0x0401
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x2a 0x20'
(adr) <- A


Instruction Number 561
Memory Address: 0x0404
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x30 0x04'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 562
Memory Address: 0x0407
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x00 0x14'
PC <= adr


Instruction Number 563
Memory Address: 0x040a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x30 0x04'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 564
Memory Address: 0x040d
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 565
Memory Address: 0x040e
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 566
Memory Address: 0x040f
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 567
Memory Address: 0x0410
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x52 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 568
Memory Address: 0x0413
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 569
Memory Address: 0x0414
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 570
Memory Address: 0x0415
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 571
Memory Address: 0x0416
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x2c 0x20'
A <- (adr)


Instruction Number 572
Memory Address: 0x0419
Opcode: 0x85
ADD L
Operands (memory order, little endian): '0x00 0x00'
A <- A + L
Z; S; P; CY; AC

Instruction Number 573
Memory Address: 0x041a
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 574
Memory Address: 0x041b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x29 0x20'
(adr) <- A


Instruction Number 575
Memory Address: 0x041e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x91 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 576
Memory Address: 0x0421
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x61 0x20'
A <- (adr)


Instruction Number 577
Memory Address: 0x0424
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 578
Memory Address: 0x0425
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 579
Memory Address: 0x0426
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x02 0x20'
(adr) <- A


Instruction Number 580
Memory Address: 0x0429
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 581
Memory Address: 0x042a
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x05 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 582
Memory Address: 0x042c
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 583
Memory Address: 0x042d
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x36 0x04'
PC <= adr


Instruction Number 584
Memory Address: 0x0430
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x27 0x20'
H <- byte 3; L <- byte 2


Instruction Number 585
Memory Address: 0x0433
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x3b 0x1a'
PC <= adr


Instruction Number 586
Memory Address: 0x0436
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x30 0x04'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 587
Memory Address: 0x0439
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x52 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 588
Memory Address: 0x043c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x25 0x20'
H <- byte 3; L <- byte 2


Instruction Number 589
Memory Address: 0x043f
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x25 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 590
Memory Address: 0x0442
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x07 0x00'
B <- byte 2


Instruction Number 591
Memory Address: 0x0444
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 592
Memory Address: 0x0447
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x8d 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 593
Memory Address: 0x044a
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 594
Memory Address: 0x044b
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 595
Memory Address: 0x044c
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x63 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 596
Memory Address: 0x044e
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x53 0x04'
if CY; PC<-adr


Instruction Number 597
Memory Address: 0x0451
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0x54 0x00'
L <- byte 2


Instruction Number 598
Memory Address: 0x0453
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x8d 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 599
Memory Address: 0x0456
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x8f 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 600
Memory Address: 0x0459
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 601
Memory Address: 0x045a
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x8f 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 602
Memory Address: 0x045d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x84 0x20'
A <- (adr)


Instruction Number 603
Memory Address: 0x0460
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 604
Memory Address: 0x0461
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 605
Memory Address: 0x0462
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 606
Memory Address: 0x0463
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 607
Memory Address: 0x0465
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x29 0x02'
B <- byte 3; C <- byte 2


Instruction Number 608
Memory Address: 0x0468
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x6e 0x04'
if NZ; PC <- adr


Instruction Number 609
Memory Address: 0x046b
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xe0 0xfe'
B <- byte 3; C <- byte 2


Instruction Number 610
Memory Address: 0x046e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x8a 0x20'
H <- byte 3; L <- byte 2


Instruction Number 611
Memory Address: 0x0471
Opcode: 0x71
MOV M;C
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 612
Memory Address: 0x0472
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 613
Memory Address: 0x0473
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 614
Memory Address: 0x0474
Opcode: 0x70
MOV M;B
Operands (memory order, little endian): '0x00 0x00'
(HL) <- B


Instruction Number 615
Memory Address: 0x0475
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 616
Memory Address: 0x0476
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 617
Memory Address: 0x0477
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x32 0x1b'
A <- (adr)


Instruction Number 618
Memory Address: 0x047a
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x32 0x20'
(adr) <- A


Instruction Number 619
Memory Address: 0x047d
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x38 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 620
Memory Address: 0x0480
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 621
Memory Address: 0x0481
Opcode: 0xb4
ORA H
Operands (memory order, little endian): '0x00 0x00'
A <- A | H
Z; S; P; CY; AC

Instruction Number 622
Memory Address: 0x0482
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x8a 0x04'
if NZ; PC <- adr


Instruction Number 623
Memory Address: 0x0485
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 624
Memory Address: 0x0486
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x38 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 625
Memory Address: 0x0489
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 626
Memory Address: 0x048a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x35 0x20'
D <- byte 3; E <- byte 2


Instruction Number 627
Memory Address: 0x048d
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xf9 0x00'
A <- byte 2


Instruction Number 628
Memory Address: 0x048f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x50 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 629
Memory Address: 0x0492
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x46 0x20'
A <- (adr)


Instruction Number 630
Memory Address: 0x0495
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x70 0x20'
(adr) <- A


Instruction Number 631
Memory Address: 0x0498
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x56 0x20'
A <- (adr)


Instruction Number 632
Memory Address: 0x049b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x71 0x20'
(adr) <- A


Instruction Number 633
Memory Address: 0x049e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x63 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 634
Memory Address: 0x04a1
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x78 0x20'
A <- (adr)


Instruction Number 635
Memory Address: 0x04a4
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 636
Memory Address: 0x04a5
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x35 0x20'
H <- byte 3; L <- byte 2


Instruction Number 637
Memory Address: 0x04a8
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5b 0x05'
if NZ; PC <- adr


Instruction Number 638
Memory Address: 0x04ab
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x30 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 639
Memory Address: 0x04ae
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x30 0x20'
H <- byte 3; L <- byte 2


Instruction Number 640
Memory Address: 0x04b1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 641
Memory Address: 0x04b3
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 642
Memory Address: 0x04b6
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 643
Memory Address: 0x04b7
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6e 0x20'
A <- (adr)


Instruction Number 644
Memory Address: 0x04ba
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 645
Memory Address: 0x04bb
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 646
Memory Address: 0x04bc
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x80 0x20'
A <- (adr)


Instruction Number 647
Memory Address: 0x04bf
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x01 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 648
Memory Address: 0x04c1
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 649
Memory Address: 0x04c2
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x45 0x20'
D <- byte 3; E <- byte 2


Instruction Number 650
Memory Address: 0x04c5
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xed 0x00'
A <- byte 2


Instruction Number 651
Memory Address: 0x04c7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x50 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 652
Memory Address: 0x04ca
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x36 0x20'
A <- (adr)


Instruction Number 653
Memory Address: 0x04cd
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x70 0x20'
(adr) <- A


Instruction Number 654
Memory Address: 0x04d0
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x56 0x20'
A <- (adr)


Instruction Number 655
Memory Address: 0x04d3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x71 0x20'
(adr) <- A


Instruction Number 656
Memory Address: 0x04d6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x63 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 657
Memory Address: 0x04d9
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x76 0x20'
A <- (adr)


Instruction Number 658
Memory Address: 0x04dc
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x10 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 659
Memory Address: 0x04de
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xe7 0x04'
if CY; PC<-adr


Instruction Number 660
Memory Address: 0x04e1
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x48 0x1b'
A <- (adr)


Instruction Number 661
Memory Address: 0x04e4
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x76 0x20'
(adr) <- A


Instruction Number 662
Memory Address: 0x04e7
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x78 0x20'
A <- (adr)


Instruction Number 663
Memory Address: 0x04ea
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 664
Memory Address: 0x04eb
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x45 0x20'
H <- byte 3; L <- byte 2


Instruction Number 665
Memory Address: 0x04ee
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5b 0x05'
if NZ; PC <- adr


Instruction Number 666
Memory Address: 0x04f1
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x40 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 667
Memory Address: 0x04f4
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x40 0x20'
H <- byte 3; L <- byte 2


Instruction Number 668
Memory Address: 0x04f7
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 669
Memory Address: 0x04f9
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 670
Memory Address: 0x04fc
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 671
Memory Address: 0x04ff
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 672
Memory Address: 0x0500
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x08 0x05'
if NZ; PC <- adr


Instruction Number 673
Memory Address: 0x0503
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 674
Memory Address: 0x0505
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x6e 0x20'
(adr) <- A


Instruction Number 675
Memory Address: 0x0508
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x76 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 676
Memory Address: 0x050b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x7e 0x06'
PC <= adr


Instruction Number 677
Memory Address: 0x050e
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 678
Memory Address: 0x050f
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x55 0x20'
D <- byte 3; E <- byte 2


Instruction Number 679
Memory Address: 0x0512
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xdb 0x00'
A <- byte 2


Instruction Number 680
Memory Address: 0x0514
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x50 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 681
Memory Address: 0x0517
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x46 0x20'
A <- (adr)


Instruction Number 682
Memory Address: 0x051a
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x70 0x20'
(adr) <- A


Instruction Number 683
Memory Address: 0x051d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x36 0x20'
A <- (adr)


Instruction Number 684
Memory Address: 0x0520
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x71 0x20'
(adr) <- A


Instruction Number 685
Memory Address: 0x0523
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x63 0x05'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 686
Memory Address: 0x0526
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x76 0x20'
A <- (adr)


Instruction Number 687
Memory Address: 0x0529
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x15 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 688
Memory Address: 0x052b
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x34 0x05'
if CY; PC<-adr


Instruction Number 689
Memory Address: 0x052e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x58 0x1b'
A <- (adr)


Instruction Number 690
Memory Address: 0x0531
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x76 0x20'
(adr) <- A


Instruction Number 691
Memory Address: 0x0534
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x78 0x20'
A <- (adr)


Instruction Number 692
Memory Address: 0x0537
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 693
Memory Address: 0x0538
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x55 0x20'
H <- byte 3; L <- byte 2


Instruction Number 694
Memory Address: 0x053b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5b 0x05'
if NZ; PC <- adr


Instruction Number 695
Memory Address: 0x053e
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x50 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 696
Memory Address: 0x0541
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x50 0x20'
H <- byte 3; L <- byte 2


Instruction Number 697
Memory Address: 0x0544
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 698
Memory Address: 0x0546
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 699
Memory Address: 0x0549
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x76 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 700
Memory Address: 0x054c
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x58 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 701
Memory Address: 0x054f
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 702
Memory Address: 0x0550
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x7f 0x20'
(adr) <- A


Instruction Number 703
Memory Address: 0x0553
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x73 0x20'
H <- byte 3; L <- byte 2


Instruction Number 704
Memory Address: 0x0556
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0b 0x00'
B <- byte 2


Instruction Number 705
Memory Address: 0x0558
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 706
Memory Address: 0x055b
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x73 0x20'
D <- byte 3; E <- byte 2


Instruction Number 707
Memory Address: 0x055e
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0b 0x00'
B <- byte 2


Instruction Number 708
Memory Address: 0x0560
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 709
Memory Address: 0x0563
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x73 0x20'
H <- byte 3; L <- byte 2


Instruction Number 710
Memory Address: 0x0566
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 711
Memory Address: 0x0567
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x80 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 712
Memory Address: 0x0569
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xc1 0x05'
if NZ; PC <- adr


Instruction Number 713
Memory Address: 0x056c
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc1 0x20'
A <- (adr)


Instruction Number 714
Memory Address: 0x056f
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x04 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 715
Memory Address: 0x0571
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x69 0x20'
A <- (adr)


Instruction Number 716
Memory Address: 0x0574
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xb7 0x05'
if Z; PC <- adr


Instruction Number 717
Memory Address: 0x0577
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 718
Memory Address: 0x0578
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 719
Memory Address: 0x0579
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 720
Memory Address: 0x057a
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 721
Memory Address: 0x057c
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x70 0x20'
A <- (adr)


Instruction Number 722
Memory Address: 0x057f
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 723
Memory Address: 0x0580
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x89 0x05'
if Z; PC <- adr


Instruction Number 724
Memory Address: 0x0583
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 725
Memory Address: 0x0584
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xcf 0x20'
A <- (adr)


Instruction Number 726
Memory Address: 0x0587
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 727
Memory Address: 0x0588
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 728
Memory Address: 0x0589
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x71 0x20'
A <- (adr)


Instruction Number 729
Memory Address: 0x058c
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 730
Memory Address: 0x058d
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x96 0x05'
if Z; PC <- adr


Instruction Number 731
Memory Address: 0x0590
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 732
Memory Address: 0x0591
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xcf 0x20'
A <- (adr)


Instruction Number 733
Memory Address: 0x0594
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 734
Memory Address: 0x0595
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 735
Memory Address: 0x0596
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 736
Memory Address: 0x0597
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 737
Memory Address: 0x0598
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 738
Memory Address: 0x0599
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x1b 0x06'
if Z; PC <- adr


Instruction Number 739
Memory Address: 0x059c
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x76 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 740
Memory Address: 0x059f
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 741
Memory Address: 0x05a0
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 742
Memory Address: 0x05a1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 743
Memory Address: 0x05a2
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x76 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 744
Memory Address: 0x05a5
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2f 0x06'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 745
Memory Address: 0x05a8
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 746
Memory Address: 0x05a9
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7a 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 747
Memory Address: 0x05ac
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 748
Memory Address: 0x05ad
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x07 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 749
Memory Address: 0x05af
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 750
Memory Address: 0x05b0
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 751
Memory Address: 0x05b1
Opcode: 0xd6
SUI D8
Operands (memory order, little endian): '0x0a 0x00'
A <- A - data
Z; S; P; CY; AC

Instruction Number 752
Memory Address: 0x05b3
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 753
Memory Address: 0x05b4
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x7b 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 754
Memory Address: 0x05b7
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x73 0x20'
H <- byte 3; L <- byte 2


Instruction Number 755
Memory Address: 0x05ba
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 756
Memory Address: 0x05bb
Opcode: 0xf6
ORI D8
Operands (memory order, little endian): '0x80 0x00'
A <- A | data
Z; S; P; CY; AC

Instruction Number 757
Memory Address: 0x05bd
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 758
Memory Address: 0x05be
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 759
Memory Address: 0x05bf
Opcode: 0x34
INR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)+1
Z; S; P; AC

Instruction Number 760
Memory Address: 0x05c0
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 761
Memory Address: 0x05c1
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x7c 0x20'
D <- byte 3; E <- byte 2


Instruction Number 762
Memory Address: 0x05c4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x06 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 763
Memory Address: 0x05c7
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 764
Memory Address: 0x05c8
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 765
Memory Address: 0x05c9
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 766
Memory Address: 0x05ca
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 767
Memory Address: 0x05cc
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x44 0x06'
if NZ; PC <- adr


Instruction Number 768
Memory Address: 0x05cf
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 769
Memory Address: 0x05d0
Opcode: 0x34
INR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)+1
Z; S; P; AC

Instruction Number 770
Memory Address: 0x05d1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x75 0x06'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 771
Memory Address: 0x05d4
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x79 0x20'
A <- (adr)


Instruction Number 772
Memory Address: 0x05d7
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x03 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 773
Memory Address: 0x05d9
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x7f 0x20'
H <- byte 3; L <- byte 2


Instruction Number 774
Memory Address: 0x05dc
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 775
Memory Address: 0x05dd
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xe2 0x05'
if CY; PC<-adr


Instruction Number 776
Memory Address: 0x05e0
Opcode: 0xd6
SUI D8
Operands (memory order, little endian): '0x0c 0x00'
A <- A - data
Z; S; P; CY; AC

Instruction Number 777
Memory Address: 0x05e2
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x79 0x20'
(adr) <- A


Instruction Number 778
Memory Address: 0x05e5
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x7b 0x20'
A <- (adr)


Instruction Number 779
Memory Address: 0x05e8
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 780
Memory Address: 0x05e9
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x7e 0x20'
A <- (adr)


Instruction Number 781
Memory Address: 0x05ec
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 782
Memory Address: 0x05ed
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x7b 0x20'
(adr) <- A


Instruction Number 783
Memory Address: 0x05f0
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x6c 0x06'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 784
Memory Address: 0x05f3
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x7b 0x20'
A <- (adr)


Instruction Number 785
Memory Address: 0x05f6
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x15 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 786
Memory Address: 0x05f8
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x12 0x06'
if CY; PC<-adr


Instruction Number 787
Memory Address: 0x05fb
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x61 0x20'
A <- (adr)


Instruction Number 788
Memory Address: 0x05fe
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 789
Memory Address: 0x05ff
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 790
Memory Address: 0x0600
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x7b 0x20'
A <- (adr)


Instruction Number 791
Memory Address: 0x0603
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x1e 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 792
Memory Address: 0x0605
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x12 0x06'
if CY; PC<-adr


Instruction Number 793
Memory Address: 0x0608
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x27 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 794
Memory Address: 0x060a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 795
Memory Address: 0x060b
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x12 0x06'
if NCY; PC<-adr


Instruction Number 796
Memory Address: 0x060e
Opcode: 0x97
SUB A
Operands (memory order, little endian): '0x00 0x00'
A <- A - A
Z; S; P; CY; AC

Instruction Number 797
Memory Address: 0x060f
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x15 0x20'
(adr) <- A


Instruction Number 798
Memory Address: 0x0612
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x73 0x20'
A <- (adr)


Instruction Number 799
Memory Address: 0x0615
Opcode: 0xf6
ORI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A | data
Z; S; P; CY; AC

Instruction Number 800
Memory Address: 0x0617
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x73 0x20'
(adr) <- A


Instruction Number 801
Memory Address: 0x061a
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 802
Memory Address: 0x061b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x1b 0x20'
A <- (adr)


Instruction Number 803
Memory Address: 0x061e
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x08 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 804
Memory Address: 0x0620
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 805
Memory Address: 0x0621
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x6f 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 806
Memory Address: 0x0624
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 807
Memory Address: 0x0625
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x0c 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 808
Memory Address: 0x0627
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xa5 0x05'
if CY; PC<-adr


Instruction Number 809
Memory Address: 0x062a
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0b 0x00'
C <- byte 2


Instruction Number 810
Memory Address: 0x062c
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xa5 0x05'
PC <= adr


Instruction Number 811
Memory Address: 0x062f
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 812
Memory Address: 0x0630
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 813
Memory Address: 0x0633
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 814
Memory Address: 0x0634
Opcode: 0x69
MOV L;C
Operands (memory order, little endian): '0x00 0x00'
L <- C


Instruction Number 815
Memory Address: 0x0635
Opcode: 0x16
MVI D; D8
Operands (memory order, little endian): '0x05 0x00'
D <- byte 2


Instruction Number 816
Memory Address: 0x0637
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 817
Memory Address: 0x0638
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 818
Memory Address: 0x0639
Opcode: 0x37
STC
Operands (memory order, little endian): '0x00 0x00'
CY = 1
CY

Instruction Number 819
Memory Address: 0x063a
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 820
Memory Address: 0x063b
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 821
Memory Address: 0x063c
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x0b 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 822
Memory Address: 0x063e
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 823
Memory Address: 0x063f
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 824
Memory Address: 0x0640
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x37 0x06'
if NZ; PC <- adr


Instruction Number 825
Memory Address: 0x0643
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 826
Memory Address: 0x0644
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x78 0x20'
H <- byte 3; L <- byte 2


Instruction Number 827
Memory Address: 0x0647
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 828
Memory Address: 0x0648
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 829
Memory Address: 0x0649
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x03 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 830
Memory Address: 0x064b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x67 0x06'
if NZ; PC <- adr


Instruction Number 831
Memory Address: 0x064e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x75 0x06'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 832
Memory Address: 0x0651
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xdc 0x1c'
H <- byte 3; L <- byte 2


Instruction Number 833
Memory Address: 0x0654
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x79 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 834
Memory Address: 0x0657
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x7c 0x20'
H <- byte 3; L <- byte 2


Instruction Number 835
Memory Address: 0x065a
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 836
Memory Address: 0x065b
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 837
Memory Address: 0x065c
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 838
Memory Address: 0x065d
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 839
Memory Address: 0x065e
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 840
Memory Address: 0x065f
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x06 0x00'
A <- byte 2


Instruction Number 841
Memory Address: 0x0661
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x7d 0x20'
(adr) <- A


Instruction Number 842
Memory Address: 0x0664
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6c 0x06'
PC <= adr


Instruction Number 843
Memory Address: 0x0667
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 844
Memory Address: 0x0668
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 845
Memory Address: 0x0669
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x75 0x06'
PC <= adr


Instruction Number 846
Memory Address: 0x066c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x79 0x20'
H <- byte 3; L <- byte 2


Instruction Number 847
Memory Address: 0x066f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 848
Memory Address: 0x0672
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x91 0x14'
PC <= adr


Instruction Number 849
Memory Address: 0x0675
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x79 0x20'
H <- byte 3; L <- byte 2


Instruction Number 850
Memory Address: 0x0678
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 851
Memory Address: 0x067b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x52 0x14'
PC <= adr


Instruction Number 852
Memory Address: 0x067e
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x48 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 853
Memory Address: 0x0681
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 854
Memory Address: 0x0682
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 855
Memory Address: 0x0683
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x80 0x20'
A <- (adr)


Instruction Number 856
Memory Address: 0x0686
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x02 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 857
Memory Address: 0x0688
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 858
Memory Address: 0x0689
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x83 0x20'
H <- byte 3; L <- byte 2


Instruction Number 859
Memory Address: 0x068c
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 860
Memory Address: 0x068d
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 861
Memory Address: 0x068e
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x0f 0x05'
if Z; PC <- adr


Instruction Number 862
Memory Address: 0x0691
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x56 0x20'
A <- (adr)


Instruction Number 863
Memory Address: 0x0694
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 864
Memory Address: 0x0695
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x0f 0x05'
if NZ; PC <- adr


Instruction Number 865
Memory Address: 0x0698
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 866
Memory Address: 0x0699
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 867
Memory Address: 0x069a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 868
Memory Address: 0x069b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xab 0x06'
if NZ; PC <- adr


Instruction Number 869
Memory Address: 0x069e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 870
Memory Address: 0x06a1
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x08 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 871
Memory Address: 0x06a3
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x0f 0x05'
if CY; PC<-adr


Instruction Number 872
Memory Address: 0x06a6
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 873
Memory Address: 0x06a8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3c 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 874
Memory Address: 0x06ab
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x8a 0x20'
D <- byte 3; E <- byte 2


Instruction Number 875
Memory Address: 0x06ae
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x06 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 876
Memory Address: 0x06b1
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 877
Memory Address: 0x06b2
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x85 0x20'
H <- byte 3; L <- byte 2


Instruction Number 878
Memory Address: 0x06b5
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 879
Memory Address: 0x06b6
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 880
Memory Address: 0x06b7
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xd6 0x06'
if NZ; PC <- adr


Instruction Number 881
Memory Address: 0x06ba
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x8a 0x20'
H <- byte 3; L <- byte 2


Instruction Number 882
Memory Address: 0x06bd
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 883
Memory Address: 0x06be
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 884
Memory Address: 0x06bf
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 885
Memory Address: 0x06c0
Opcode: 0x86
ADD M
Operands (memory order, little endian): '0x00 0x00'
A <- A + (HL)
Z; S; P; CY; AC

Instruction Number 886
Memory Address: 0x06c1
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x8a 0x20'
(adr) <- A


Instruction Number 887
Memory Address: 0x06c4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3c 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 888
Memory Address: 0x06c7
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x8a 0x20'
H <- byte 3; L <- byte 2


Instruction Number 889
Memory Address: 0x06ca
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 890
Memory Address: 0x06cb
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x28 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 891
Memory Address: 0x06cd
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xf9 0x06'
if CY; PC<-adr


Instruction Number 892
Memory Address: 0x06d0
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xe1 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 893
Memory Address: 0x06d2
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0xf9 0x06'
if NCY; PC<-adr


Instruction Number 894
Memory Address: 0x06d5
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 895
Memory Address: 0x06d6
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xfe 0x00'
B <- byte 2


Instruction Number 896
Memory Address: 0x06d8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xdc 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 897
Memory Address: 0x06db
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 898
Memory Address: 0x06dc
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 899
Memory Address: 0x06dd
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 900
Memory Address: 0x06de
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x1f 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 901
Memory Address: 0x06e0
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x4b 0x07'
if Z; PC <- adr


Instruction Number 902
Memory Address: 0x06e3
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x18 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 903
Memory Address: 0x06e5
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x0c 0x07'
if Z; PC <- adr


Instruction Number 904
Memory Address: 0x06e8
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 905
Memory Address: 0x06e9
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 906
Memory Address: 0x06ea
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xef 0x00'
B <- byte 2


Instruction Number 907
Memory Address: 0x06ec
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x98 0x20'
H <- byte 3; L <- byte 2


Instruction Number 908
Memory Address: 0x06ef
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 909
Memory Address: 0x06f0
Opcode: 0xa0
ANA B
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; B
Z; S; P; CY; AC

Instruction Number 910
Memory Address: 0x06f1
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 911
Memory Address: 0x06f2
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x20 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 912
Memory Address: 0x06f4
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 913
Memory Address: 0x06f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 914
Memory Address: 0x06f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 915
Memory Address: 0x06f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 916
Memory Address: 0x06f9
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x42 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 917
Memory Address: 0x06fc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcb 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 918
Memory Address: 0x06ff
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x83 0x20'
H <- byte 3; L <- byte 2


Instruction Number 919
Memory Address: 0x0702
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0a 0x00'
B <- byte 2


Instruction Number 920
Memory Address: 0x0704
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x5f 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 921
Memory Address: 0x0707
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xfe 0x00'
B <- byte 2


Instruction Number 922
Memory Address: 0x0709
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xdc 0x19'
PC <= adr


Instruction Number 923
Memory Address: 0x070c
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 924
Memory Address: 0x070e
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xf1 0x20'
(adr) <- A


Instruction Number 925
Memory Address: 0x0711
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x8d 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 926
Memory Address: 0x0714
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 927
Memory Address: 0x0715
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 928
Memory Address: 0x0717
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x50 0x1d'
H <- byte 3; L <- byte 2


Instruction Number 929
Memory Address: 0x071a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x4c 0x1d'
D <- byte 3; E <- byte 2


Instruction Number 930
Memory Address: 0x071d
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 931
Memory Address: 0x071e
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 932
Memory Address: 0x071f
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x28 0x07'
if Z; PC <- adr


Instruction Number 933
Memory Address: 0x0722
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 934
Memory Address: 0x0723
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 935
Memory Address: 0x0724
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 936
Memory Address: 0x0725
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x1d 0x07'
if NZ; PC <- adr


Instruction Number 937
Memory Address: 0x0728
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 938
Memory Address: 0x0729
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x87 0x20'
(adr) <- A


Instruction Number 939
Memory Address: 0x072c
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 940
Memory Address: 0x072e
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 941
Memory Address: 0x072f
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 942
Memory Address: 0x0730
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 943
Memory Address: 0x0731
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 944
Memory Address: 0x0732
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 945
Memory Address: 0x0733
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xf2 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 946
Memory Address: 0x0736
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x42 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 947
Memory Address: 0x0739
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf1 0x08'
PC <= adr


Instruction Number 948
Memory Address: 0x073c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x42 0x07'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 949
Memory Address: 0x073f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x39 0x14'
PC <= adr


Instruction Number 950
Memory Address: 0x0742
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x87 0x20'
H <- byte 3; L <- byte 2


Instruction Number 951
Memory Address: 0x0745
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 952
Memory Address: 0x0748
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x47 0x1a'
PC <= adr


Instruction Number 953
Memory Address: 0x074b
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 954
Memory Address: 0x074d
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x98 0x20'
H <- byte 3; L <- byte 2


Instruction Number 955
Memory Address: 0x0750
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 956
Memory Address: 0x0751
Opcode: 0xb0
ORA B
Operands (memory order, little endian): '0x00 0x00'
A <- A | B
Z; S; P; CY; AC

Instruction Number 957
Memory Address: 0x0752
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 958
Memory Address: 0x0753
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x70 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 959
Memory Address: 0x0756
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x7c 0x1d'
H <- byte 3; L <- byte 2


Instruction Number 960
Memory Address: 0x0759
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x87 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 961
Memory Address: 0x075c
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x3c 0x07'
PC <= adr


Instruction Number 962
Memory Address: 0x075f
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x83 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 963
Memory Address: 0x0762
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 964
Memory Address: 0x0765
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 965
Memory Address: 0x0767
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x93 0x20'
(adr) <- A


Instruction Number 966
Memory Address: 0x076a
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x24'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 967
Memory Address: 0x076d
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 968
Memory Address: 0x076e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x79 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 969
Memory Address: 0x0771
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 970
Memory Address: 0x0774
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x13 0x30'
H <- byte 3; L <- byte 2


Instruction Number 971
Memory Address: 0x0777
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xf3 0x1f'
D <- byte 3; E <- byte 2


Instruction Number 972
Memory Address: 0x077a
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 973
Memory Address: 0x077c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 974
Memory Address: 0x077f
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xeb 0x20'
A <- (adr)


Instruction Number 975
Memory Address: 0x0782
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 976
Memory Address: 0x0783
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x10 0x28'
H <- byte 3; L <- byte 2


Instruction Number 977
Memory Address: 0x0786
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x14 0x00'
C <- byte 2


Instruction Number 978
Memory Address: 0x0788
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x57 0x08'
if NZ; PC <- adr


Instruction Number 979
Memory Address: 0x078b
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xcf 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 980
Memory Address: 0x078e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 981
Memory Address: 0x0791
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 982
Memory Address: 0x0793
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x04 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 983
Memory Address: 0x0795
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x7f 0x07'
if Z; PC <- adr


Instruction Number 984
Memory Address: 0x0798
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x99 0x00'
B <- byte 2


Instruction Number 985
Memory Address: 0x079a
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 986
Memory Address: 0x079b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xce 0x20'
(adr) <- A


Instruction Number 987
Memory Address: 0x079e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xeb 0x20'
A <- (adr)


Instruction Number 988
Memory Address: 0x07a1
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 989
Memory Address: 0x07a2
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 990
Memory Address: 0x07a3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xeb 0x20'
(adr) <- A


Instruction Number 991
Memory Address: 0x07a6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x47 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 992
Memory Address: 0x07a9
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x00'
H <- byte 3; L <- byte 2


Instruction Number 993
Memory Address: 0x07ac
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xf8 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 994
Memory Address: 0x07af
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xfc 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 995
Memory Address: 0x07b2
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x25 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 996
Memory Address: 0x07b5
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2b 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 997
Memory Address: 0x07b8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 998
Memory Address: 0x07bb
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x01'
H <- byte 3; L <- byte 2


Instruction Number 999
Memory Address: 0x07be
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 1000
Memory Address: 0x07bf
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xef 0x20'
(adr) <- A


Instruction Number 1001
Memory Address: 0x07c2
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xe7 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 1002
Memory Address: 0x07c5
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xe5 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 1003
Memory Address: 0x07c8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x56 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1004
Memory Address: 0x07cb
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xef 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1005
Memory Address: 0x07ce
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf5 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1006
Memory Address: 0x07d1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd1 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1007
Memory Address: 0x07d4
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xff 0x21'
(adr) <- A


Instruction Number 1008
Memory Address: 0x07d7
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xff 0x22'
(adr) <- A


Instruction Number 1009
Memory Address: 0x07da
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x00'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1010
Memory Address: 0x07dd
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1011
Memory Address: 0x07de
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xfe 0x21'
(adr) <- A


Instruction Number 1012
Memory Address: 0x07e1
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xfe 0x22'
(adr) <- A


Instruction Number 1013
Memory Address: 0x07e4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1014
Memory Address: 0x07e7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x04 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1015
Memory Address: 0x07ea
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x78 0x38'
H <- byte 3; L <- byte 2


Instruction Number 1016
Memory Address: 0x07ed
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xfc 0x21'
(adr) <-L; (adr+1)<-H


Instruction Number 1017
Memory Address: 0x07f0
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xfc 0x22'
(adr) <-L; (adr+1)<-H


Instruction Number 1018
Memory Address: 0x07f3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe4 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1019
Memory Address: 0x07f6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7f 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1020
Memory Address: 0x07f9
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x8d 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1021
Memory Address: 0x07fc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1022
Memory Address: 0x07ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1023
Memory Address: 0x0800
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1024
Memory Address: 0x0801
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 1025
Memory Address: 0x0804
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcf 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1026
Memory Address: 0x0807
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1027
Memory Address: 0x080a
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1028
Memory Address: 0x080b
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x72 0x08'
if CY; PC<-adr


Instruction Number 1029
Memory Address: 0x080e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x13 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1030
Memory Address: 0x0811
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcf 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1031
Memory Address: 0x0814
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x00'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1032
Memory Address: 0x0817
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd1 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1033
Memory Address: 0x081a
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x20 0x00'
B <- byte 2


Instruction Number 1034
Memory Address: 0x081c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xfa 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1035
Memory Address: 0x081f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x18 0x16'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1036
Memory Address: 0x0822
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x0a 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1037
Memory Address: 0x0825
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1038
Memory Address: 0x0828
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x88 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1039
Memory Address: 0x082b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 1040
Memory Address: 0x082e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1041
Memory Address: 0x082f
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xef 0x09'
if Z; PC <- adr


Instruction Number 1042
Memory Address: 0x0832
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x0e 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1043
Memory Address: 0x0835
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x35 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1044
Memory Address: 0x0838
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd8 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1045
Memory Address: 0x083b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2c 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1046
Memory Address: 0x083e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1047
Memory Address: 0x0841
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x49 0x08'
if Z; PC <- adr


Instruction Number 1048
Memory Address: 0x0844
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x04 0x00'
B <- byte 2


Instruction Number 1049
Memory Address: 0x0846
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xfa 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1050
Memory Address: 0x0849
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x75 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1051
Memory Address: 0x084c
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x06 0x00'
special


Instruction Number 1052
Memory Address: 0x084e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x04 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1053
Memory Address: 0x0851
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x1f 0x08'
PC <= adr


Instruction Number 1054
Memory Address: 0x0854
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1055
Memory Address: 0x0855
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1056
Memory Address: 0x0856
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1057
Memory Address: 0x0857
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xba 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 1058
Memory Address: 0x085a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1059
Memory Address: 0x085d
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x98 0x00'
B <- byte 2


Instruction Number 1060
Memory Address: 0x085f
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 1061
Memory Address: 0x0861
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1062
Memory Address: 0x0862
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1063
Memory Address: 0x0863
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x6d 0x08'
if CY; PC<-adr


Instruction Number 1064
Memory Address: 0x0866
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1065
Memory Address: 0x0867
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x98 0x07'
if CY; PC<-adr


Instruction Number 1066
Memory Address: 0x086a
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x7f 0x07'
PC <= adr


Instruction Number 1067
Memory Address: 0x086d
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 1068
Memory Address: 0x086f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x9b 0x07'
PC <= adr


Instruction Number 1069
Memory Address: 0x0872
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x1a 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1070
Memory Address: 0x0875
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x14 0x08'
PC <= adr


Instruction Number 1071
Memory Address: 0x0878
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x08 0x20'
A <- (adr)


Instruction Number 1072
Memory Address: 0x087b
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 1073
Memory Address: 0x087c
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x09 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 1074
Memory Address: 0x087f
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 1075
Memory Address: 0x0880
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x86 0x08'
PC <= adr


Instruction Number 1076
Memory Address: 0x0883
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1077
Memory Address: 0x0884
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1078
Memory Address: 0x0885
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1079
Memory Address: 0x0886
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1080
Memory Address: 0x0889
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 1081
Memory Address: 0x088a
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xfc 0x00'
L <- byte 2


Instruction Number 1082
Memory Address: 0x088c
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1083
Memory Address: 0x088d
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x2b'
H <- byte 3; L <- byte 2


Instruction Number 1084
Memory Address: 0x0890
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x70 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 1085
Memory Address: 0x0893
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0e 0x00'
C <- byte 2


Instruction Number 1086
Memory Address: 0x0895
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1087
Memory Address: 0x0898
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1088
Memory Address: 0x089b
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1089
Memory Address: 0x089c
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x1c 0x00'
A <- byte 2


Instruction Number 1090
Memory Address: 0x089e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x37'
H <- byte 3; L <- byte 2


Instruction Number 1091
Memory Address: 0x08a1
Opcode: 0xd4
CNC adr
Operands (memory order, little endian): '0xff 0x08'
if NCY; CALL adr


Instruction Number 1092
Memory Address: 0x08a4
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xb0 0x00'
A <- byte 2


Instruction Number 1093
Memory Address: 0x08a6
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc0 0x20'
(adr) <- A


Instruction Number 1094
Memory Address: 0x08a9
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc0 0x20'
A <- (adr)


Instruction Number 1095
Memory Address: 0x08ac
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1096
Memory Address: 0x08ad
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 1097
Memory Address: 0x08ae
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x04 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1098
Memory Address: 0x08b0
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xbc 0x08'
if NZ; PC <- adr


Instruction Number 1099
Memory Address: 0x08b3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xca 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1100
Memory Address: 0x08b6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x31 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1101
Memory Address: 0x08b9
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xa9 0x08'
PC <= adr


Instruction Number 1102
Memory Address: 0x08bc
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x20 0x00'
B <- byte 2


Instruction Number 1103
Memory Address: 0x08be
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x1c 0x27'
H <- byte 3; L <- byte 2


Instruction Number 1104
Memory Address: 0x08c1
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1105
Memory Address: 0x08c4
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1106
Memory Address: 0x08c5
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xcb 0x08'
if CY; PC<-adr


Instruction Number 1107
Memory Address: 0x08c8
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x1c 0x39'
H <- byte 3; L <- byte 2


Instruction Number 1108
Memory Address: 0x08cb
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcb 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1109
Memory Address: 0x08ce
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xa9 0x08'
PC <= adr


Instruction Number 1110
Memory Address: 0x08d1
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 1111
Memory Address: 0x08d3
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x03 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1112
Memory Address: 0x08d5
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x03 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 1113
Memory Address: 0x08d7
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1114
Memory Address: 0x08d8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 1115
Memory Address: 0x08db
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x09 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1116
Memory Address: 0x08dd
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 1117
Memory Address: 0x08de
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xfb 0x00'
A <- byte 2


Instruction Number 1118
Memory Address: 0x08e0
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x7e 0x20'
(adr) <- A


Instruction Number 1119
Memory Address: 0x08e3
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1120
Memory Address: 0x08e4
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xce 0x20'
A <- (adr)


Instruction Number 1121
Memory Address: 0x08e7
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1122
Memory Address: 0x08e8
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 1123
Memory Address: 0x08e9
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x1c 0x39'
H <- byte 3; L <- byte 2


Instruction Number 1124
Memory Address: 0x08ec
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x20 0x00'
B <- byte 2


Instruction Number 1125
Memory Address: 0x08ee
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xcb 0x14'
PC <= adr


Instruction Number 1126
Memory Address: 0x08f1
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x03 0x00'
C <- byte 2


Instruction Number 1127
Memory Address: 0x08f3
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 1128
Memory Address: 0x08f4
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 1129
Memory Address: 0x08f5
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xff 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1130
Memory Address: 0x08f8
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 1131
Memory Address: 0x08f9
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 1132
Memory Address: 0x08fa
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 1133
Memory Address: 0x08fb
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xf3 0x08'
if NZ; PC <- adr


Instruction Number 1134
Memory Address: 0x08fe
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1135
Memory Address: 0x08ff
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x00 0x1e'
D <- byte 3; E <- byte 2


Instruction Number 1136
Memory Address: 0x0902
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 1137
Memory Address: 0x0903
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 1138
Memory Address: 0x0905
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 1139
Memory Address: 0x0906
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 1140
Memory Address: 0x0907
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 1141
Memory Address: 0x0908
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 1142
Memory Address: 0x0909
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 1143
Memory Address: 0x090a
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 1144
Memory Address: 0x090b
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 1145
Memory Address: 0x090c
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x08 0x00'
B <- byte 2


Instruction Number 1146
Memory Address: 0x090e
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x06 0x00'
special


Instruction Number 1147
Memory Address: 0x0910
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x39 0x14'
PC <= adr


Instruction Number 1148
Memory Address: 0x0913
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x09 0x20'
A <- (adr)


Instruction Number 1149
Memory Address: 0x0916
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x78 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1150
Memory Address: 0x0918
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 1151
Memory Address: 0x0919
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x91 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 1152
Memory Address: 0x091c
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 1153
Memory Address: 0x091d
Opcode: 0xb4
ORA H
Operands (memory order, little endian): '0x00 0x00'
A <- A | H
Z; S; P; CY; AC

Instruction Number 1154
Memory Address: 0x091e
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x29 0x09'
if NZ; PC <- adr


Instruction Number 1155
Memory Address: 0x0921
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x06'
H <- byte 3; L <- byte 2


Instruction Number 1156
Memory Address: 0x0924
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 1157
Memory Address: 0x0926
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x83 0x20'
(adr) <- A


Instruction Number 1158
Memory Address: 0x0929
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1159
Memory Address: 0x092a
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x91 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 1160
Memory Address: 0x092d
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1161
Memory Address: 0x092e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x11 0x16'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1162
Memory Address: 0x0931
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xff 0x00'
L <- byte 2


Instruction Number 1163
Memory Address: 0x0933
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1164
Memory Address: 0x0934
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1165
Memory Address: 0x0935
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x10 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1166
Memory Address: 0x0938
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1167
Memory Address: 0x0939
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1168
Memory Address: 0x093a
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1169
Memory Address: 0x093b
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1170
Memory Address: 0x093c
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 1171
Memory Address: 0x093d
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x15 0x00'
B <- byte 2


Instruction Number 1172
Memory Address: 0x093f
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 1173
Memory Address: 0x0941
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x08 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1174
Memory Address: 0x0943
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x48 0x09'
if Z; PC <- adr


Instruction Number 1175
Memory Address: 0x0946
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 1176
Memory Address: 0x0948
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xca 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1177
Memory Address: 0x094b
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1178
Memory Address: 0x094c
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1179
Memory Address: 0x094d
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 1180
Memory Address: 0x094e
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 1181
Memory Address: 0x094f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2e 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1182
Memory Address: 0x0952
Opcode: 0x34
INR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)+1
Z; S; P; AC

Instruction Number 1183
Memory Address: 0x0953
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1184
Memory Address: 0x0954
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 1185
Memory Address: 0x0955
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x25'
H <- byte 3; L <- byte 2


Instruction Number 1186
Memory Address: 0x0958
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 1187
Memory Address: 0x0959
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 1188
Memory Address: 0x095a
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 1189
Memory Address: 0x095b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x58 0x09'
if NZ; PC <- adr


Instruction Number 1190
Memory Address: 0x095e
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 1191
Memory Address: 0x0960
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x60 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 1192
Memory Address: 0x0963
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x39 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1193
Memory Address: 0x0966
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 1194
Memory Address: 0x0967
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 1195
Memory Address: 0x0968
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x8b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1196
Memory Address: 0x096b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x10 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1197
Memory Address: 0x096e
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1198
Memory Address: 0x096f
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1199
Memory Address: 0x0970
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 1200
Memory Address: 0x0972
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xff 0x00'
A <- byte 2


Instruction Number 1201
Memory Address: 0x0974
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x99 0x20'
(adr) <- A


Instruction Number 1202
Memory Address: 0x0977
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 1203
Memory Address: 0x0979
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xfa 0x18'
PC <= adr


Instruction Number 1204
Memory Address: 0x097c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xa0 0x1d'
H <- byte 3; L <- byte 2


Instruction Number 1205
Memory Address: 0x097f
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x02 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1206
Memory Address: 0x0981
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 1207
Memory Address: 0x0982
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1208
Memory Address: 0x0983
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x04 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1209
Memory Address: 0x0985
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 1210
Memory Address: 0x0986
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1211
Memory Address: 0x0987
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1212
Memory Address: 0x0988
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xca 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1213
Memory Address: 0x098b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xf1 0x20'
A <- (adr)


Instruction Number 1214
Memory Address: 0x098e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1215
Memory Address: 0x098f
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 1216
Memory Address: 0x0990
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1217
Memory Address: 0x0991
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xf1 0x20'
(adr) <- A


Instruction Number 1218
Memory Address: 0x0994
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 1219
Memory Address: 0x0995
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0xf2 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 1220
Memory Address: 0x0998
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 1221
Memory Address: 0x0999
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 1222
Memory Address: 0x099a
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1223
Memory Address: 0x099b
Opcode: 0x83
ADD E
Operands (memory order, little endian): '0x00 0x00'
A <- A + E
Z; S; P; CY; AC

Instruction Number 1224
Memory Address: 0x099c
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 1225
Memory Address: 0x099d
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1226
Memory Address: 0x099e
Opcode: 0x5f
MOV E;A
Operands (memory order, little endian): '0x00 0x00'
E <- A


Instruction Number 1227
Memory Address: 0x099f
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1228
Memory Address: 0x09a0
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1229
Memory Address: 0x09a1
Opcode: 0x8a
ADC D
Operands (memory order, little endian): '0x00 0x00'
A <- A + D + CY
Z; S; P; CY; AC

Instruction Number 1230
Memory Address: 0x09a2
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 1231
Memory Address: 0x09a3
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1232
Memory Address: 0x09a4
Opcode: 0x57
MOV D;A
Operands (memory order, little endian): '0x00 0x00'
D <- A


Instruction Number 1233
Memory Address: 0x09a5
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1234
Memory Address: 0x09a6
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1235
Memory Address: 0x09a7
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1236
Memory Address: 0x09a8
Opcode: 0x66
MOV H;M
Operands (memory order, little endian): '0x00 0x00'
H <- (HL)


Instruction Number 1237
Memory Address: 0x09a9
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 1238
Memory Address: 0x09aa
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xad 0x09'
PC <= adr


Instruction Number 1239
Memory Address: 0x09ad
Opcode: 0x7a
MOV A;D
Operands (memory order, little endian): '0x00 0x00'
A <- D


Instruction Number 1240
Memory Address: 0x09ae
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb2 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1241
Memory Address: 0x09b1
Opcode: 0x7b
MOV A;E
Operands (memory order, little endian): '0x00 0x00'
A <- E


Instruction Number 1242
Memory Address: 0x09b2
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 1243
Memory Address: 0x09b3
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 1244
Memory Address: 0x09b4
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1245
Memory Address: 0x09b5
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1246
Memory Address: 0x09b6
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1247
Memory Address: 0x09b7
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1248
Memory Address: 0x09b8
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x0f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1249
Memory Address: 0x09ba
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc5 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1250
Memory Address: 0x09bd
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 1251
Memory Address: 0x09be
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x0f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1252
Memory Address: 0x09c0
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc5 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1253
Memory Address: 0x09c3
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 1254
Memory Address: 0x09c4
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1255
Memory Address: 0x09c5
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x1a 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 1256
Memory Address: 0x09c7
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xff 0x08'
PC <= adr


Instruction Number 1257
Memory Address: 0x09ca
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1258
Memory Address: 0x09cd
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1259
Memory Address: 0x09ce
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xf8 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1260
Memory Address: 0x09d1
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 1261
Memory Address: 0x09d2
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xfc 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1262
Memory Address: 0x09d5
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1263
Memory Address: 0x09d6
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x02 0x24'
H <- byte 3; L <- byte 2


Instruction Number 1264
Memory Address: 0x09d9
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 1265
Memory Address: 0x09db
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1266
Memory Address: 0x09dc
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 1267
Memory Address: 0x09dd
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x1f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1268
Memory Address: 0x09df
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x1c 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1269
Memory Address: 0x09e1
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xe8 0x09'
if CY; PC<-adr


Instruction Number 1270
Memory Address: 0x09e4
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x06 0x00'
D <- byte 3; E <- byte 2


Instruction Number 1271
Memory Address: 0x09e7
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 1272
Memory Address: 0x09e8
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 1273
Memory Address: 0x09e9
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x40 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1274
Memory Address: 0x09eb
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xd9 0x09'
if CY; PC<-adr


Instruction Number 1275
Memory Address: 0x09ee
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1276
Memory Address: 0x09ef
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3c 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1277
Memory Address: 0x09f2
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1278
Memory Address: 0x09f3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xe9 0x20'
(adr) <- A


Instruction Number 1279
Memory Address: 0x09f6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1280
Memory Address: 0x09f9
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1281
Memory Address: 0x09fc
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 1282
Memory Address: 0x09fd
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe4 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1283
Memory Address: 0x0a00
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 1284
Memory Address: 0x0a01
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x67 0x20'
(adr) <- A


Instruction Number 1285
Memory Address: 0x0a04
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 1286
Memory Address: 0x0a07
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 1287
Memory Address: 0x0a08
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 1288
Memory Address: 0x0a09
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xfe 0x00'
L <- byte 2


Instruction Number 1289
Memory Address: 0x0a0b
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1290
Memory Address: 0x0a0c
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x07 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1291
Memory Address: 0x0a0e
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 1292
Memory Address: 0x0a0f
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1293
Memory Address: 0x0a10
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xa2 0x1d'
H <- byte 3; L <- byte 2


Instruction Number 1294
Memory Address: 0x0a13
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1295
Memory Address: 0x0a14
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 1296
Memory Address: 0x0a15
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x13 0x0a'
if NZ; PC <- adr


Instruction Number 1297
Memory Address: 0x0a18
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1298
Memory Address: 0x0a19
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 1299
Memory Address: 0x0a1a
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xfc 0x00'
L <- byte 2


Instruction Number 1300
Memory Address: 0x0a1c
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1301
Memory Address: 0x0a1d
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 1302
Memory Address: 0x0a1e
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x38 0x00'
(HL) <- byte 2


Instruction Number 1303
Memory Address: 0x0a20
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 1304
Memory Address: 0x0a21
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1305
Memory Address: 0x0a22
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x33 0x0a'
if CY; PC<-adr


Instruction Number 1306
Memory Address: 0x0a25
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x21 0x00'
A <- byte 2


Instruction Number 1307
Memory Address: 0x0a27
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x98 0x20'
(adr) <- A


Instruction Number 1308
Memory Address: 0x0a2a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf5 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1309
Memory Address: 0x0a2d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x04 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1310
Memory Address: 0x0a30
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x04 0x08'
PC <= adr


Instruction Number 1311
Memory Address: 0x0a33
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xef 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1312
Memory Address: 0x0a36
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1313
Memory Address: 0x0a39
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x04 0x08'
PC <= adr


Instruction Number 1314
Memory Address: 0x0a3c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1315
Memory Address: 0x0a3f
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x52 0x0a'
if NZ; PC <- adr


Instruction Number 1316
Memory Address: 0x0a42
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x30 0x00'
A <- byte 2


Instruction Number 1317
Memory Address: 0x0a44
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc0 0x20'
(adr) <- A


Instruction Number 1318
Memory Address: 0x0a47
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc0 0x20'
A <- (adr)


Instruction Number 1319
Memory Address: 0x0a4a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1320
Memory Address: 0x0a4b
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 1321
Memory Address: 0x0a4c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1322
Memory Address: 0x0a4f
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x47 0x0a'
if Z; PC <- adr


Instruction Number 1323
Memory Address: 0x0a52
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1324
Memory Address: 0x0a55
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x52 0x0a'
if NZ; PC <- adr


Instruction Number 1325
Memory Address: 0x0a58
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1326
Memory Address: 0x0a59
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x15 0x20'
A <- (adr)


Instruction Number 1327
Memory Address: 0x0a5c
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xff 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1328
Memory Address: 0x0a5e
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1329
Memory Address: 0x0a5f
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 1330
Memory Address: 0x0a62
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1331
Memory Address: 0x0a63
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x7c 0x0a'
if Z; PC <- adr


Instruction Number 1332
Memory Address: 0x0a66
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 1333
Memory Address: 0x0a67
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x08 0x00'
B <- byte 2


Instruction Number 1334
Memory Address: 0x0a69
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xfa 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1335
Memory Address: 0x0a6c
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 1336
Memory Address: 0x0a6d
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 1337
Memory Address: 0x0a6e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7c 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1338
Memory Address: 0x0a71
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1339
Memory Address: 0x0a72
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xf3 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1340
Memory Address: 0x0a75
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 1341
Memory Address: 0x0a77
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1342
Memory Address: 0x0a78
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1343
Memory Address: 0x0a79
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 1344
Memory Address: 0x0a7a
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 1345
Memory Address: 0x0a7c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x62 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1346
Memory Address: 0x0a7f
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1347
Memory Address: 0x0a80
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x02 0x00'
A <- byte 2


Instruction Number 1348
Memory Address: 0x0a82
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 1349
Memory Address: 0x0a85
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x06 0x00'
special


Instruction Number 1350
Memory Address: 0x0a87
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xcb 0x20'
A <- (adr)


Instruction Number 1351
Memory Address: 0x0a8a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1352
Memory Address: 0x0a8b
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x85 0x0a'
if Z; PC <- adr


Instruction Number 1353
Memory Address: 0x0a8e
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1354
Memory Address: 0x0a8f
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 1355
Memory Address: 0x0a92
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1356
Memory Address: 0x0a93
Opcode: 0xd5
PUSH D
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-E; (sp-1)<-D; sp <- sp - 2


Instruction Number 1357
Memory Address: 0x0a94
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 1358
Memory Address: 0x0a95
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xff 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1359
Memory Address: 0x0a98
Opcode: 0xd1
POP D
Operands (memory order, little endian): '0x00 0x00'
E <- (sp); D <- (sp+1); sp <- sp+2


Instruction Number 1360
Memory Address: 0x0a99
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x07 0x00'
A <- byte 2


Instruction Number 1361
Memory Address: 0x0a9b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc0 0x20'
(adr) <- A


Instruction Number 1362
Memory Address: 0x0a9e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc0 0x20'
A <- (adr)


Instruction Number 1363
Memory Address: 0x0aa1
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 1364
Memory Address: 0x0aa2
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x9e 0x0a'
if NZ; PC <- adr


Instruction Number 1365
Memory Address: 0x0aa5
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 1366
Memory Address: 0x0aa6
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 1367
Memory Address: 0x0aa7
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x93 0x0a'
if NZ; PC <- adr


Instruction Number 1368
Memory Address: 0x0aaa
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1369
Memory Address: 0x0aab
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x50 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1370
Memory Address: 0x0aae
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x4b 0x02'
PC <= adr


Instruction Number 1371
Memory Address: 0x0ab1
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x40 0x00'
A <- byte 2


Instruction Number 1372
Memory Address: 0x0ab3
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd7 0x0a'
PC <= adr


Instruction Number 1373
Memory Address: 0x0ab6
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x80 0x00'
A <- byte 2


Instruction Number 1374
Memory Address: 0x0ab8
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd7 0x0a'
PC <= adr


Instruction Number 1375
Memory Address: 0x0abb
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 1376
Memory Address: 0x0abc
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x72 0x00'
PC <= adr


Instruction Number 1377
Memory Address: 0x0abf
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc1 0x20'
A <- (adr)


Instruction Number 1378
Memory Address: 0x0ac2
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1379
Memory Address: 0x0ac3
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xbb 0x0a'
if CY; PC<-adr


Instruction Number 1380
Memory Address: 0x0ac6
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1381
Memory Address: 0x0ac7
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x68 0x18'
if CY; PC<-adr


Instruction Number 1382
Memory Address: 0x0aca
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 1383
Memory Address: 0x0acb
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xab 0x0a'
if CY; PC<-adr


Instruction Number 1384
Memory Address: 0x0ace
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1385
Memory Address: 0x0acf
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x14 0x2b'
H <- byte 3; L <- byte 2


Instruction Number 1386
Memory Address: 0x0ad2
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0f 0x00'
C <- byte 2


Instruction Number 1387
Memory Address: 0x0ad4
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x93 0x0a'
PC <= adr


Instruction Number 1388
Memory Address: 0x0ad7
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc0 0x20'
(adr) <- A


Instruction Number 1389
Memory Address: 0x0ada
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc0 0x20'
A <- (adr)


Instruction Number 1390
Memory Address: 0x0add
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1391
Memory Address: 0x0ade
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xda 0x0a'
if NZ; PC <- adr


Instruction Number 1392
Memory Address: 0x0ae1
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 1393
Memory Address: 0x0ae2
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xc2 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1394
Memory Address: 0x0ae5
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0c 0x00'
B <- byte 2


Instruction Number 1395
Memory Address: 0x0ae7
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x32 0x1a'
PC <= adr


Instruction Number 1396
Memory Address: 0x0aea
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1397
Memory Address: 0x0aeb
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 1398
Memory Address: 0x0aed
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 1399
Memory Address: 0x0aef
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x82 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1400
Memory Address: 0x0af2
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 1401
Memory Address: 0x0af3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1402
Memory Address: 0x0af6
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xec 0x20'
A <- (adr)


Instruction Number 1403
Memory Address: 0x0af9
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1404
Memory Address: 0x0afa
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x17 0x30'
H <- byte 3; L <- byte 2


Instruction Number 1405
Memory Address: 0x0afd
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 1406
Memory Address: 0x0aff
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xe8 0x0b'
if NZ; PC <- adr


Instruction Number 1407
Memory Address: 0x0b02
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xfa 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 1408
Memory Address: 0x0b05
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1409
Memory Address: 0x0b08
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xaf 0x1d'
D <- byte 3; E <- byte 2


Instruction Number 1410
Memory Address: 0x0b0b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcf 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1411
Memory Address: 0x0b0e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1412
Memory Address: 0x0b11
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x15 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1413
Memory Address: 0x0b14
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb6 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1414
Memory Address: 0x0b17
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xec 0x20'
A <- (adr)


Instruction Number 1415
Memory Address: 0x0b1a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1416
Memory Address: 0x0b1b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x4a 0x0b'
if NZ; PC <- adr


Instruction Number 1417
Memory Address: 0x0b1e
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x95 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 1418
Memory Address: 0x0b21
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe2 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1419
Memory Address: 0x0b24
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x80 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1420
Memory Address: 0x0b27
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xb0 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 1421
Memory Address: 0x0b2a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe2 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1422
Memory Address: 0x0b2d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x80 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1423
Memory Address: 0x0b30
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1424
Memory Address: 0x0b33
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xc9 0x1f'
D <- byte 3; E <- byte 2


Instruction Number 1425
Memory Address: 0x0b36
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe2 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1426
Memory Address: 0x0b39
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x80 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1427
Memory Address: 0x0b3c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1428
Memory Address: 0x0b3f
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xb7 0x33'
H <- byte 3; L <- byte 2


Instruction Number 1429
Memory Address: 0x0b42
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0a 0x00'
B <- byte 2


Instruction Number 1430
Memory Address: 0x0b44
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcb 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1431
Memory Address: 0x0b47
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb6 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1432
Memory Address: 0x0b4a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1433
Memory Address: 0x0b4d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xff 0x21'
A <- (adr)


Instruction Number 1434
Memory Address: 0x0b50
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 1435
Memory Address: 0x0b51
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5d 0x0b'
if NZ; PC <- adr


Instruction Number 1436
Memory Address: 0x0b54
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd1 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1437
Memory Address: 0x0b57
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xff 0x21'
(adr) <- A


Instruction Number 1438
Memory Address: 0x0b5a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x7f 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1439
Memory Address: 0x0b5d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe4 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1440
Memory Address: 0x0b60
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1441
Memory Address: 0x0b63
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xef 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1442
Memory Address: 0x0b66
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x1a 0x02'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1443
Memory Address: 0x0b69
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 1444
Memory Address: 0x0b6b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 1445
Memory Address: 0x0b6e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcf 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1446
Memory Address: 0x0b71
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x18 0x16'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1447
Memory Address: 0x0b74
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf1 0x0b'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1448
Memory Address: 0x0b77
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x06 0x00'
special


Instruction Number 1449
Memory Address: 0x0b79
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1450
Memory Address: 0x0b7c
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x71 0x0b'
if Z; PC <- adr


Instruction Number 1451
Memory Address: 0x0b7f
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1452
Memory Address: 0x0b80
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x25 0x20'
(adr) <- A


Instruction Number 1453
Memory Address: 0x0b83
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1454
Memory Address: 0x0b86
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x83 0x0b'
if NZ; PC <- adr


Instruction Number 1455
Memory Address: 0x0b89
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 1456
Memory Address: 0x0b8a
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 1457
Memory Address: 0x0b8d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1458
Memory Address: 0x0b90
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x88 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1459
Memory Address: 0x0b93
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0c 0x00'
C <- byte 2


Instruction Number 1460
Memory Address: 0x0b95
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x2c'
H <- byte 3; L <- byte 2


Instruction Number 1461
Memory Address: 0x0b98
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x90 0x1f'
D <- byte 3; E <- byte 2


Instruction Number 1462
Memory Address: 0x0b9b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1463
Memory Address: 0x0b9e
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xec 0x20'
A <- (adr)


Instruction Number 1464
Memory Address: 0x0ba1
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x00 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1465
Memory Address: 0x0ba3
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xae 0x0b'
if NZ; PC <- adr


Instruction Number 1466
Memory Address: 0x0ba6
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x33'
H <- byte 3; L <- byte 2


Instruction Number 1467
Memory Address: 0x0ba9
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x02 0x00'
A <- byte 2


Instruction Number 1468
Memory Address: 0x0bab
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xff 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1469
Memory Address: 0x0bae
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x9c 0x1f'
B <- byte 3; C <- byte 2


Instruction Number 1470
Memory Address: 0x0bb1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x56 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1471
Memory Address: 0x0bb4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x4c 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1472
Memory Address: 0x0bb7
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 1473
Memory Address: 0x0bb9
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 1474
Memory Address: 0x0bba
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xc3 0x0b'
if CY; PC<-adr


Instruction Number 1475
Memory Address: 0x0bbd
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xa0 0x1f'
B <- byte 3; C <- byte 2


Instruction Number 1476
Memory Address: 0x0bc0
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3a 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1477
Memory Address: 0x0bc3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb6 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1478
Memory Address: 0x0bc6
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xec 0x20'
A <- (adr)


Instruction Number 1479
Memory Address: 0x0bc9
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x00 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 1480
Memory Address: 0x0bcb
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xda 0x0b'
if NZ; PC <- adr


Instruction Number 1481
Memory Address: 0x0bce
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xd5 0x1f'
D <- byte 3; E <- byte 2


Instruction Number 1482
Memory Address: 0x0bd1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe2 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1483
Memory Address: 0x0bd4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x80 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1484
Memory Address: 0x0bd7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x9e 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1485
Memory Address: 0x0bda
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xec 0x20'
H <- byte 3; L <- byte 2


Instruction Number 1486
Memory Address: 0x0bdd
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 1487
Memory Address: 0x0bde
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 1488
Memory Address: 0x0bdf
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 1489
Memory Address: 0x0be1
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 1490
Memory Address: 0x0be2
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1491
Memory Address: 0x0be5
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xdf 0x18'
PC <= adr


Instruction Number 1492
Memory Address: 0x0be8
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xab 0x1d'
D <- byte 3; E <- byte 2


Instruction Number 1493
Memory Address: 0x0beb
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1494
Memory Address: 0x0bee
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x0b 0x0b'
PC <= adr


Instruction Number 1495
Memory Address: 0x0bf1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x0a 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 1496
Memory Address: 0x0bf4
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x9a 0x19'
PC <= adr


Instruction Number 1497
Memory Address: 0x0bf7
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 1498
Memory Address: 0x0bf8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1499
Memory Address: 0x0bf9
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1500
Memory Address: 0x0bfa
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 1501
Memory Address: 0x0bfb
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x26 0x00'
C <- byte 2


Instruction Number 1502
Memory Address: 0x0bfd
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 1503
Memory Address: 0x0bfe
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0f 0x00'
C <- byte 2


Instruction Number 1504
Memory Address: 0x0c00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1505
Memory Address: 0x0c01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1506
Memory Address: 0x0c02
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1507
Memory Address: 0x0c03
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1508
Memory Address: 0x0c04
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1509
Memory Address: 0x0c05
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1510
Memory Address: 0x0c06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1511
Memory Address: 0x0c07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1512
Memory Address: 0x0c08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1513
Memory Address: 0x0c09
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1514
Memory Address: 0x0c0a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1515
Memory Address: 0x0c0b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1516
Memory Address: 0x0c0c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1517
Memory Address: 0x0c0d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1518
Memory Address: 0x0c0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1519
Memory Address: 0x0c0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1520
Memory Address: 0x0c10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1521
Memory Address: 0x0c11
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1522
Memory Address: 0x0c12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1523
Memory Address: 0x0c13
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1524
Memory Address: 0x0c14
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1525
Memory Address: 0x0c15
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1526
Memory Address: 0x0c16
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1527
Memory Address: 0x0c17
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1528
Memory Address: 0x0c18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1529
Memory Address: 0x0c19
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1530
Memory Address: 0x0c1a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1531
Memory Address: 0x0c1b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1532
Memory Address: 0x0c1c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1533
Memory Address: 0x0c1d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1534
Memory Address: 0x0c1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1535
Memory Address: 0x0c1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1536
Memory Address: 0x0c20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1537
Memory Address: 0x0c21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1538
Memory Address: 0x0c22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1539
Memory Address: 0x0c23
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1540
Memory Address: 0x0c24
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1541
Memory Address: 0x0c25
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1542
Memory Address: 0x0c26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1543
Memory Address: 0x0c27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1544
Memory Address: 0x0c28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1545
Memory Address: 0x0c29
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1546
Memory Address: 0x0c2a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1547
Memory Address: 0x0c2b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1548
Memory Address: 0x0c2c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1549
Memory Address: 0x0c2d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1550
Memory Address: 0x0c2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1551
Memory Address: 0x0c2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1552
Memory Address: 0x0c30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1553
Memory Address: 0x0c31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1554
Memory Address: 0x0c32
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1555
Memory Address: 0x0c33
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1556
Memory Address: 0x0c34
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1557
Memory Address: 0x0c35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1558
Memory Address: 0x0c36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1559
Memory Address: 0x0c37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1560
Memory Address: 0x0c38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1561
Memory Address: 0x0c39
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1562
Memory Address: 0x0c3a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1563
Memory Address: 0x0c3b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1564
Memory Address: 0x0c3c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1565
Memory Address: 0x0c3d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1566
Memory Address: 0x0c3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1567
Memory Address: 0x0c3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1568
Memory Address: 0x0c40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1569
Memory Address: 0x0c41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1570
Memory Address: 0x0c42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1571
Memory Address: 0x0c43
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1572
Memory Address: 0x0c44
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1573
Memory Address: 0x0c45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1574
Memory Address: 0x0c46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1575
Memory Address: 0x0c47
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1576
Memory Address: 0x0c48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1577
Memory Address: 0x0c49
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1578
Memory Address: 0x0c4a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1579
Memory Address: 0x0c4b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1580
Memory Address: 0x0c4c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1581
Memory Address: 0x0c4d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1582
Memory Address: 0x0c4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1583
Memory Address: 0x0c4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1584
Memory Address: 0x0c50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1585
Memory Address: 0x0c51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1586
Memory Address: 0x0c52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1587
Memory Address: 0x0c53
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1588
Memory Address: 0x0c54
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1589
Memory Address: 0x0c55
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1590
Memory Address: 0x0c56
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1591
Memory Address: 0x0c57
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1592
Memory Address: 0x0c58
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1593
Memory Address: 0x0c59
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1594
Memory Address: 0x0c5a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1595
Memory Address: 0x0c5b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1596
Memory Address: 0x0c5c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1597
Memory Address: 0x0c5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1598
Memory Address: 0x0c5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1599
Memory Address: 0x0c5f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1600
Memory Address: 0x0c60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1601
Memory Address: 0x0c61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1602
Memory Address: 0x0c62
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1603
Memory Address: 0x0c63
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1604
Memory Address: 0x0c64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1605
Memory Address: 0x0c65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1606
Memory Address: 0x0c66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1607
Memory Address: 0x0c67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1608
Memory Address: 0x0c68
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1609
Memory Address: 0x0c69
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1610
Memory Address: 0x0c6a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1611
Memory Address: 0x0c6b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1612
Memory Address: 0x0c6c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1613
Memory Address: 0x0c6d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1614
Memory Address: 0x0c6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1615
Memory Address: 0x0c6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1616
Memory Address: 0x0c70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1617
Memory Address: 0x0c71
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1618
Memory Address: 0x0c72
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1619
Memory Address: 0x0c73
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1620
Memory Address: 0x0c74
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1621
Memory Address: 0x0c75
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1622
Memory Address: 0x0c76
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1623
Memory Address: 0x0c77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1624
Memory Address: 0x0c78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1625
Memory Address: 0x0c79
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1626
Memory Address: 0x0c7a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1627
Memory Address: 0x0c7b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1628
Memory Address: 0x0c7c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1629
Memory Address: 0x0c7d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1630
Memory Address: 0x0c7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1631
Memory Address: 0x0c7f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1632
Memory Address: 0x0c80
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1633
Memory Address: 0x0c81
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1634
Memory Address: 0x0c82
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1635
Memory Address: 0x0c83
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1636
Memory Address: 0x0c84
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1637
Memory Address: 0x0c85
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1638
Memory Address: 0x0c86
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1639
Memory Address: 0x0c87
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1640
Memory Address: 0x0c88
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1641
Memory Address: 0x0c89
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1642
Memory Address: 0x0c8a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1643
Memory Address: 0x0c8b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1644
Memory Address: 0x0c8c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1645
Memory Address: 0x0c8d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1646
Memory Address: 0x0c8e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1647
Memory Address: 0x0c8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1648
Memory Address: 0x0c90
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1649
Memory Address: 0x0c91
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1650
Memory Address: 0x0c92
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1651
Memory Address: 0x0c93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1652
Memory Address: 0x0c94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1653
Memory Address: 0x0c95
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1654
Memory Address: 0x0c96
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1655
Memory Address: 0x0c97
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1656
Memory Address: 0x0c98
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1657
Memory Address: 0x0c99
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1658
Memory Address: 0x0c9a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1659
Memory Address: 0x0c9b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1660
Memory Address: 0x0c9c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1661
Memory Address: 0x0c9d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1662
Memory Address: 0x0c9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1663
Memory Address: 0x0c9f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1664
Memory Address: 0x0ca0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1665
Memory Address: 0x0ca1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1666
Memory Address: 0x0ca2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1667
Memory Address: 0x0ca3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1668
Memory Address: 0x0ca4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1669
Memory Address: 0x0ca5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1670
Memory Address: 0x0ca6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1671
Memory Address: 0x0ca7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1672
Memory Address: 0x0ca8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1673
Memory Address: 0x0ca9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1674
Memory Address: 0x0caa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1675
Memory Address: 0x0cab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1676
Memory Address: 0x0cac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1677
Memory Address: 0x0cad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1678
Memory Address: 0x0cae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1679
Memory Address: 0x0caf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1680
Memory Address: 0x0cb0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1681
Memory Address: 0x0cb1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1682
Memory Address: 0x0cb2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1683
Memory Address: 0x0cb3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1684
Memory Address: 0x0cb4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1685
Memory Address: 0x0cb5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1686
Memory Address: 0x0cb6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1687
Memory Address: 0x0cb7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1688
Memory Address: 0x0cb8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1689
Memory Address: 0x0cb9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1690
Memory Address: 0x0cba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1691
Memory Address: 0x0cbb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1692
Memory Address: 0x0cbc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1693
Memory Address: 0x0cbd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1694
Memory Address: 0x0cbe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1695
Memory Address: 0x0cbf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1696
Memory Address: 0x0cc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1697
Memory Address: 0x0cc1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1698
Memory Address: 0x0cc2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1699
Memory Address: 0x0cc3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1700
Memory Address: 0x0cc4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1701
Memory Address: 0x0cc5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1702
Memory Address: 0x0cc6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1703
Memory Address: 0x0cc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1704
Memory Address: 0x0cc8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1705
Memory Address: 0x0cc9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1706
Memory Address: 0x0cca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1707
Memory Address: 0x0ccb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1708
Memory Address: 0x0ccc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1709
Memory Address: 0x0ccd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1710
Memory Address: 0x0cce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1711
Memory Address: 0x0ccf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1712
Memory Address: 0x0cd0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1713
Memory Address: 0x0cd1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1714
Memory Address: 0x0cd2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1715
Memory Address: 0x0cd3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1716
Memory Address: 0x0cd4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1717
Memory Address: 0x0cd5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1718
Memory Address: 0x0cd6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1719
Memory Address: 0x0cd7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1720
Memory Address: 0x0cd8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1721
Memory Address: 0x0cd9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1722
Memory Address: 0x0cda
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1723
Memory Address: 0x0cdb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1724
Memory Address: 0x0cdc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1725
Memory Address: 0x0cdd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1726
Memory Address: 0x0cde
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1727
Memory Address: 0x0cdf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1728
Memory Address: 0x0ce0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1729
Memory Address: 0x0ce1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1730
Memory Address: 0x0ce2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1731
Memory Address: 0x0ce3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1732
Memory Address: 0x0ce4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1733
Memory Address: 0x0ce5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1734
Memory Address: 0x0ce6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1735
Memory Address: 0x0ce7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1736
Memory Address: 0x0ce8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1737
Memory Address: 0x0ce9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1738
Memory Address: 0x0cea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1739
Memory Address: 0x0ceb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1740
Memory Address: 0x0cec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1741
Memory Address: 0x0ced
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1742
Memory Address: 0x0cee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1743
Memory Address: 0x0cef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1744
Memory Address: 0x0cf0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1745
Memory Address: 0x0cf1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1746
Memory Address: 0x0cf2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1747
Memory Address: 0x0cf3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1748
Memory Address: 0x0cf4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1749
Memory Address: 0x0cf5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1750
Memory Address: 0x0cf6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1751
Memory Address: 0x0cf7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1752
Memory Address: 0x0cf8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1753
Memory Address: 0x0cf9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1754
Memory Address: 0x0cfa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1755
Memory Address: 0x0cfb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1756
Memory Address: 0x0cfc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1757
Memory Address: 0x0cfd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1758
Memory Address: 0x0cfe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1759
Memory Address: 0x0cff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1760
Memory Address: 0x0d00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1761
Memory Address: 0x0d01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1762
Memory Address: 0x0d02
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1763
Memory Address: 0x0d03
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1764
Memory Address: 0x0d04
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1765
Memory Address: 0x0d05
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1766
Memory Address: 0x0d06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1767
Memory Address: 0x0d07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1768
Memory Address: 0x0d08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1769
Memory Address: 0x0d09
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1770
Memory Address: 0x0d0a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1771
Memory Address: 0x0d0b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1772
Memory Address: 0x0d0c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1773
Memory Address: 0x0d0d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1774
Memory Address: 0x0d0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1775
Memory Address: 0x0d0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1776
Memory Address: 0x0d10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1777
Memory Address: 0x0d11
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1778
Memory Address: 0x0d12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1779
Memory Address: 0x0d13
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1780
Memory Address: 0x0d14
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1781
Memory Address: 0x0d15
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1782
Memory Address: 0x0d16
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1783
Memory Address: 0x0d17
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1784
Memory Address: 0x0d18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1785
Memory Address: 0x0d19
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1786
Memory Address: 0x0d1a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1787
Memory Address: 0x0d1b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1788
Memory Address: 0x0d1c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1789
Memory Address: 0x0d1d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1790
Memory Address: 0x0d1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1791
Memory Address: 0x0d1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1792
Memory Address: 0x0d20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1793
Memory Address: 0x0d21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1794
Memory Address: 0x0d22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1795
Memory Address: 0x0d23
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1796
Memory Address: 0x0d24
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1797
Memory Address: 0x0d25
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1798
Memory Address: 0x0d26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1799
Memory Address: 0x0d27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1800
Memory Address: 0x0d28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1801
Memory Address: 0x0d29
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1802
Memory Address: 0x0d2a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1803
Memory Address: 0x0d2b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1804
Memory Address: 0x0d2c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1805
Memory Address: 0x0d2d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1806
Memory Address: 0x0d2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1807
Memory Address: 0x0d2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1808
Memory Address: 0x0d30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1809
Memory Address: 0x0d31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1810
Memory Address: 0x0d32
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1811
Memory Address: 0x0d33
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1812
Memory Address: 0x0d34
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1813
Memory Address: 0x0d35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1814
Memory Address: 0x0d36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1815
Memory Address: 0x0d37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1816
Memory Address: 0x0d38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1817
Memory Address: 0x0d39
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1818
Memory Address: 0x0d3a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1819
Memory Address: 0x0d3b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1820
Memory Address: 0x0d3c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1821
Memory Address: 0x0d3d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1822
Memory Address: 0x0d3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1823
Memory Address: 0x0d3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1824
Memory Address: 0x0d40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1825
Memory Address: 0x0d41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1826
Memory Address: 0x0d42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1827
Memory Address: 0x0d43
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1828
Memory Address: 0x0d44
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1829
Memory Address: 0x0d45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1830
Memory Address: 0x0d46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1831
Memory Address: 0x0d47
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1832
Memory Address: 0x0d48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1833
Memory Address: 0x0d49
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1834
Memory Address: 0x0d4a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1835
Memory Address: 0x0d4b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1836
Memory Address: 0x0d4c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1837
Memory Address: 0x0d4d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1838
Memory Address: 0x0d4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1839
Memory Address: 0x0d4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1840
Memory Address: 0x0d50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1841
Memory Address: 0x0d51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1842
Memory Address: 0x0d52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1843
Memory Address: 0x0d53
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1844
Memory Address: 0x0d54
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1845
Memory Address: 0x0d55
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1846
Memory Address: 0x0d56
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1847
Memory Address: 0x0d57
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1848
Memory Address: 0x0d58
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1849
Memory Address: 0x0d59
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1850
Memory Address: 0x0d5a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1851
Memory Address: 0x0d5b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1852
Memory Address: 0x0d5c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1853
Memory Address: 0x0d5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1854
Memory Address: 0x0d5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1855
Memory Address: 0x0d5f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1856
Memory Address: 0x0d60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1857
Memory Address: 0x0d61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1858
Memory Address: 0x0d62
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1859
Memory Address: 0x0d63
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1860
Memory Address: 0x0d64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1861
Memory Address: 0x0d65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1862
Memory Address: 0x0d66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1863
Memory Address: 0x0d67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1864
Memory Address: 0x0d68
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1865
Memory Address: 0x0d69
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1866
Memory Address: 0x0d6a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1867
Memory Address: 0x0d6b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1868
Memory Address: 0x0d6c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1869
Memory Address: 0x0d6d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1870
Memory Address: 0x0d6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1871
Memory Address: 0x0d6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1872
Memory Address: 0x0d70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1873
Memory Address: 0x0d71
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1874
Memory Address: 0x0d72
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1875
Memory Address: 0x0d73
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1876
Memory Address: 0x0d74
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1877
Memory Address: 0x0d75
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1878
Memory Address: 0x0d76
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1879
Memory Address: 0x0d77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1880
Memory Address: 0x0d78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1881
Memory Address: 0x0d79
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1882
Memory Address: 0x0d7a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1883
Memory Address: 0x0d7b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1884
Memory Address: 0x0d7c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1885
Memory Address: 0x0d7d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1886
Memory Address: 0x0d7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1887
Memory Address: 0x0d7f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1888
Memory Address: 0x0d80
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1889
Memory Address: 0x0d81
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1890
Memory Address: 0x0d82
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1891
Memory Address: 0x0d83
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1892
Memory Address: 0x0d84
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1893
Memory Address: 0x0d85
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1894
Memory Address: 0x0d86
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1895
Memory Address: 0x0d87
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1896
Memory Address: 0x0d88
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1897
Memory Address: 0x0d89
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1898
Memory Address: 0x0d8a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1899
Memory Address: 0x0d8b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1900
Memory Address: 0x0d8c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1901
Memory Address: 0x0d8d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1902
Memory Address: 0x0d8e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1903
Memory Address: 0x0d8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1904
Memory Address: 0x0d90
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1905
Memory Address: 0x0d91
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1906
Memory Address: 0x0d92
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1907
Memory Address: 0x0d93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1908
Memory Address: 0x0d94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1909
Memory Address: 0x0d95
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1910
Memory Address: 0x0d96
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1911
Memory Address: 0x0d97
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1912
Memory Address: 0x0d98
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1913
Memory Address: 0x0d99
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1914
Memory Address: 0x0d9a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1915
Memory Address: 0x0d9b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1916
Memory Address: 0x0d9c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1917
Memory Address: 0x0d9d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1918
Memory Address: 0x0d9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1919
Memory Address: 0x0d9f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1920
Memory Address: 0x0da0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1921
Memory Address: 0x0da1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1922
Memory Address: 0x0da2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1923
Memory Address: 0x0da3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1924
Memory Address: 0x0da4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1925
Memory Address: 0x0da5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1926
Memory Address: 0x0da6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1927
Memory Address: 0x0da7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1928
Memory Address: 0x0da8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1929
Memory Address: 0x0da9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1930
Memory Address: 0x0daa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1931
Memory Address: 0x0dab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1932
Memory Address: 0x0dac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1933
Memory Address: 0x0dad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1934
Memory Address: 0x0dae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1935
Memory Address: 0x0daf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1936
Memory Address: 0x0db0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1937
Memory Address: 0x0db1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1938
Memory Address: 0x0db2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1939
Memory Address: 0x0db3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1940
Memory Address: 0x0db4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1941
Memory Address: 0x0db5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1942
Memory Address: 0x0db6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1943
Memory Address: 0x0db7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1944
Memory Address: 0x0db8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1945
Memory Address: 0x0db9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1946
Memory Address: 0x0dba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1947
Memory Address: 0x0dbb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1948
Memory Address: 0x0dbc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1949
Memory Address: 0x0dbd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1950
Memory Address: 0x0dbe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1951
Memory Address: 0x0dbf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1952
Memory Address: 0x0dc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1953
Memory Address: 0x0dc1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1954
Memory Address: 0x0dc2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1955
Memory Address: 0x0dc3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1956
Memory Address: 0x0dc4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1957
Memory Address: 0x0dc5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1958
Memory Address: 0x0dc6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1959
Memory Address: 0x0dc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1960
Memory Address: 0x0dc8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1961
Memory Address: 0x0dc9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1962
Memory Address: 0x0dca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1963
Memory Address: 0x0dcb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1964
Memory Address: 0x0dcc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1965
Memory Address: 0x0dcd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1966
Memory Address: 0x0dce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1967
Memory Address: 0x0dcf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1968
Memory Address: 0x0dd0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1969
Memory Address: 0x0dd1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1970
Memory Address: 0x0dd2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1971
Memory Address: 0x0dd3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1972
Memory Address: 0x0dd4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1973
Memory Address: 0x0dd5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1974
Memory Address: 0x0dd6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1975
Memory Address: 0x0dd7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1976
Memory Address: 0x0dd8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1977
Memory Address: 0x0dd9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1978
Memory Address: 0x0dda
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1979
Memory Address: 0x0ddb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1980
Memory Address: 0x0ddc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1981
Memory Address: 0x0ddd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1982
Memory Address: 0x0dde
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1983
Memory Address: 0x0ddf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1984
Memory Address: 0x0de0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1985
Memory Address: 0x0de1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1986
Memory Address: 0x0de2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1987
Memory Address: 0x0de3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1988
Memory Address: 0x0de4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1989
Memory Address: 0x0de5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1990
Memory Address: 0x0de6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1991
Memory Address: 0x0de7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1992
Memory Address: 0x0de8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1993
Memory Address: 0x0de9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1994
Memory Address: 0x0dea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1995
Memory Address: 0x0deb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1996
Memory Address: 0x0dec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1997
Memory Address: 0x0ded
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1998
Memory Address: 0x0dee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 1999
Memory Address: 0x0def
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2000
Memory Address: 0x0df0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2001
Memory Address: 0x0df1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2002
Memory Address: 0x0df2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2003
Memory Address: 0x0df3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2004
Memory Address: 0x0df4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2005
Memory Address: 0x0df5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2006
Memory Address: 0x0df6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2007
Memory Address: 0x0df7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2008
Memory Address: 0x0df8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2009
Memory Address: 0x0df9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2010
Memory Address: 0x0dfa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2011
Memory Address: 0x0dfb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2012
Memory Address: 0x0dfc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2013
Memory Address: 0x0dfd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2014
Memory Address: 0x0dfe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2015
Memory Address: 0x0dff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2016
Memory Address: 0x0e00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2017
Memory Address: 0x0e01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2018
Memory Address: 0x0e02
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2019
Memory Address: 0x0e03
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2020
Memory Address: 0x0e04
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2021
Memory Address: 0x0e05
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2022
Memory Address: 0x0e06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2023
Memory Address: 0x0e07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2024
Memory Address: 0x0e08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2025
Memory Address: 0x0e09
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2026
Memory Address: 0x0e0a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2027
Memory Address: 0x0e0b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2028
Memory Address: 0x0e0c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2029
Memory Address: 0x0e0d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2030
Memory Address: 0x0e0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2031
Memory Address: 0x0e0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2032
Memory Address: 0x0e10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2033
Memory Address: 0x0e11
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2034
Memory Address: 0x0e12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2035
Memory Address: 0x0e13
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2036
Memory Address: 0x0e14
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2037
Memory Address: 0x0e15
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2038
Memory Address: 0x0e16
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2039
Memory Address: 0x0e17
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2040
Memory Address: 0x0e18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2041
Memory Address: 0x0e19
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2042
Memory Address: 0x0e1a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2043
Memory Address: 0x0e1b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2044
Memory Address: 0x0e1c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2045
Memory Address: 0x0e1d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2046
Memory Address: 0x0e1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2047
Memory Address: 0x0e1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2048
Memory Address: 0x0e20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2049
Memory Address: 0x0e21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2050
Memory Address: 0x0e22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2051
Memory Address: 0x0e23
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2052
Memory Address: 0x0e24
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2053
Memory Address: 0x0e25
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2054
Memory Address: 0x0e26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2055
Memory Address: 0x0e27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2056
Memory Address: 0x0e28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2057
Memory Address: 0x0e29
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2058
Memory Address: 0x0e2a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2059
Memory Address: 0x0e2b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2060
Memory Address: 0x0e2c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2061
Memory Address: 0x0e2d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2062
Memory Address: 0x0e2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2063
Memory Address: 0x0e2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2064
Memory Address: 0x0e30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2065
Memory Address: 0x0e31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2066
Memory Address: 0x0e32
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2067
Memory Address: 0x0e33
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2068
Memory Address: 0x0e34
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2069
Memory Address: 0x0e35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2070
Memory Address: 0x0e36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2071
Memory Address: 0x0e37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2072
Memory Address: 0x0e38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2073
Memory Address: 0x0e39
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2074
Memory Address: 0x0e3a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2075
Memory Address: 0x0e3b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2076
Memory Address: 0x0e3c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2077
Memory Address: 0x0e3d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2078
Memory Address: 0x0e3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2079
Memory Address: 0x0e3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2080
Memory Address: 0x0e40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2081
Memory Address: 0x0e41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2082
Memory Address: 0x0e42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2083
Memory Address: 0x0e43
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2084
Memory Address: 0x0e44
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2085
Memory Address: 0x0e45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2086
Memory Address: 0x0e46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2087
Memory Address: 0x0e47
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2088
Memory Address: 0x0e48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2089
Memory Address: 0x0e49
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2090
Memory Address: 0x0e4a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2091
Memory Address: 0x0e4b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2092
Memory Address: 0x0e4c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2093
Memory Address: 0x0e4d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2094
Memory Address: 0x0e4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2095
Memory Address: 0x0e4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2096
Memory Address: 0x0e50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2097
Memory Address: 0x0e51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2098
Memory Address: 0x0e52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2099
Memory Address: 0x0e53
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2100
Memory Address: 0x0e54
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2101
Memory Address: 0x0e55
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2102
Memory Address: 0x0e56
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2103
Memory Address: 0x0e57
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2104
Memory Address: 0x0e58
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2105
Memory Address: 0x0e59
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2106
Memory Address: 0x0e5a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2107
Memory Address: 0x0e5b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2108
Memory Address: 0x0e5c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2109
Memory Address: 0x0e5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2110
Memory Address: 0x0e5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2111
Memory Address: 0x0e5f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2112
Memory Address: 0x0e60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2113
Memory Address: 0x0e61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2114
Memory Address: 0x0e62
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2115
Memory Address: 0x0e63
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2116
Memory Address: 0x0e64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2117
Memory Address: 0x0e65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2118
Memory Address: 0x0e66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2119
Memory Address: 0x0e67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2120
Memory Address: 0x0e68
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2121
Memory Address: 0x0e69
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2122
Memory Address: 0x0e6a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2123
Memory Address: 0x0e6b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2124
Memory Address: 0x0e6c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2125
Memory Address: 0x0e6d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2126
Memory Address: 0x0e6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2127
Memory Address: 0x0e6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2128
Memory Address: 0x0e70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2129
Memory Address: 0x0e71
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2130
Memory Address: 0x0e72
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2131
Memory Address: 0x0e73
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2132
Memory Address: 0x0e74
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2133
Memory Address: 0x0e75
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2134
Memory Address: 0x0e76
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2135
Memory Address: 0x0e77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2136
Memory Address: 0x0e78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2137
Memory Address: 0x0e79
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2138
Memory Address: 0x0e7a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2139
Memory Address: 0x0e7b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2140
Memory Address: 0x0e7c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2141
Memory Address: 0x0e7d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2142
Memory Address: 0x0e7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2143
Memory Address: 0x0e7f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2144
Memory Address: 0x0e80
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2145
Memory Address: 0x0e81
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2146
Memory Address: 0x0e82
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2147
Memory Address: 0x0e83
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2148
Memory Address: 0x0e84
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2149
Memory Address: 0x0e85
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2150
Memory Address: 0x0e86
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2151
Memory Address: 0x0e87
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2152
Memory Address: 0x0e88
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2153
Memory Address: 0x0e89
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2154
Memory Address: 0x0e8a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2155
Memory Address: 0x0e8b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2156
Memory Address: 0x0e8c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2157
Memory Address: 0x0e8d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2158
Memory Address: 0x0e8e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2159
Memory Address: 0x0e8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2160
Memory Address: 0x0e90
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2161
Memory Address: 0x0e91
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2162
Memory Address: 0x0e92
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2163
Memory Address: 0x0e93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2164
Memory Address: 0x0e94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2165
Memory Address: 0x0e95
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2166
Memory Address: 0x0e96
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2167
Memory Address: 0x0e97
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2168
Memory Address: 0x0e98
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2169
Memory Address: 0x0e99
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2170
Memory Address: 0x0e9a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2171
Memory Address: 0x0e9b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2172
Memory Address: 0x0e9c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2173
Memory Address: 0x0e9d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2174
Memory Address: 0x0e9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2175
Memory Address: 0x0e9f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2176
Memory Address: 0x0ea0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2177
Memory Address: 0x0ea1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2178
Memory Address: 0x0ea2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2179
Memory Address: 0x0ea3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2180
Memory Address: 0x0ea4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2181
Memory Address: 0x0ea5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2182
Memory Address: 0x0ea6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2183
Memory Address: 0x0ea7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2184
Memory Address: 0x0ea8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2185
Memory Address: 0x0ea9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2186
Memory Address: 0x0eaa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2187
Memory Address: 0x0eab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2188
Memory Address: 0x0eac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2189
Memory Address: 0x0ead
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2190
Memory Address: 0x0eae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2191
Memory Address: 0x0eaf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2192
Memory Address: 0x0eb0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2193
Memory Address: 0x0eb1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2194
Memory Address: 0x0eb2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2195
Memory Address: 0x0eb3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2196
Memory Address: 0x0eb4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2197
Memory Address: 0x0eb5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2198
Memory Address: 0x0eb6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2199
Memory Address: 0x0eb7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2200
Memory Address: 0x0eb8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2201
Memory Address: 0x0eb9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2202
Memory Address: 0x0eba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2203
Memory Address: 0x0ebb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2204
Memory Address: 0x0ebc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2205
Memory Address: 0x0ebd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2206
Memory Address: 0x0ebe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2207
Memory Address: 0x0ebf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2208
Memory Address: 0x0ec0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2209
Memory Address: 0x0ec1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2210
Memory Address: 0x0ec2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2211
Memory Address: 0x0ec3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2212
Memory Address: 0x0ec4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2213
Memory Address: 0x0ec5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2214
Memory Address: 0x0ec6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2215
Memory Address: 0x0ec7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2216
Memory Address: 0x0ec8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2217
Memory Address: 0x0ec9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2218
Memory Address: 0x0eca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2219
Memory Address: 0x0ecb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2220
Memory Address: 0x0ecc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2221
Memory Address: 0x0ecd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2222
Memory Address: 0x0ece
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2223
Memory Address: 0x0ecf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2224
Memory Address: 0x0ed0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2225
Memory Address: 0x0ed1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2226
Memory Address: 0x0ed2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2227
Memory Address: 0x0ed3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2228
Memory Address: 0x0ed4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2229
Memory Address: 0x0ed5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2230
Memory Address: 0x0ed6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2231
Memory Address: 0x0ed7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2232
Memory Address: 0x0ed8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2233
Memory Address: 0x0ed9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2234
Memory Address: 0x0eda
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2235
Memory Address: 0x0edb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2236
Memory Address: 0x0edc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2237
Memory Address: 0x0edd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2238
Memory Address: 0x0ede
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2239
Memory Address: 0x0edf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2240
Memory Address: 0x0ee0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2241
Memory Address: 0x0ee1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2242
Memory Address: 0x0ee2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2243
Memory Address: 0x0ee3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2244
Memory Address: 0x0ee4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2245
Memory Address: 0x0ee5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2246
Memory Address: 0x0ee6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2247
Memory Address: 0x0ee7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2248
Memory Address: 0x0ee8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2249
Memory Address: 0x0ee9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2250
Memory Address: 0x0eea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2251
Memory Address: 0x0eeb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2252
Memory Address: 0x0eec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2253
Memory Address: 0x0eed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2254
Memory Address: 0x0eee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2255
Memory Address: 0x0eef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2256
Memory Address: 0x0ef0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2257
Memory Address: 0x0ef1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2258
Memory Address: 0x0ef2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2259
Memory Address: 0x0ef3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2260
Memory Address: 0x0ef4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2261
Memory Address: 0x0ef5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2262
Memory Address: 0x0ef6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2263
Memory Address: 0x0ef7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2264
Memory Address: 0x0ef8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2265
Memory Address: 0x0ef9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2266
Memory Address: 0x0efa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2267
Memory Address: 0x0efb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2268
Memory Address: 0x0efc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2269
Memory Address: 0x0efd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2270
Memory Address: 0x0efe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2271
Memory Address: 0x0eff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2272
Memory Address: 0x0f00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2273
Memory Address: 0x0f01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2274
Memory Address: 0x0f02
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2275
Memory Address: 0x0f03
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2276
Memory Address: 0x0f04
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2277
Memory Address: 0x0f05
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2278
Memory Address: 0x0f06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2279
Memory Address: 0x0f07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2280
Memory Address: 0x0f08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2281
Memory Address: 0x0f09
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2282
Memory Address: 0x0f0a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2283
Memory Address: 0x0f0b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2284
Memory Address: 0x0f0c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2285
Memory Address: 0x0f0d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2286
Memory Address: 0x0f0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2287
Memory Address: 0x0f0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2288
Memory Address: 0x0f10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2289
Memory Address: 0x0f11
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2290
Memory Address: 0x0f12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2291
Memory Address: 0x0f13
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2292
Memory Address: 0x0f14
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2293
Memory Address: 0x0f15
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2294
Memory Address: 0x0f16
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2295
Memory Address: 0x0f17
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2296
Memory Address: 0x0f18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2297
Memory Address: 0x0f19
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2298
Memory Address: 0x0f1a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2299
Memory Address: 0x0f1b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2300
Memory Address: 0x0f1c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2301
Memory Address: 0x0f1d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2302
Memory Address: 0x0f1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2303
Memory Address: 0x0f1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2304
Memory Address: 0x0f20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2305
Memory Address: 0x0f21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2306
Memory Address: 0x0f22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2307
Memory Address: 0x0f23
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2308
Memory Address: 0x0f24
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2309
Memory Address: 0x0f25
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2310
Memory Address: 0x0f26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2311
Memory Address: 0x0f27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2312
Memory Address: 0x0f28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2313
Memory Address: 0x0f29
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2314
Memory Address: 0x0f2a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2315
Memory Address: 0x0f2b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2316
Memory Address: 0x0f2c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2317
Memory Address: 0x0f2d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2318
Memory Address: 0x0f2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2319
Memory Address: 0x0f2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2320
Memory Address: 0x0f30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2321
Memory Address: 0x0f31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2322
Memory Address: 0x0f32
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2323
Memory Address: 0x0f33
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2324
Memory Address: 0x0f34
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2325
Memory Address: 0x0f35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2326
Memory Address: 0x0f36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2327
Memory Address: 0x0f37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2328
Memory Address: 0x0f38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2329
Memory Address: 0x0f39
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2330
Memory Address: 0x0f3a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2331
Memory Address: 0x0f3b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2332
Memory Address: 0x0f3c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2333
Memory Address: 0x0f3d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2334
Memory Address: 0x0f3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2335
Memory Address: 0x0f3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2336
Memory Address: 0x0f40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2337
Memory Address: 0x0f41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2338
Memory Address: 0x0f42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2339
Memory Address: 0x0f43
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2340
Memory Address: 0x0f44
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2341
Memory Address: 0x0f45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2342
Memory Address: 0x0f46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2343
Memory Address: 0x0f47
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2344
Memory Address: 0x0f48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2345
Memory Address: 0x0f49
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2346
Memory Address: 0x0f4a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2347
Memory Address: 0x0f4b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2348
Memory Address: 0x0f4c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2349
Memory Address: 0x0f4d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2350
Memory Address: 0x0f4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2351
Memory Address: 0x0f4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2352
Memory Address: 0x0f50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2353
Memory Address: 0x0f51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2354
Memory Address: 0x0f52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2355
Memory Address: 0x0f53
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2356
Memory Address: 0x0f54
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2357
Memory Address: 0x0f55
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2358
Memory Address: 0x0f56
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2359
Memory Address: 0x0f57
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2360
Memory Address: 0x0f58
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2361
Memory Address: 0x0f59
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2362
Memory Address: 0x0f5a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2363
Memory Address: 0x0f5b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2364
Memory Address: 0x0f5c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2365
Memory Address: 0x0f5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2366
Memory Address: 0x0f5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2367
Memory Address: 0x0f5f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2368
Memory Address: 0x0f60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2369
Memory Address: 0x0f61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2370
Memory Address: 0x0f62
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2371
Memory Address: 0x0f63
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2372
Memory Address: 0x0f64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2373
Memory Address: 0x0f65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2374
Memory Address: 0x0f66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2375
Memory Address: 0x0f67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2376
Memory Address: 0x0f68
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2377
Memory Address: 0x0f69
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2378
Memory Address: 0x0f6a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2379
Memory Address: 0x0f6b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2380
Memory Address: 0x0f6c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2381
Memory Address: 0x0f6d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2382
Memory Address: 0x0f6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2383
Memory Address: 0x0f6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2384
Memory Address: 0x0f70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2385
Memory Address: 0x0f71
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2386
Memory Address: 0x0f72
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2387
Memory Address: 0x0f73
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2388
Memory Address: 0x0f74
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2389
Memory Address: 0x0f75
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2390
Memory Address: 0x0f76
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2391
Memory Address: 0x0f77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2392
Memory Address: 0x0f78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2393
Memory Address: 0x0f79
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2394
Memory Address: 0x0f7a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2395
Memory Address: 0x0f7b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2396
Memory Address: 0x0f7c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2397
Memory Address: 0x0f7d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2398
Memory Address: 0x0f7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2399
Memory Address: 0x0f7f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2400
Memory Address: 0x0f80
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2401
Memory Address: 0x0f81
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2402
Memory Address: 0x0f82
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2403
Memory Address: 0x0f83
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2404
Memory Address: 0x0f84
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2405
Memory Address: 0x0f85
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2406
Memory Address: 0x0f86
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2407
Memory Address: 0x0f87
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2408
Memory Address: 0x0f88
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2409
Memory Address: 0x0f89
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2410
Memory Address: 0x0f8a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2411
Memory Address: 0x0f8b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2412
Memory Address: 0x0f8c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2413
Memory Address: 0x0f8d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2414
Memory Address: 0x0f8e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2415
Memory Address: 0x0f8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2416
Memory Address: 0x0f90
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2417
Memory Address: 0x0f91
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2418
Memory Address: 0x0f92
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2419
Memory Address: 0x0f93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2420
Memory Address: 0x0f94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2421
Memory Address: 0x0f95
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2422
Memory Address: 0x0f96
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2423
Memory Address: 0x0f97
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2424
Memory Address: 0x0f98
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2425
Memory Address: 0x0f99
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2426
Memory Address: 0x0f9a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2427
Memory Address: 0x0f9b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2428
Memory Address: 0x0f9c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2429
Memory Address: 0x0f9d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2430
Memory Address: 0x0f9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2431
Memory Address: 0x0f9f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2432
Memory Address: 0x0fa0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2433
Memory Address: 0x0fa1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2434
Memory Address: 0x0fa2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2435
Memory Address: 0x0fa3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2436
Memory Address: 0x0fa4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2437
Memory Address: 0x0fa5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2438
Memory Address: 0x0fa6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2439
Memory Address: 0x0fa7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2440
Memory Address: 0x0fa8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2441
Memory Address: 0x0fa9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2442
Memory Address: 0x0faa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2443
Memory Address: 0x0fab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2444
Memory Address: 0x0fac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2445
Memory Address: 0x0fad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2446
Memory Address: 0x0fae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2447
Memory Address: 0x0faf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2448
Memory Address: 0x0fb0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2449
Memory Address: 0x0fb1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2450
Memory Address: 0x0fb2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2451
Memory Address: 0x0fb3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2452
Memory Address: 0x0fb4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2453
Memory Address: 0x0fb5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2454
Memory Address: 0x0fb6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2455
Memory Address: 0x0fb7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2456
Memory Address: 0x0fb8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2457
Memory Address: 0x0fb9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2458
Memory Address: 0x0fba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2459
Memory Address: 0x0fbb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2460
Memory Address: 0x0fbc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2461
Memory Address: 0x0fbd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2462
Memory Address: 0x0fbe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2463
Memory Address: 0x0fbf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2464
Memory Address: 0x0fc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2465
Memory Address: 0x0fc1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2466
Memory Address: 0x0fc2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2467
Memory Address: 0x0fc3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2468
Memory Address: 0x0fc4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2469
Memory Address: 0x0fc5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2470
Memory Address: 0x0fc6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2471
Memory Address: 0x0fc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2472
Memory Address: 0x0fc8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2473
Memory Address: 0x0fc9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2474
Memory Address: 0x0fca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2475
Memory Address: 0x0fcb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2476
Memory Address: 0x0fcc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2477
Memory Address: 0x0fcd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2478
Memory Address: 0x0fce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2479
Memory Address: 0x0fcf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2480
Memory Address: 0x0fd0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2481
Memory Address: 0x0fd1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2482
Memory Address: 0x0fd2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2483
Memory Address: 0x0fd3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2484
Memory Address: 0x0fd4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2485
Memory Address: 0x0fd5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2486
Memory Address: 0x0fd6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2487
Memory Address: 0x0fd7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2488
Memory Address: 0x0fd8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2489
Memory Address: 0x0fd9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2490
Memory Address: 0x0fda
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2491
Memory Address: 0x0fdb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2492
Memory Address: 0x0fdc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2493
Memory Address: 0x0fdd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2494
Memory Address: 0x0fde
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2495
Memory Address: 0x0fdf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2496
Memory Address: 0x0fe0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2497
Memory Address: 0x0fe1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2498
Memory Address: 0x0fe2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2499
Memory Address: 0x0fe3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2500
Memory Address: 0x0fe4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2501
Memory Address: 0x0fe5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2502
Memory Address: 0x0fe6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2503
Memory Address: 0x0fe7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2504
Memory Address: 0x0fe8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2505
Memory Address: 0x0fe9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2506
Memory Address: 0x0fea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2507
Memory Address: 0x0feb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2508
Memory Address: 0x0fec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2509
Memory Address: 0x0fed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2510
Memory Address: 0x0fee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2511
Memory Address: 0x0fef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2512
Memory Address: 0x0ff0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2513
Memory Address: 0x0ff1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2514
Memory Address: 0x0ff2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2515
Memory Address: 0x0ff3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2516
Memory Address: 0x0ff4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2517
Memory Address: 0x0ff5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2518
Memory Address: 0x0ff6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2519
Memory Address: 0x0ff7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2520
Memory Address: 0x0ff8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2521
Memory Address: 0x0ff9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2522
Memory Address: 0x0ffa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2523
Memory Address: 0x0ffb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2524
Memory Address: 0x0ffc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2525
Memory Address: 0x0ffd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2526
Memory Address: 0x0ffe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2527
Memory Address: 0x0fff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2528
Memory Address: 0x1000
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2529
Memory Address: 0x1001
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2530
Memory Address: 0x1002
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2531
Memory Address: 0x1003
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2532
Memory Address: 0x1004
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2533
Memory Address: 0x1005
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2534
Memory Address: 0x1006
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2535
Memory Address: 0x1007
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2536
Memory Address: 0x1008
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2537
Memory Address: 0x1009
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2538
Memory Address: 0x100a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2539
Memory Address: 0x100b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2540
Memory Address: 0x100c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2541
Memory Address: 0x100d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2542
Memory Address: 0x100e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2543
Memory Address: 0x100f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2544
Memory Address: 0x1010
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2545
Memory Address: 0x1011
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2546
Memory Address: 0x1012
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2547
Memory Address: 0x1013
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2548
Memory Address: 0x1014
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2549
Memory Address: 0x1015
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2550
Memory Address: 0x1016
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2551
Memory Address: 0x1017
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2552
Memory Address: 0x1018
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2553
Memory Address: 0x1019
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2554
Memory Address: 0x101a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2555
Memory Address: 0x101b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2556
Memory Address: 0x101c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2557
Memory Address: 0x101d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2558
Memory Address: 0x101e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2559
Memory Address: 0x101f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2560
Memory Address: 0x1020
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2561
Memory Address: 0x1021
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2562
Memory Address: 0x1022
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2563
Memory Address: 0x1023
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2564
Memory Address: 0x1024
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2565
Memory Address: 0x1025
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2566
Memory Address: 0x1026
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2567
Memory Address: 0x1027
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2568
Memory Address: 0x1028
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2569
Memory Address: 0x1029
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2570
Memory Address: 0x102a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2571
Memory Address: 0x102b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2572
Memory Address: 0x102c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2573
Memory Address: 0x102d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2574
Memory Address: 0x102e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2575
Memory Address: 0x102f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2576
Memory Address: 0x1030
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2577
Memory Address: 0x1031
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2578
Memory Address: 0x1032
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2579
Memory Address: 0x1033
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2580
Memory Address: 0x1034
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2581
Memory Address: 0x1035
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2582
Memory Address: 0x1036
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2583
Memory Address: 0x1037
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2584
Memory Address: 0x1038
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2585
Memory Address: 0x1039
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2586
Memory Address: 0x103a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2587
Memory Address: 0x103b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2588
Memory Address: 0x103c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2589
Memory Address: 0x103d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2590
Memory Address: 0x103e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2591
Memory Address: 0x103f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2592
Memory Address: 0x1040
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2593
Memory Address: 0x1041
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2594
Memory Address: 0x1042
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2595
Memory Address: 0x1043
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2596
Memory Address: 0x1044
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2597
Memory Address: 0x1045
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2598
Memory Address: 0x1046
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2599
Memory Address: 0x1047
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2600
Memory Address: 0x1048
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2601
Memory Address: 0x1049
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2602
Memory Address: 0x104a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2603
Memory Address: 0x104b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2604
Memory Address: 0x104c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2605
Memory Address: 0x104d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2606
Memory Address: 0x104e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2607
Memory Address: 0x104f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2608
Memory Address: 0x1050
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2609
Memory Address: 0x1051
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2610
Memory Address: 0x1052
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2611
Memory Address: 0x1053
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2612
Memory Address: 0x1054
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2613
Memory Address: 0x1055
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2614
Memory Address: 0x1056
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2615
Memory Address: 0x1057
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2616
Memory Address: 0x1058
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2617
Memory Address: 0x1059
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2618
Memory Address: 0x105a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2619
Memory Address: 0x105b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2620
Memory Address: 0x105c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2621
Memory Address: 0x105d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2622
Memory Address: 0x105e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2623
Memory Address: 0x105f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2624
Memory Address: 0x1060
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2625
Memory Address: 0x1061
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2626
Memory Address: 0x1062
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2627
Memory Address: 0x1063
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2628
Memory Address: 0x1064
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2629
Memory Address: 0x1065
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2630
Memory Address: 0x1066
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2631
Memory Address: 0x1067
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2632
Memory Address: 0x1068
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2633
Memory Address: 0x1069
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2634
Memory Address: 0x106a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2635
Memory Address: 0x106b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2636
Memory Address: 0x106c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2637
Memory Address: 0x106d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2638
Memory Address: 0x106e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2639
Memory Address: 0x106f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2640
Memory Address: 0x1070
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2641
Memory Address: 0x1071
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2642
Memory Address: 0x1072
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2643
Memory Address: 0x1073
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2644
Memory Address: 0x1074
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2645
Memory Address: 0x1075
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2646
Memory Address: 0x1076
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2647
Memory Address: 0x1077
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2648
Memory Address: 0x1078
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2649
Memory Address: 0x1079
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2650
Memory Address: 0x107a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2651
Memory Address: 0x107b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2652
Memory Address: 0x107c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2653
Memory Address: 0x107d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2654
Memory Address: 0x107e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2655
Memory Address: 0x107f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2656
Memory Address: 0x1080
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2657
Memory Address: 0x1081
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2658
Memory Address: 0x1082
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2659
Memory Address: 0x1083
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2660
Memory Address: 0x1084
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2661
Memory Address: 0x1085
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2662
Memory Address: 0x1086
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2663
Memory Address: 0x1087
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2664
Memory Address: 0x1088
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2665
Memory Address: 0x1089
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2666
Memory Address: 0x108a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2667
Memory Address: 0x108b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2668
Memory Address: 0x108c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2669
Memory Address: 0x108d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2670
Memory Address: 0x108e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2671
Memory Address: 0x108f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2672
Memory Address: 0x1090
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2673
Memory Address: 0x1091
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2674
Memory Address: 0x1092
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2675
Memory Address: 0x1093
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2676
Memory Address: 0x1094
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2677
Memory Address: 0x1095
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2678
Memory Address: 0x1096
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2679
Memory Address: 0x1097
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2680
Memory Address: 0x1098
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2681
Memory Address: 0x1099
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2682
Memory Address: 0x109a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2683
Memory Address: 0x109b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2684
Memory Address: 0x109c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2685
Memory Address: 0x109d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2686
Memory Address: 0x109e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2687
Memory Address: 0x109f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2688
Memory Address: 0x10a0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2689
Memory Address: 0x10a1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2690
Memory Address: 0x10a2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2691
Memory Address: 0x10a3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2692
Memory Address: 0x10a4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2693
Memory Address: 0x10a5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2694
Memory Address: 0x10a6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2695
Memory Address: 0x10a7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2696
Memory Address: 0x10a8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2697
Memory Address: 0x10a9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2698
Memory Address: 0x10aa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2699
Memory Address: 0x10ab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2700
Memory Address: 0x10ac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2701
Memory Address: 0x10ad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2702
Memory Address: 0x10ae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2703
Memory Address: 0x10af
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2704
Memory Address: 0x10b0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2705
Memory Address: 0x10b1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2706
Memory Address: 0x10b2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2707
Memory Address: 0x10b3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2708
Memory Address: 0x10b4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2709
Memory Address: 0x10b5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2710
Memory Address: 0x10b6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2711
Memory Address: 0x10b7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2712
Memory Address: 0x10b8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2713
Memory Address: 0x10b9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2714
Memory Address: 0x10ba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2715
Memory Address: 0x10bb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2716
Memory Address: 0x10bc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2717
Memory Address: 0x10bd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2718
Memory Address: 0x10be
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2719
Memory Address: 0x10bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2720
Memory Address: 0x10c0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2721
Memory Address: 0x10c1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2722
Memory Address: 0x10c2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2723
Memory Address: 0x10c3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2724
Memory Address: 0x10c4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2725
Memory Address: 0x10c5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2726
Memory Address: 0x10c6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2727
Memory Address: 0x10c7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2728
Memory Address: 0x10c8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2729
Memory Address: 0x10c9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2730
Memory Address: 0x10ca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2731
Memory Address: 0x10cb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2732
Memory Address: 0x10cc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2733
Memory Address: 0x10cd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2734
Memory Address: 0x10ce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2735
Memory Address: 0x10cf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2736
Memory Address: 0x10d0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2737
Memory Address: 0x10d1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2738
Memory Address: 0x10d2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2739
Memory Address: 0x10d3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2740
Memory Address: 0x10d4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2741
Memory Address: 0x10d5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2742
Memory Address: 0x10d6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2743
Memory Address: 0x10d7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2744
Memory Address: 0x10d8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2745
Memory Address: 0x10d9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2746
Memory Address: 0x10da
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2747
Memory Address: 0x10db
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2748
Memory Address: 0x10dc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2749
Memory Address: 0x10dd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2750
Memory Address: 0x10de
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2751
Memory Address: 0x10df
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2752
Memory Address: 0x10e0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2753
Memory Address: 0x10e1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2754
Memory Address: 0x10e2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2755
Memory Address: 0x10e3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2756
Memory Address: 0x10e4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2757
Memory Address: 0x10e5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2758
Memory Address: 0x10e6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2759
Memory Address: 0x10e7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2760
Memory Address: 0x10e8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2761
Memory Address: 0x10e9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2762
Memory Address: 0x10ea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2763
Memory Address: 0x10eb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2764
Memory Address: 0x10ec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2765
Memory Address: 0x10ed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2766
Memory Address: 0x10ee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2767
Memory Address: 0x10ef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2768
Memory Address: 0x10f0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2769
Memory Address: 0x10f1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2770
Memory Address: 0x10f2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2771
Memory Address: 0x10f3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2772
Memory Address: 0x10f4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2773
Memory Address: 0x10f5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2774
Memory Address: 0x10f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2775
Memory Address: 0x10f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2776
Memory Address: 0x10f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2777
Memory Address: 0x10f9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2778
Memory Address: 0x10fa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2779
Memory Address: 0x10fb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2780
Memory Address: 0x10fc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2781
Memory Address: 0x10fd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2782
Memory Address: 0x10fe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2783
Memory Address: 0x10ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2784
Memory Address: 0x1100
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2785
Memory Address: 0x1101
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2786
Memory Address: 0x1102
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2787
Memory Address: 0x1103
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2788
Memory Address: 0x1104
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2789
Memory Address: 0x1105
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2790
Memory Address: 0x1106
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2791
Memory Address: 0x1107
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2792
Memory Address: 0x1108
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2793
Memory Address: 0x1109
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2794
Memory Address: 0x110a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2795
Memory Address: 0x110b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2796
Memory Address: 0x110c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2797
Memory Address: 0x110d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2798
Memory Address: 0x110e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2799
Memory Address: 0x110f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2800
Memory Address: 0x1110
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2801
Memory Address: 0x1111
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2802
Memory Address: 0x1112
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2803
Memory Address: 0x1113
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2804
Memory Address: 0x1114
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2805
Memory Address: 0x1115
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2806
Memory Address: 0x1116
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2807
Memory Address: 0x1117
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2808
Memory Address: 0x1118
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2809
Memory Address: 0x1119
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2810
Memory Address: 0x111a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2811
Memory Address: 0x111b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2812
Memory Address: 0x111c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2813
Memory Address: 0x111d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2814
Memory Address: 0x111e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2815
Memory Address: 0x111f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2816
Memory Address: 0x1120
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2817
Memory Address: 0x1121
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2818
Memory Address: 0x1122
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2819
Memory Address: 0x1123
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2820
Memory Address: 0x1124
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2821
Memory Address: 0x1125
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2822
Memory Address: 0x1126
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2823
Memory Address: 0x1127
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2824
Memory Address: 0x1128
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2825
Memory Address: 0x1129
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2826
Memory Address: 0x112a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2827
Memory Address: 0x112b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2828
Memory Address: 0x112c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2829
Memory Address: 0x112d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2830
Memory Address: 0x112e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2831
Memory Address: 0x112f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2832
Memory Address: 0x1130
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2833
Memory Address: 0x1131
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2834
Memory Address: 0x1132
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2835
Memory Address: 0x1133
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2836
Memory Address: 0x1134
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2837
Memory Address: 0x1135
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2838
Memory Address: 0x1136
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2839
Memory Address: 0x1137
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2840
Memory Address: 0x1138
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2841
Memory Address: 0x1139
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2842
Memory Address: 0x113a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2843
Memory Address: 0x113b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2844
Memory Address: 0x113c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2845
Memory Address: 0x113d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2846
Memory Address: 0x113e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2847
Memory Address: 0x113f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2848
Memory Address: 0x1140
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2849
Memory Address: 0x1141
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2850
Memory Address: 0x1142
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2851
Memory Address: 0x1143
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2852
Memory Address: 0x1144
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2853
Memory Address: 0x1145
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2854
Memory Address: 0x1146
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2855
Memory Address: 0x1147
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2856
Memory Address: 0x1148
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2857
Memory Address: 0x1149
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2858
Memory Address: 0x114a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2859
Memory Address: 0x114b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2860
Memory Address: 0x114c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2861
Memory Address: 0x114d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2862
Memory Address: 0x114e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2863
Memory Address: 0x114f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2864
Memory Address: 0x1150
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2865
Memory Address: 0x1151
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2866
Memory Address: 0x1152
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2867
Memory Address: 0x1153
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2868
Memory Address: 0x1154
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2869
Memory Address: 0x1155
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2870
Memory Address: 0x1156
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2871
Memory Address: 0x1157
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2872
Memory Address: 0x1158
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2873
Memory Address: 0x1159
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2874
Memory Address: 0x115a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2875
Memory Address: 0x115b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2876
Memory Address: 0x115c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2877
Memory Address: 0x115d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2878
Memory Address: 0x115e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2879
Memory Address: 0x115f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2880
Memory Address: 0x1160
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2881
Memory Address: 0x1161
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2882
Memory Address: 0x1162
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2883
Memory Address: 0x1163
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2884
Memory Address: 0x1164
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2885
Memory Address: 0x1165
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2886
Memory Address: 0x1166
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2887
Memory Address: 0x1167
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2888
Memory Address: 0x1168
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2889
Memory Address: 0x1169
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2890
Memory Address: 0x116a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2891
Memory Address: 0x116b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2892
Memory Address: 0x116c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2893
Memory Address: 0x116d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2894
Memory Address: 0x116e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2895
Memory Address: 0x116f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2896
Memory Address: 0x1170
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2897
Memory Address: 0x1171
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2898
Memory Address: 0x1172
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2899
Memory Address: 0x1173
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2900
Memory Address: 0x1174
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2901
Memory Address: 0x1175
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2902
Memory Address: 0x1176
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2903
Memory Address: 0x1177
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2904
Memory Address: 0x1178
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2905
Memory Address: 0x1179
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2906
Memory Address: 0x117a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2907
Memory Address: 0x117b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2908
Memory Address: 0x117c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2909
Memory Address: 0x117d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2910
Memory Address: 0x117e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2911
Memory Address: 0x117f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2912
Memory Address: 0x1180
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2913
Memory Address: 0x1181
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2914
Memory Address: 0x1182
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2915
Memory Address: 0x1183
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2916
Memory Address: 0x1184
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2917
Memory Address: 0x1185
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2918
Memory Address: 0x1186
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2919
Memory Address: 0x1187
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2920
Memory Address: 0x1188
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2921
Memory Address: 0x1189
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2922
Memory Address: 0x118a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2923
Memory Address: 0x118b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2924
Memory Address: 0x118c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2925
Memory Address: 0x118d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2926
Memory Address: 0x118e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2927
Memory Address: 0x118f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2928
Memory Address: 0x1190
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2929
Memory Address: 0x1191
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2930
Memory Address: 0x1192
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2931
Memory Address: 0x1193
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2932
Memory Address: 0x1194
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2933
Memory Address: 0x1195
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2934
Memory Address: 0x1196
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2935
Memory Address: 0x1197
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2936
Memory Address: 0x1198
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2937
Memory Address: 0x1199
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2938
Memory Address: 0x119a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2939
Memory Address: 0x119b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2940
Memory Address: 0x119c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2941
Memory Address: 0x119d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2942
Memory Address: 0x119e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2943
Memory Address: 0x119f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2944
Memory Address: 0x11a0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2945
Memory Address: 0x11a1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2946
Memory Address: 0x11a2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2947
Memory Address: 0x11a3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2948
Memory Address: 0x11a4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2949
Memory Address: 0x11a5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2950
Memory Address: 0x11a6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2951
Memory Address: 0x11a7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2952
Memory Address: 0x11a8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2953
Memory Address: 0x11a9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2954
Memory Address: 0x11aa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2955
Memory Address: 0x11ab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2956
Memory Address: 0x11ac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2957
Memory Address: 0x11ad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2958
Memory Address: 0x11ae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2959
Memory Address: 0x11af
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2960
Memory Address: 0x11b0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2961
Memory Address: 0x11b1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2962
Memory Address: 0x11b2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2963
Memory Address: 0x11b3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2964
Memory Address: 0x11b4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2965
Memory Address: 0x11b5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2966
Memory Address: 0x11b6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2967
Memory Address: 0x11b7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2968
Memory Address: 0x11b8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2969
Memory Address: 0x11b9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2970
Memory Address: 0x11ba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2971
Memory Address: 0x11bb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2972
Memory Address: 0x11bc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2973
Memory Address: 0x11bd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2974
Memory Address: 0x11be
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2975
Memory Address: 0x11bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2976
Memory Address: 0x11c0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2977
Memory Address: 0x11c1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2978
Memory Address: 0x11c2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2979
Memory Address: 0x11c3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2980
Memory Address: 0x11c4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2981
Memory Address: 0x11c5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2982
Memory Address: 0x11c6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2983
Memory Address: 0x11c7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2984
Memory Address: 0x11c8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2985
Memory Address: 0x11c9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2986
Memory Address: 0x11ca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2987
Memory Address: 0x11cb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2988
Memory Address: 0x11cc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2989
Memory Address: 0x11cd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2990
Memory Address: 0x11ce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2991
Memory Address: 0x11cf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2992
Memory Address: 0x11d0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2993
Memory Address: 0x11d1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2994
Memory Address: 0x11d2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2995
Memory Address: 0x11d3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2996
Memory Address: 0x11d4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2997
Memory Address: 0x11d5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2998
Memory Address: 0x11d6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 2999
Memory Address: 0x11d7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3000
Memory Address: 0x11d8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3001
Memory Address: 0x11d9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3002
Memory Address: 0x11da
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3003
Memory Address: 0x11db
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3004
Memory Address: 0x11dc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3005
Memory Address: 0x11dd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3006
Memory Address: 0x11de
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3007
Memory Address: 0x11df
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3008
Memory Address: 0x11e0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3009
Memory Address: 0x11e1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3010
Memory Address: 0x11e2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3011
Memory Address: 0x11e3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3012
Memory Address: 0x11e4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3013
Memory Address: 0x11e5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3014
Memory Address: 0x11e6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3015
Memory Address: 0x11e7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3016
Memory Address: 0x11e8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3017
Memory Address: 0x11e9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3018
Memory Address: 0x11ea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3019
Memory Address: 0x11eb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3020
Memory Address: 0x11ec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3021
Memory Address: 0x11ed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3022
Memory Address: 0x11ee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3023
Memory Address: 0x11ef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3024
Memory Address: 0x11f0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3025
Memory Address: 0x11f1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3026
Memory Address: 0x11f2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3027
Memory Address: 0x11f3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3028
Memory Address: 0x11f4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3029
Memory Address: 0x11f5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3030
Memory Address: 0x11f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3031
Memory Address: 0x11f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3032
Memory Address: 0x11f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3033
Memory Address: 0x11f9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3034
Memory Address: 0x11fa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3035
Memory Address: 0x11fb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3036
Memory Address: 0x11fc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3037
Memory Address: 0x11fd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3038
Memory Address: 0x11fe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3039
Memory Address: 0x11ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3040
Memory Address: 0x1200
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3041
Memory Address: 0x1201
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3042
Memory Address: 0x1202
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3043
Memory Address: 0x1203
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3044
Memory Address: 0x1204
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3045
Memory Address: 0x1205
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3046
Memory Address: 0x1206
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3047
Memory Address: 0x1207
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3048
Memory Address: 0x1208
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3049
Memory Address: 0x1209
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3050
Memory Address: 0x120a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3051
Memory Address: 0x120b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3052
Memory Address: 0x120c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3053
Memory Address: 0x120d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3054
Memory Address: 0x120e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3055
Memory Address: 0x120f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3056
Memory Address: 0x1210
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3057
Memory Address: 0x1211
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3058
Memory Address: 0x1212
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3059
Memory Address: 0x1213
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3060
Memory Address: 0x1214
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3061
Memory Address: 0x1215
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3062
Memory Address: 0x1216
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3063
Memory Address: 0x1217
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3064
Memory Address: 0x1218
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3065
Memory Address: 0x1219
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3066
Memory Address: 0x121a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3067
Memory Address: 0x121b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3068
Memory Address: 0x121c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3069
Memory Address: 0x121d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3070
Memory Address: 0x121e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3071
Memory Address: 0x121f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3072
Memory Address: 0x1220
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3073
Memory Address: 0x1221
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3074
Memory Address: 0x1222
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3075
Memory Address: 0x1223
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3076
Memory Address: 0x1224
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3077
Memory Address: 0x1225
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3078
Memory Address: 0x1226
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3079
Memory Address: 0x1227
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3080
Memory Address: 0x1228
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3081
Memory Address: 0x1229
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3082
Memory Address: 0x122a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3083
Memory Address: 0x122b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3084
Memory Address: 0x122c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3085
Memory Address: 0x122d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3086
Memory Address: 0x122e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3087
Memory Address: 0x122f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3088
Memory Address: 0x1230
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3089
Memory Address: 0x1231
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3090
Memory Address: 0x1232
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3091
Memory Address: 0x1233
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3092
Memory Address: 0x1234
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3093
Memory Address: 0x1235
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3094
Memory Address: 0x1236
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3095
Memory Address: 0x1237
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3096
Memory Address: 0x1238
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3097
Memory Address: 0x1239
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3098
Memory Address: 0x123a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3099
Memory Address: 0x123b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3100
Memory Address: 0x123c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3101
Memory Address: 0x123d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3102
Memory Address: 0x123e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3103
Memory Address: 0x123f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3104
Memory Address: 0x1240
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3105
Memory Address: 0x1241
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3106
Memory Address: 0x1242
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3107
Memory Address: 0x1243
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3108
Memory Address: 0x1244
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3109
Memory Address: 0x1245
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3110
Memory Address: 0x1246
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3111
Memory Address: 0x1247
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3112
Memory Address: 0x1248
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3113
Memory Address: 0x1249
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3114
Memory Address: 0x124a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3115
Memory Address: 0x124b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3116
Memory Address: 0x124c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3117
Memory Address: 0x124d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3118
Memory Address: 0x124e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3119
Memory Address: 0x124f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3120
Memory Address: 0x1250
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3121
Memory Address: 0x1251
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3122
Memory Address: 0x1252
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3123
Memory Address: 0x1253
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3124
Memory Address: 0x1254
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3125
Memory Address: 0x1255
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3126
Memory Address: 0x1256
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3127
Memory Address: 0x1257
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3128
Memory Address: 0x1258
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3129
Memory Address: 0x1259
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3130
Memory Address: 0x125a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3131
Memory Address: 0x125b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3132
Memory Address: 0x125c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3133
Memory Address: 0x125d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3134
Memory Address: 0x125e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3135
Memory Address: 0x125f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3136
Memory Address: 0x1260
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3137
Memory Address: 0x1261
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3138
Memory Address: 0x1262
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3139
Memory Address: 0x1263
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3140
Memory Address: 0x1264
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3141
Memory Address: 0x1265
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3142
Memory Address: 0x1266
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3143
Memory Address: 0x1267
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3144
Memory Address: 0x1268
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3145
Memory Address: 0x1269
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3146
Memory Address: 0x126a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3147
Memory Address: 0x126b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3148
Memory Address: 0x126c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3149
Memory Address: 0x126d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3150
Memory Address: 0x126e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3151
Memory Address: 0x126f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3152
Memory Address: 0x1270
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3153
Memory Address: 0x1271
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3154
Memory Address: 0x1272
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3155
Memory Address: 0x1273
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3156
Memory Address: 0x1274
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3157
Memory Address: 0x1275
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3158
Memory Address: 0x1276
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3159
Memory Address: 0x1277
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3160
Memory Address: 0x1278
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3161
Memory Address: 0x1279
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3162
Memory Address: 0x127a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3163
Memory Address: 0x127b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3164
Memory Address: 0x127c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3165
Memory Address: 0x127d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3166
Memory Address: 0x127e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3167
Memory Address: 0x127f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3168
Memory Address: 0x1280
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3169
Memory Address: 0x1281
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3170
Memory Address: 0x1282
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3171
Memory Address: 0x1283
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3172
Memory Address: 0x1284
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3173
Memory Address: 0x1285
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3174
Memory Address: 0x1286
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3175
Memory Address: 0x1287
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3176
Memory Address: 0x1288
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3177
Memory Address: 0x1289
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3178
Memory Address: 0x128a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3179
Memory Address: 0x128b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3180
Memory Address: 0x128c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3181
Memory Address: 0x128d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3182
Memory Address: 0x128e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3183
Memory Address: 0x128f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3184
Memory Address: 0x1290
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3185
Memory Address: 0x1291
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3186
Memory Address: 0x1292
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3187
Memory Address: 0x1293
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3188
Memory Address: 0x1294
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3189
Memory Address: 0x1295
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3190
Memory Address: 0x1296
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3191
Memory Address: 0x1297
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3192
Memory Address: 0x1298
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3193
Memory Address: 0x1299
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3194
Memory Address: 0x129a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3195
Memory Address: 0x129b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3196
Memory Address: 0x129c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3197
Memory Address: 0x129d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3198
Memory Address: 0x129e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3199
Memory Address: 0x129f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3200
Memory Address: 0x12a0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3201
Memory Address: 0x12a1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3202
Memory Address: 0x12a2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3203
Memory Address: 0x12a3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3204
Memory Address: 0x12a4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3205
Memory Address: 0x12a5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3206
Memory Address: 0x12a6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3207
Memory Address: 0x12a7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3208
Memory Address: 0x12a8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3209
Memory Address: 0x12a9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3210
Memory Address: 0x12aa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3211
Memory Address: 0x12ab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3212
Memory Address: 0x12ac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3213
Memory Address: 0x12ad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3214
Memory Address: 0x12ae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3215
Memory Address: 0x12af
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3216
Memory Address: 0x12b0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3217
Memory Address: 0x12b1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3218
Memory Address: 0x12b2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3219
Memory Address: 0x12b3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3220
Memory Address: 0x12b4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3221
Memory Address: 0x12b5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3222
Memory Address: 0x12b6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3223
Memory Address: 0x12b7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3224
Memory Address: 0x12b8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3225
Memory Address: 0x12b9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3226
Memory Address: 0x12ba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3227
Memory Address: 0x12bb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3228
Memory Address: 0x12bc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3229
Memory Address: 0x12bd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3230
Memory Address: 0x12be
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3231
Memory Address: 0x12bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3232
Memory Address: 0x12c0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3233
Memory Address: 0x12c1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3234
Memory Address: 0x12c2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3235
Memory Address: 0x12c3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3236
Memory Address: 0x12c4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3237
Memory Address: 0x12c5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3238
Memory Address: 0x12c6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3239
Memory Address: 0x12c7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3240
Memory Address: 0x12c8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3241
Memory Address: 0x12c9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3242
Memory Address: 0x12ca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3243
Memory Address: 0x12cb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3244
Memory Address: 0x12cc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3245
Memory Address: 0x12cd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3246
Memory Address: 0x12ce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3247
Memory Address: 0x12cf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3248
Memory Address: 0x12d0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3249
Memory Address: 0x12d1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3250
Memory Address: 0x12d2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3251
Memory Address: 0x12d3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3252
Memory Address: 0x12d4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3253
Memory Address: 0x12d5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3254
Memory Address: 0x12d6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3255
Memory Address: 0x12d7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3256
Memory Address: 0x12d8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3257
Memory Address: 0x12d9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3258
Memory Address: 0x12da
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3259
Memory Address: 0x12db
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3260
Memory Address: 0x12dc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3261
Memory Address: 0x12dd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3262
Memory Address: 0x12de
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3263
Memory Address: 0x12df
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3264
Memory Address: 0x12e0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3265
Memory Address: 0x12e1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3266
Memory Address: 0x12e2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3267
Memory Address: 0x12e3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3268
Memory Address: 0x12e4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3269
Memory Address: 0x12e5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3270
Memory Address: 0x12e6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3271
Memory Address: 0x12e7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3272
Memory Address: 0x12e8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3273
Memory Address: 0x12e9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3274
Memory Address: 0x12ea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3275
Memory Address: 0x12eb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3276
Memory Address: 0x12ec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3277
Memory Address: 0x12ed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3278
Memory Address: 0x12ee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3279
Memory Address: 0x12ef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3280
Memory Address: 0x12f0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3281
Memory Address: 0x12f1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3282
Memory Address: 0x12f2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3283
Memory Address: 0x12f3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3284
Memory Address: 0x12f4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3285
Memory Address: 0x12f5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3286
Memory Address: 0x12f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3287
Memory Address: 0x12f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3288
Memory Address: 0x12f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3289
Memory Address: 0x12f9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3290
Memory Address: 0x12fa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3291
Memory Address: 0x12fb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3292
Memory Address: 0x12fc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3293
Memory Address: 0x12fd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3294
Memory Address: 0x12fe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3295
Memory Address: 0x12ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3296
Memory Address: 0x1300
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3297
Memory Address: 0x1301
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3298
Memory Address: 0x1302
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3299
Memory Address: 0x1303
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3300
Memory Address: 0x1304
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3301
Memory Address: 0x1305
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3302
Memory Address: 0x1306
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3303
Memory Address: 0x1307
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3304
Memory Address: 0x1308
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3305
Memory Address: 0x1309
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3306
Memory Address: 0x130a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3307
Memory Address: 0x130b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3308
Memory Address: 0x130c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3309
Memory Address: 0x130d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3310
Memory Address: 0x130e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3311
Memory Address: 0x130f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3312
Memory Address: 0x1310
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3313
Memory Address: 0x1311
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3314
Memory Address: 0x1312
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3315
Memory Address: 0x1313
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3316
Memory Address: 0x1314
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3317
Memory Address: 0x1315
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3318
Memory Address: 0x1316
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3319
Memory Address: 0x1317
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3320
Memory Address: 0x1318
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3321
Memory Address: 0x1319
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3322
Memory Address: 0x131a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3323
Memory Address: 0x131b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3324
Memory Address: 0x131c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3325
Memory Address: 0x131d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3326
Memory Address: 0x131e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3327
Memory Address: 0x131f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3328
Memory Address: 0x1320
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3329
Memory Address: 0x1321
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3330
Memory Address: 0x1322
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3331
Memory Address: 0x1323
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3332
Memory Address: 0x1324
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3333
Memory Address: 0x1325
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3334
Memory Address: 0x1326
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3335
Memory Address: 0x1327
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3336
Memory Address: 0x1328
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3337
Memory Address: 0x1329
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3338
Memory Address: 0x132a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3339
Memory Address: 0x132b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3340
Memory Address: 0x132c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3341
Memory Address: 0x132d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3342
Memory Address: 0x132e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3343
Memory Address: 0x132f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3344
Memory Address: 0x1330
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3345
Memory Address: 0x1331
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3346
Memory Address: 0x1332
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3347
Memory Address: 0x1333
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3348
Memory Address: 0x1334
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3349
Memory Address: 0x1335
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3350
Memory Address: 0x1336
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3351
Memory Address: 0x1337
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3352
Memory Address: 0x1338
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3353
Memory Address: 0x1339
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3354
Memory Address: 0x133a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3355
Memory Address: 0x133b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3356
Memory Address: 0x133c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3357
Memory Address: 0x133d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3358
Memory Address: 0x133e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3359
Memory Address: 0x133f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3360
Memory Address: 0x1340
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3361
Memory Address: 0x1341
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3362
Memory Address: 0x1342
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3363
Memory Address: 0x1343
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3364
Memory Address: 0x1344
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3365
Memory Address: 0x1345
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3366
Memory Address: 0x1346
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3367
Memory Address: 0x1347
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3368
Memory Address: 0x1348
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3369
Memory Address: 0x1349
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3370
Memory Address: 0x134a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3371
Memory Address: 0x134b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3372
Memory Address: 0x134c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3373
Memory Address: 0x134d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3374
Memory Address: 0x134e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3375
Memory Address: 0x134f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3376
Memory Address: 0x1350
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3377
Memory Address: 0x1351
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3378
Memory Address: 0x1352
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3379
Memory Address: 0x1353
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3380
Memory Address: 0x1354
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3381
Memory Address: 0x1355
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3382
Memory Address: 0x1356
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3383
Memory Address: 0x1357
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3384
Memory Address: 0x1358
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3385
Memory Address: 0x1359
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3386
Memory Address: 0x135a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3387
Memory Address: 0x135b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3388
Memory Address: 0x135c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3389
Memory Address: 0x135d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3390
Memory Address: 0x135e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3391
Memory Address: 0x135f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3392
Memory Address: 0x1360
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3393
Memory Address: 0x1361
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3394
Memory Address: 0x1362
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3395
Memory Address: 0x1363
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3396
Memory Address: 0x1364
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3397
Memory Address: 0x1365
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3398
Memory Address: 0x1366
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3399
Memory Address: 0x1367
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3400
Memory Address: 0x1368
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3401
Memory Address: 0x1369
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3402
Memory Address: 0x136a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3403
Memory Address: 0x136b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3404
Memory Address: 0x136c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3405
Memory Address: 0x136d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3406
Memory Address: 0x136e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3407
Memory Address: 0x136f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3408
Memory Address: 0x1370
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3409
Memory Address: 0x1371
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3410
Memory Address: 0x1372
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3411
Memory Address: 0x1373
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3412
Memory Address: 0x1374
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3413
Memory Address: 0x1375
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3414
Memory Address: 0x1376
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3415
Memory Address: 0x1377
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3416
Memory Address: 0x1378
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3417
Memory Address: 0x1379
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3418
Memory Address: 0x137a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3419
Memory Address: 0x137b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3420
Memory Address: 0x137c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3421
Memory Address: 0x137d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3422
Memory Address: 0x137e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3423
Memory Address: 0x137f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3424
Memory Address: 0x1380
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3425
Memory Address: 0x1381
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3426
Memory Address: 0x1382
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3427
Memory Address: 0x1383
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3428
Memory Address: 0x1384
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3429
Memory Address: 0x1385
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3430
Memory Address: 0x1386
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3431
Memory Address: 0x1387
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3432
Memory Address: 0x1388
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3433
Memory Address: 0x1389
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3434
Memory Address: 0x138a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3435
Memory Address: 0x138b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3436
Memory Address: 0x138c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3437
Memory Address: 0x138d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3438
Memory Address: 0x138e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3439
Memory Address: 0x138f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3440
Memory Address: 0x1390
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3441
Memory Address: 0x1391
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3442
Memory Address: 0x1392
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3443
Memory Address: 0x1393
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3444
Memory Address: 0x1394
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3445
Memory Address: 0x1395
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3446
Memory Address: 0x1396
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3447
Memory Address: 0x1397
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3448
Memory Address: 0x1398
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3449
Memory Address: 0x1399
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3450
Memory Address: 0x139a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3451
Memory Address: 0x139b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3452
Memory Address: 0x139c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3453
Memory Address: 0x139d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3454
Memory Address: 0x139e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3455
Memory Address: 0x139f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3456
Memory Address: 0x13a0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3457
Memory Address: 0x13a1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3458
Memory Address: 0x13a2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3459
Memory Address: 0x13a3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3460
Memory Address: 0x13a4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3461
Memory Address: 0x13a5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3462
Memory Address: 0x13a6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3463
Memory Address: 0x13a7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3464
Memory Address: 0x13a8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3465
Memory Address: 0x13a9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3466
Memory Address: 0x13aa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3467
Memory Address: 0x13ab
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3468
Memory Address: 0x13ac
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3469
Memory Address: 0x13ad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3470
Memory Address: 0x13ae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3471
Memory Address: 0x13af
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3472
Memory Address: 0x13b0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3473
Memory Address: 0x13b1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3474
Memory Address: 0x13b2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3475
Memory Address: 0x13b3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3476
Memory Address: 0x13b4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3477
Memory Address: 0x13b5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3478
Memory Address: 0x13b6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3479
Memory Address: 0x13b7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3480
Memory Address: 0x13b8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3481
Memory Address: 0x13b9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3482
Memory Address: 0x13ba
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3483
Memory Address: 0x13bb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3484
Memory Address: 0x13bc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3485
Memory Address: 0x13bd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3486
Memory Address: 0x13be
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3487
Memory Address: 0x13bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3488
Memory Address: 0x13c0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3489
Memory Address: 0x13c1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3490
Memory Address: 0x13c2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3491
Memory Address: 0x13c3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3492
Memory Address: 0x13c4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3493
Memory Address: 0x13c5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3494
Memory Address: 0x13c6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3495
Memory Address: 0x13c7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3496
Memory Address: 0x13c8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3497
Memory Address: 0x13c9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3498
Memory Address: 0x13ca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3499
Memory Address: 0x13cb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3500
Memory Address: 0x13cc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3501
Memory Address: 0x13cd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3502
Memory Address: 0x13ce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3503
Memory Address: 0x13cf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3504
Memory Address: 0x13d0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3505
Memory Address: 0x13d1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3506
Memory Address: 0x13d2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3507
Memory Address: 0x13d3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3508
Memory Address: 0x13d4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3509
Memory Address: 0x13d5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3510
Memory Address: 0x13d6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3511
Memory Address: 0x13d7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3512
Memory Address: 0x13d8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3513
Memory Address: 0x13d9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3514
Memory Address: 0x13da
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3515
Memory Address: 0x13db
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3516
Memory Address: 0x13dc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3517
Memory Address: 0x13dd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3518
Memory Address: 0x13de
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3519
Memory Address: 0x13df
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3520
Memory Address: 0x13e0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3521
Memory Address: 0x13e1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3522
Memory Address: 0x13e2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3523
Memory Address: 0x13e3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3524
Memory Address: 0x13e4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3525
Memory Address: 0x13e5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3526
Memory Address: 0x13e6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3527
Memory Address: 0x13e7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3528
Memory Address: 0x13e8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3529
Memory Address: 0x13e9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3530
Memory Address: 0x13ea
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3531
Memory Address: 0x13eb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3532
Memory Address: 0x13ec
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3533
Memory Address: 0x13ed
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3534
Memory Address: 0x13ee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3535
Memory Address: 0x13ef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3536
Memory Address: 0x13f0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3537
Memory Address: 0x13f1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3538
Memory Address: 0x13f2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3539
Memory Address: 0x13f3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3540
Memory Address: 0x13f4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3541
Memory Address: 0x13f5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3542
Memory Address: 0x13f6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3543
Memory Address: 0x13f7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3544
Memory Address: 0x13f8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3545
Memory Address: 0x13f9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3546
Memory Address: 0x13fa
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3547
Memory Address: 0x13fb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3548
Memory Address: 0x13fc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3549
Memory Address: 0x13fd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3550
Memory Address: 0x13fe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3551
Memory Address: 0x13ff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3552
Memory Address: 0x1400
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3553
Memory Address: 0x1401
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x74 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3554
Memory Address: 0x1404
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3555
Memory Address: 0x1405
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3556
Memory Address: 0x1406
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3557
Memory Address: 0x1407
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3558
Memory Address: 0x1408
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3559
Memory Address: 0x140a
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3560
Memory Address: 0x140c
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 3561
Memory Address: 0x140d
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3562
Memory Address: 0x140e
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3563
Memory Address: 0x140f
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3564
Memory Address: 0x1410
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3565
Memory Address: 0x1411
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3566
Memory Address: 0x1413
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3567
Memory Address: 0x1415
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 3568
Memory Address: 0x1416
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3569
Memory Address: 0x1417
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3570
Memory Address: 0x1418
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3571
Memory Address: 0x141b
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3572
Memory Address: 0x141c
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3573
Memory Address: 0x141d
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3574
Memory Address: 0x141e
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x05 0x14'
if NZ; PC <- adr


Instruction Number 3575
Memory Address: 0x1421
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3576
Memory Address: 0x1422
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3577
Memory Address: 0x1423
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3578
Memory Address: 0x1424
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x74 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3579
Memory Address: 0x1427
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3580
Memory Address: 0x1428
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3581
Memory Address: 0x1429
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3582
Memory Address: 0x142a
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3583
Memory Address: 0x142b
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3584
Memory Address: 0x142c
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3585
Memory Address: 0x142d
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3586
Memory Address: 0x142e
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3587
Memory Address: 0x142f
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3588
Memory Address: 0x1432
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3589
Memory Address: 0x1433
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3590
Memory Address: 0x1434
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3591
Memory Address: 0x1435
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x27 0x14'
if NZ; PC <- adr


Instruction Number 3592
Memory Address: 0x1438
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3593
Memory Address: 0x1439
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3594
Memory Address: 0x143a
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3595
Memory Address: 0x143b
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3596
Memory Address: 0x143c
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3597
Memory Address: 0x143d
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3598
Memory Address: 0x1440
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3599
Memory Address: 0x1441
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3600
Memory Address: 0x1442
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3601
Memory Address: 0x1443
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x39 0x14'
if NZ; PC <- adr


Instruction Number 3602
Memory Address: 0x1446
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3603
Memory Address: 0x1447
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3604
Memory Address: 0x1448
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3605
Memory Address: 0x1449
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3606
Memory Address: 0x144a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3607
Memory Address: 0x144b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3608
Memory Address: 0x144c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3609
Memory Address: 0x144d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3610
Memory Address: 0x144e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3611
Memory Address: 0x144f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3612
Memory Address: 0x1450
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3613
Memory Address: 0x1451
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3614
Memory Address: 0x1452
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x74 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3615
Memory Address: 0x1455
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3616
Memory Address: 0x1456
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3617
Memory Address: 0x1457
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3618
Memory Address: 0x1458
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3619
Memory Address: 0x145a
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3620
Memory Address: 0x145c
Opcode: 0x2f
CMA
Operands (memory order, little endian): '0x00 0x00'
A <- !A


Instruction Number 3621
Memory Address: 0x145d
Opcode: 0xa6
ANA M
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; (HL)
Z; S; P; CY; AC

Instruction Number 3622
Memory Address: 0x145e
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3623
Memory Address: 0x145f
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3624
Memory Address: 0x1460
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3625
Memory Address: 0x1461
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3626
Memory Address: 0x1462
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3627
Memory Address: 0x1464
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3628
Memory Address: 0x1466
Opcode: 0x2f
CMA
Operands (memory order, little endian): '0x00 0x00'
A <- !A


Instruction Number 3629
Memory Address: 0x1467
Opcode: 0xa6
ANA M
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; (HL)
Z; S; P; CY; AC

Instruction Number 3630
Memory Address: 0x1468
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3631
Memory Address: 0x1469
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3632
Memory Address: 0x146a
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3633
Memory Address: 0x146d
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3634
Memory Address: 0x146e
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3635
Memory Address: 0x146f
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3636
Memory Address: 0x1470
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x55 0x14'
if NZ; PC <- adr


Instruction Number 3637
Memory Address: 0x1473
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3638
Memory Address: 0x1474
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 3639
Memory Address: 0x1475
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x07 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 3640
Memory Address: 0x1477
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 3641
Memory Address: 0x1479
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x47 0x1a'
PC <= adr


Instruction Number 3642
Memory Address: 0x147c
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3643
Memory Address: 0x147d
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3644
Memory Address: 0x147e
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3645
Memory Address: 0x147f
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 3646
Memory Address: 0x1480
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3647
Memory Address: 0x1481
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3648
Memory Address: 0x1482
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 3649
Memory Address: 0x1483
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x7e 0x14'
if NZ; PC <- adr


Instruction Number 3650
Memory Address: 0x1486
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3651
Memory Address: 0x1487
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3652
Memory Address: 0x148a
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3653
Memory Address: 0x148b
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3654
Memory Address: 0x148c
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3655
Memory Address: 0x148d
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x7c 0x14'
if NZ; PC <- adr


Instruction Number 3656
Memory Address: 0x1490
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3657
Memory Address: 0x1491
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x74 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3658
Memory Address: 0x1494
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3659
Memory Address: 0x1495
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x61 0x20'
(adr) <- A


Instruction Number 3660
Memory Address: 0x1498
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3661
Memory Address: 0x1499
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3662
Memory Address: 0x149a
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3663
Memory Address: 0x149b
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3664
Memory Address: 0x149d
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3665
Memory Address: 0x149f
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 3666
Memory Address: 0x14a0
Opcode: 0xa6
ANA M
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; (HL)
Z; S; P; CY; AC

Instruction Number 3667
Memory Address: 0x14a1
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xa9 0x14'
if Z; PC <- adr


Instruction Number 3668
Memory Address: 0x14a4
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 3669
Memory Address: 0x14a6
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x61 0x20'
(adr) <- A


Instruction Number 3670
Memory Address: 0x14a9
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 3671
Memory Address: 0x14aa
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 3672
Memory Address: 0x14ab
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3673
Memory Address: 0x14ac
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3674
Memory Address: 0x14ad
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3675
Memory Address: 0x14ae
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3676
Memory Address: 0x14af
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3677
Memory Address: 0x14b1
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3678
Memory Address: 0x14b3
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 3679
Memory Address: 0x14b4
Opcode: 0xa6
ANA M
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; (HL)
Z; S; P; CY; AC

Instruction Number 3680
Memory Address: 0x14b5
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xbd 0x14'
if Z; PC <- adr


Instruction Number 3681
Memory Address: 0x14b8
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 3682
Memory Address: 0x14ba
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x61 0x20'
(adr) <- A


Instruction Number 3683
Memory Address: 0x14bd
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 3684
Memory Address: 0x14be
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 3685
Memory Address: 0x14bf
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3686
Memory Address: 0x14c0
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3687
Memory Address: 0x14c1
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3688
Memory Address: 0x14c4
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3689
Memory Address: 0x14c5
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3690
Memory Address: 0x14c6
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3691
Memory Address: 0x14c7
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x98 0x14'
if NZ; PC <- adr


Instruction Number 3692
Memory Address: 0x14ca
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3693
Memory Address: 0x14cb
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3694
Memory Address: 0x14cc
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3695
Memory Address: 0x14cd
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3696
Memory Address: 0x14ce
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3697
Memory Address: 0x14d1
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3698
Memory Address: 0x14d2
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3699
Memory Address: 0x14d3
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3700
Memory Address: 0x14d4
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xcc 0x14'
if NZ; PC <- adr


Instruction Number 3701
Memory Address: 0x14d7
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3702
Memory Address: 0x14d8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x25 0x20'
A <- (adr)


Instruction Number 3703
Memory Address: 0x14db
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x05 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3704
Memory Address: 0x14dd
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 3705
Memory Address: 0x14de
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x02 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3706
Memory Address: 0x14e0
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3707
Memory Address: 0x14e1
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x29 0x20'
A <- (adr)


Instruction Number 3708
Memory Address: 0x14e4
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xd8 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3709
Memory Address: 0x14e6
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 3710
Memory Address: 0x14e7
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x30 0x15'
if NCY; PC<-adr


Instruction Number 3711
Memory Address: 0x14ea
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x02 0x20'
A <- (adr)


Instruction Number 3712
Memory Address: 0x14ed
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3713
Memory Address: 0x14ee
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 3714
Memory Address: 0x14ef
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 3715
Memory Address: 0x14f0
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xce 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3716
Memory Address: 0x14f2
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x79 0x15'
if NCY; PC<-adr


Instruction Number 3717
Memory Address: 0x14f5
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x06 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 3718
Memory Address: 0x14f7
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 3719
Memory Address: 0x14f8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x09 0x20'
A <- (adr)


Instruction Number 3720
Memory Address: 0x14fb
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x90 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3721
Memory Address: 0x14fd
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x04 0x15'
if NCY; PC<-adr


Instruction Number 3722
Memory Address: 0x1500
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 3723
Memory Address: 0x1501
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x30 0x15'
if NCY; PC<-adr


Instruction Number 3724
Memory Address: 0x1504
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 3725
Memory Address: 0x1505
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x62 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3726
Memory Address: 0x1508
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x2a 0x20'
A <- (adr)


Instruction Number 3727
Memory Address: 0x150b
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 3728
Memory Address: 0x150c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x6f 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3729
Memory Address: 0x150f
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x64 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 3730
Memory Address: 0x1512
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x05 0x00'
A <- byte 2


Instruction Number 3731
Memory Address: 0x1514
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x25 0x20'
(adr) <- A


Instruction Number 3732
Memory Address: 0x1517
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x81 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3733
Memory Address: 0x151a
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3734
Memory Address: 0x151b
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3735
Memory Address: 0x151c
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x30 0x15'
if Z; PC <- adr


Instruction Number 3736
Memory Address: 0x151f
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 3737
Memory Address: 0x1521
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x5f 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3738
Memory Address: 0x1524
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3739
Memory Address: 0x1527
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd3 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3740
Memory Address: 0x152a
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x10 0x00'
A <- byte 2


Instruction Number 3741
Memory Address: 0x152c
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x03 0x20'
(adr) <- A


Instruction Number 3742
Memory Address: 0x152f
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3743
Memory Address: 0x1530
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x03 0x00'
A <- byte 2


Instruction Number 3744
Memory Address: 0x1532
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x25 0x20'
(adr) <- A


Instruction Number 3745
Memory Address: 0x1535
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x4a 0x15'
PC <= adr


Instruction Number 3746
Memory Address: 0x1538
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x03 0x20'
H <- byte 3; L <- byte 2


Instruction Number 3747
Memory Address: 0x153b
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 3748
Memory Address: 0x153c
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3749
Memory Address: 0x153d
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x64 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 3750
Memory Address: 0x1540
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 3751
Memory Address: 0x1542
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x24 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3752
Memory Address: 0x1545
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x04 0x00'
A <- byte 2


Instruction Number 3753
Memory Address: 0x1547
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x25 0x20'
(adr) <- A


Instruction Number 3754
Memory Address: 0x154a
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3755
Memory Address: 0x154b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x02 0x20'
(adr) <- A


Instruction Number 3756
Memory Address: 0x154e
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xf7 0x00'
B <- byte 2


Instruction Number 3757
Memory Address: 0x1550
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xdc 0x19'
PC <= adr


Instruction Number 3758
Memory Address: 0x1553
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3759
Memory Address: 0x1554
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x00 0x00'
C <- byte 2


Instruction Number 3760
Memory Address: 0x1556
Opcode: 0xbc
CMP H
Operands (memory order, little endian): '0x00 0x00'
A - H
Z; S; P; CY; AC

Instruction Number 3761
Memory Address: 0x1557
Opcode: 0xd4
CNC adr
Operands (memory order, little endian): '0x90 0x15'
if NCY; CALL adr


Instruction Number 3762
Memory Address: 0x155a
Opcode: 0xbc
CMP H
Operands (memory order, little endian): '0x00 0x00'
A - H
Z; S; P; CY; AC

Instruction Number 3763
Memory Address: 0x155b
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 3764
Memory Address: 0x155c
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 3765
Memory Address: 0x155e
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 3766
Memory Address: 0x155f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x5a 0x15'
PC <= adr


Instruction Number 3767
Memory Address: 0x1562
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x09 0x20'
A <- (adr)


Instruction Number 3768
Memory Address: 0x1565
Opcode: 0x65
MOV H;L
Operands (memory order, little endian): '0x00 0x00'
H <- L


Instruction Number 3769
Memory Address: 0x1566
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x54 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3770
Memory Address: 0x1569
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 3771
Memory Address: 0x156a
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3772
Memory Address: 0x156b
Opcode: 0xde
SBI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A - data - CY
Z; S; P; CY; AC

Instruction Number 3773
Memory Address: 0x156d
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 3774
Memory Address: 0x156e
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3775
Memory Address: 0x156f
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x0a 0x20'
A <- (adr)


Instruction Number 3776
Memory Address: 0x1572
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x54 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3777
Memory Address: 0x1575
Opcode: 0xde
SBI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A - data - CY
Z; S; P; CY; AC

Instruction Number 3778
Memory Address: 0x1577
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 3779
Memory Address: 0x1578
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3780
Memory Address: 0x1579
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 3781
Memory Address: 0x157b
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x85 0x20'
(adr) <- A


Instruction Number 3782
Memory Address: 0x157e
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x45 0x15'
PC <= adr


Instruction Number 3783
Memory Address: 0x1581
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 3784
Memory Address: 0x1582
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 3785
Memory Address: 0x1583
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 3786
Memory Address: 0x1584
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 3787
Memory Address: 0x1585
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 3788
Memory Address: 0x1586
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 3789
Memory Address: 0x1587
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 3790
Memory Address: 0x1588
Opcode: 0x81
ADD C
Operands (memory order, little endian): '0x00 0x00'
A <- A + C
Z; S; P; CY; AC

Instruction Number 3791
Memory Address: 0x1589
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 3792
Memory Address: 0x158a
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 3793
Memory Address: 0x158b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 3794
Memory Address: 0x158e
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 3795
Memory Address: 0x158f
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3796
Memory Address: 0x1590
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 3797
Memory Address: 0x1591
Opcode: 0xc6
ADI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A + byte
Z; S; P; CY; AC

Instruction Number 3798
Memory Address: 0x1593
Opcode: 0xfa
JM adr
Operands (memory order, little endian): '0x90 0x15'
if M; PC <- adr


Instruction Number 3799
Memory Address: 0x1596
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3800
Memory Address: 0x1597
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x0d 0x20'
A <- (adr)


Instruction Number 3801
Memory Address: 0x159a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3802
Memory Address: 0x159b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xb7 0x15'
if NZ; PC <- adr


Instruction Number 3803
Memory Address: 0x159e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xa4 0x3e'
H <- byte 3; L <- byte 2


Instruction Number 3804
Memory Address: 0x15a1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc5 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3805
Memory Address: 0x15a4
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 3806
Memory Address: 0x15a5
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xfe 0x00'
B <- byte 2


Instruction Number 3807
Memory Address: 0x15a7
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 3808
Memory Address: 0x15a9
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x0d 0x20'
(adr) <- A


Instruction Number 3809
Memory Address: 0x15ac
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 3810
Memory Address: 0x15ad
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x08 0x20'
(adr) <- A


Instruction Number 3811
Memory Address: 0x15b0
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x0e 0x20'
A <- (adr)


Instruction Number 3812
Memory Address: 0x15b3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x07 0x20'
(adr) <- A


Instruction Number 3813
Memory Address: 0x15b6
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3814
Memory Address: 0x15b7
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x24 0x25'
H <- byte 3; L <- byte 2


Instruction Number 3815
Memory Address: 0x15ba
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc5 0x15'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3816
Memory Address: 0x15bd
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 3817
Memory Address: 0x15be
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf1 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3818
Memory Address: 0x15c1
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3819
Memory Address: 0x15c2
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xa9 0x15'
PC <= adr


Instruction Number 3820
Memory Address: 0x15c5
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x17 0x00'
B <- byte 2


Instruction Number 3821
Memory Address: 0x15c7
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3822
Memory Address: 0x15c8
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3823
Memory Address: 0x15c9
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x6b 0x16'
if NZ; PC <- adr


Instruction Number 3824
Memory Address: 0x15cc
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3825
Memory Address: 0x15cd
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3826
Memory Address: 0x15ce
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xc7 0x15'
if NZ; PC <- adr


Instruction Number 3827
Memory Address: 0x15d1
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3828
Memory Address: 0x15d2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 3829
Memory Address: 0x15d3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x74 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3830
Memory Address: 0x15d6
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3831
Memory Address: 0x15d7
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 3832
Memory Address: 0x15d8
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 3833
Memory Address: 0x15d9
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3834
Memory Address: 0x15da
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3835
Memory Address: 0x15dc
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3836
Memory Address: 0x15de
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3837
Memory Address: 0x15df
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3838
Memory Address: 0x15e0
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3839
Memory Address: 0x15e1
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3840
Memory Address: 0x15e2
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x04 0x00'
special


Instruction Number 3841
Memory Address: 0x15e4
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 3842
Memory Address: 0x15e6
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 3843
Memory Address: 0x15e7
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3844
Memory Address: 0x15e8
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 3845
Memory Address: 0x15eb
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 3846
Memory Address: 0x15ec
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 3847
Memory Address: 0x15ed
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3848
Memory Address: 0x15ee
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xd7 0x15'
if NZ; PC <- adr


Instruction Number 3849
Memory Address: 0x15f1
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 3850
Memory Address: 0x15f2
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3851
Memory Address: 0x15f3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x11 0x16'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3852
Memory Address: 0x15f6
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x37'
B <- byte 3; C <- byte 2


Instruction Number 3853
Memory Address: 0x15f9
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3854
Memory Address: 0x15fa
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3855
Memory Address: 0x15fb
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xff 0x15'
if Z; PC <- adr


Instruction Number 3856
Memory Address: 0x15fe
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 3857
Memory Address: 0x15ff
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3858
Memory Address: 0x1600
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 3859
Memory Address: 0x1601
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xf9 0x15'
if NZ; PC <- adr


Instruction Number 3860
Memory Address: 0x1604
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 3861
Memory Address: 0x1605
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x82 0x20'
(adr) <- A


Instruction Number 3862
Memory Address: 0x1608
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x01 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3863
Memory Address: 0x160a
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3864
Memory Address: 0x160b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x6b 0x20'
H <- byte 3; L <- byte 2


Instruction Number 3865
Memory Address: 0x160e
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 3866
Memory Address: 0x1610
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3867
Memory Address: 0x1611
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 3868
Memory Address: 0x1613
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 3869
Memory Address: 0x1616
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 3870
Memory Address: 0x1617
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3871
Memory Address: 0x1618
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x15 0x20'
A <- (adr)


Instruction Number 3872
Memory Address: 0x161b
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xff 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3873
Memory Address: 0x161d
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3874
Memory Address: 0x161e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x10 0x20'
H <- byte 3; L <- byte 2


Instruction Number 3875
Memory Address: 0x1621
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3876
Memory Address: 0x1622
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3877
Memory Address: 0x1623
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 3878
Memory Address: 0x1624
Opcode: 0xb0
ORA B
Operands (memory order, little endian): '0x00 0x00'
A <- A | B
Z; S; P; CY; AC

Instruction Number 3879
Memory Address: 0x1625
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3880
Memory Address: 0x1626
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x25 0x20'
A <- (adr)


Instruction Number 3881
Memory Address: 0x1629
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3882
Memory Address: 0x162a
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3883
Memory Address: 0x162b
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xef 0x20'
A <- (adr)


Instruction Number 3884
Memory Address: 0x162e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3885
Memory Address: 0x162f
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x52 0x16'
if Z; PC <- adr


Instruction Number 3886
Memory Address: 0x1632
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x2d 0x20'
A <- (adr)


Instruction Number 3887
Memory Address: 0x1635
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3888
Memory Address: 0x1636
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x48 0x16'
if NZ; PC <- adr


Instruction Number 3889
Memory Address: 0x1639
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3890
Memory Address: 0x163c
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 3891
Memory Address: 0x163e
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 3892
Memory Address: 0x163f
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 3893
Memory Address: 0x1641
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x25 0x20'
(adr) <- A


Instruction Number 3894
Memory Address: 0x1644
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x2d 0x20'
(adr) <- A


Instruction Number 3895
Memory Address: 0x1647
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3896
Memory Address: 0x1648
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xc0 0x17'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3897
Memory Address: 0x164b
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x10 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 3898
Memory Address: 0x164d
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 3899
Memory Address: 0x164e
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x2d 0x20'
(adr) <- A


Instruction Number 3900
Memory Address: 0x1651
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3901
Memory Address: 0x1652
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x25 0x20'
H <- byte 3; L <- byte 2


Instruction Number 3902
Memory Address: 0x1655
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 3903
Memory Address: 0x1657
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0xed 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 3904
Memory Address: 0x165a
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3905
Memory Address: 0x165b
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 3906
Memory Address: 0x165c
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x7e 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 3907
Memory Address: 0x165e
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x63 0x16'
if CY; PC<-adr


Instruction Number 3908
Memory Address: 0x1661
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0x74 0x00'
L <- byte 2


Instruction Number 3909
Memory Address: 0x1663
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xed 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 3910
Memory Address: 0x1666
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3911
Memory Address: 0x1667
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x1d 0x20'
(adr) <- A


Instruction Number 3912
Memory Address: 0x166a
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3913
Memory Address: 0x166b
Opcode: 0x37
STC
Operands (memory order, little endian): '0x00 0x00'
CY = 1
CY

Instruction Number 3914
Memory Address: 0x166c
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 3915
Memory Address: 0x166d
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3916
Memory Address: 0x166e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x8b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3917
Memory Address: 0x1671
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x10 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3918
Memory Address: 0x1674
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 3919
Memory Address: 0x1676
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xca 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3920
Memory Address: 0x1679
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3921
Memory Address: 0x167a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xf5 0x20'
D <- byte 3; E <- byte 2


Instruction Number 3922
Memory Address: 0x167d
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3923
Memory Address: 0x167e
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 3924
Memory Address: 0x167f
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 3925
Memory Address: 0x1680
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 3926
Memory Address: 0x1681
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3927
Memory Address: 0x1682
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x8b 0x16'
if Z; PC <- adr


Instruction Number 3928
Memory Address: 0x1685
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x98 0x16'
if NCY; PC<-adr


Instruction Number 3929
Memory Address: 0x1688
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x8f 0x16'
PC <= adr


Instruction Number 3930
Memory Address: 0x168b
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 3931
Memory Address: 0x168c
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x98 0x16'
if NCY; PC<-adr


Instruction Number 3932
Memory Address: 0x168f
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3933
Memory Address: 0x1690
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 3934
Memory Address: 0x1691
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 3935
Memory Address: 0x1692
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3936
Memory Address: 0x1693
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3937
Memory Address: 0x1694
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 3938
Memory Address: 0x1695
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x50 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3939
Memory Address: 0x1698
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xce 0x20'
A <- (adr)


Instruction Number 3940
Memory Address: 0x169b
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3941
Memory Address: 0x169c
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xc9 0x16'
if Z; PC <- adr


Instruction Number 3942
Memory Address: 0x169f
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x03 0x28'
H <- byte 3; L <- byte 2


Instruction Number 3943
Memory Address: 0x16a2
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xa6 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 3944
Memory Address: 0x16a5
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x14 0x00'
C <- byte 2


Instruction Number 3945
Memory Address: 0x16a7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3946
Memory Address: 0x16aa
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 3947
Memory Address: 0x16ab
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 3948
Memory Address: 0x16ac
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x1b 0x00'
B <- byte 2


Instruction Number 3949
Memory Address: 0x16ae
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 3950
Memory Address: 0x16b1
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 3951
Memory Address: 0x16b2
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0xb7 0x16'
if CY; PC<-adr


Instruction Number 3952
Memory Address: 0x16b5
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x1c 0x00'
B <- byte 2


Instruction Number 3953
Memory Address: 0x16b7
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 3954
Memory Address: 0x16b8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xff 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3955
Memory Address: 0x16bb
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3956
Memory Address: 0x16be
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe7 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3957
Memory Address: 0x16c1
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3958
Memory Address: 0x16c2
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 3959
Memory Address: 0x16c3
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xc9 0x16'
if Z; PC <- adr


Instruction Number 3960
Memory Address: 0x16c6
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xed 0x02'
PC <= adr


Instruction Number 3961
Memory Address: 0x16c9
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x18 0x2d'
H <- byte 3; L <- byte 2


Instruction Number 3962
Memory Address: 0x16cc
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xa6 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 3963
Memory Address: 0x16cf
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0a 0x00'
C <- byte 2


Instruction Number 3964
Memory Address: 0x16d1
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3965
Memory Address: 0x16d4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb6 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3966
Memory Address: 0x16d7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3967
Memory Address: 0x16da
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3968
Memory Address: 0x16db
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xef 0x20'
(adr) <- A


Instruction Number 3969
Memory Address: 0x16de
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 3970
Memory Address: 0x16e0
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd1 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3971
Memory Address: 0x16e3
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x89 0x0b'
PC <= adr


Instruction Number 3972
Memory Address: 0x16e6
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x24'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 3973
Memory Address: 0x16e9
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 3974
Memory Address: 0x16ea
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3975
Memory Address: 0x16eb
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x15 0x20'
(adr) <- A


Instruction Number 3976
Memory Address: 0x16ee
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd8 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3977
Memory Address: 0x16f1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x04 0x00'
B <- byte 2


Instruction Number 3978
Memory Address: 0x16f3
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xfa 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3979
Memory Address: 0x16f6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x59 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3980
Memory Address: 0x16f9
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xee 0x16'
if NZ; PC <- adr


Instruction Number 3981
Memory Address: 0x16fc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3982
Memory Address: 0x16ff
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x27'
H <- byte 3; L <- byte 2


Instruction Number 3983
Memory Address: 0x1702
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xfa 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3984
Memory Address: 0x1705
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 3985
Memory Address: 0x1706
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x8b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3986
Memory Address: 0x1709
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xfb 0x00'
B <- byte 2


Instruction Number 3987
Memory Address: 0x170b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x6b 0x19'
PC <= adr


Instruction Number 3988
Memory Address: 0x170e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xca 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 3989
Memory Address: 0x1711
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3990
Memory Address: 0x1712
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 3991
Memory Address: 0x1713
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xb8 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 3992
Memory Address: 0x1716
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xa1 0x1a'
H <- byte 3; L <- byte 2


Instruction Number 3993
Memory Address: 0x1719
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 3994
Memory Address: 0x171b
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 3995
Memory Address: 0x171c
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 3996
Memory Address: 0x171d
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 3997
Memory Address: 0x171e
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x27 0x17'
if NCY; PC<-adr


Instruction Number 3998
Memory Address: 0x1721
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 3999
Memory Address: 0x1722
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4000
Memory Address: 0x1723
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4001
Memory Address: 0x1724
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x1c 0x17'
if NZ; PC <- adr


Instruction Number 4002
Memory Address: 0x1727
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4003
Memory Address: 0x1728
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xcf 0x20'
(adr) <- A


Instruction Number 4004
Memory Address: 0x172b
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4005
Memory Address: 0x172c
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x25 0x20'
A <- (adr)


Instruction Number 4006
Memory Address: 0x172f
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x00 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4007
Memory Address: 0x1731
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x39 0x17'
if NZ; PC <- adr


Instruction Number 4008
Memory Address: 0x1734
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xfd 0x00'
B <- byte 2


Instruction Number 4009
Memory Address: 0x1736
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xdc 0x19'
PC <= adr


Instruction Number 4010
Memory Address: 0x1739
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x02 0x00'
B <- byte 2


Instruction Number 4011
Memory Address: 0x173b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xfa 0x18'
PC <= adr


Instruction Number 4012
Memory Address: 0x173e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4013
Memory Address: 0x173f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4014
Memory Address: 0x1740
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x9b 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4015
Memory Address: 0x1743
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 4016
Memory Address: 0x1744
Opcode: 0xcc
CZ adr
Operands (memory order, little endian): '0x6d 0x17'
if Z; CALL adr


Instruction Number 4017
Memory Address: 0x1747
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x68 0x20'
A <- (adr)


Instruction Number 4018
Memory Address: 0x174a
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4019
Memory Address: 0x174b
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x6d 0x17'
if Z; PC <- adr


Instruction Number 4020
Memory Address: 0x174e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x96 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4021
Memory Address: 0x1751
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 4022
Memory Address: 0x1752
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4023
Memory Address: 0x1753
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x98 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4024
Memory Address: 0x1756
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4025
Memory Address: 0x1757
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 4026
Memory Address: 0x1759
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 4027
Memory Address: 0x175c
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4028
Memory Address: 0x175d
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x6d 0x17'
if Z; PC <- adr


Instruction Number 4029
Memory Address: 0x1760
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 4030
Memory Address: 0x1761
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4031
Memory Address: 0x1762
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 4032
Memory Address: 0x1763
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4033
Memory Address: 0x1764
Opcode: 0x2b
DCX H
Operands (memory order, little endian): '0x00 0x00'
HL = HL-1


Instruction Number 4034
Memory Address: 0x1765
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x01 0x00'
(HL) <- byte 2


Instruction Number 4035
Memory Address: 0x1767
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x04 0x00'
A <- byte 2


Instruction Number 4036
Memory Address: 0x1769
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x9b 0x20'
(adr) <- A


Instruction Number 4037
Memory Address: 0x176c
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4038
Memory Address: 0x176d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x98 0x20'
A <- (adr)


Instruction Number 4039
Memory Address: 0x1770
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x30 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4040
Memory Address: 0x1772
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 4041
Memory Address: 0x1774
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4042
Memory Address: 0x1775
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x95 0x20'
A <- (adr)


Instruction Number 4043
Memory Address: 0x1778
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4044
Memory Address: 0x1779
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xaa 0x17'
if Z; PC <- adr


Instruction Number 4045
Memory Address: 0x177c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x1a'
H <- byte 3; L <- byte 2


Instruction Number 4046
Memory Address: 0x177f
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x21 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 4047
Memory Address: 0x1782
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 4048
Memory Address: 0x1785
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4049
Memory Address: 0x1786
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0x8e 0x17'
if NCY; PC<-adr


Instruction Number 4050
Memory Address: 0x1789
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4051
Memory Address: 0x178a
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4052
Memory Address: 0x178b
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x85 0x17'
PC <= adr


Instruction Number 4053
Memory Address: 0x178e
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4054
Memory Address: 0x178f
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x97 0x20'
(adr) <- A


Instruction Number 4055
Memory Address: 0x1792
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x98 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4056
Memory Address: 0x1795
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4057
Memory Address: 0x1796
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x30 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4058
Memory Address: 0x1798
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 4059
Memory Address: 0x1799
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4060
Memory Address: 0x179a
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x0f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4061
Memory Address: 0x179c
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4062
Memory Address: 0x179d
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x10 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4063
Memory Address: 0x179f
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xa4 0x17'
if NZ; PC <- adr


Instruction Number 4064
Memory Address: 0x17a2
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 4065
Memory Address: 0x17a4
Opcode: 0xb0
ORA B
Operands (memory order, little endian): '0x00 0x00'
A <- A | B
Z; S; P; CY; AC

Instruction Number 4066
Memory Address: 0x17a5
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4067
Memory Address: 0x17a6
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 4068
Memory Address: 0x17a7
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x95 0x20'
(adr) <- A


Instruction Number 4069
Memory Address: 0x17aa
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x99 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4070
Memory Address: 0x17ad
Opcode: 0x35
DCR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)-1
Z; S; P; AC

Instruction Number 4071
Memory Address: 0x17ae
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4072
Memory Address: 0x17af
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xef 0x00'
B <- byte 2


Instruction Number 4073
Memory Address: 0x17b1
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xdc 0x19'
PC <= adr


Instruction Number 4074
Memory Address: 0x17b4
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0xef 0x00'
B <- byte 2


Instruction Number 4075
Memory Address: 0x17b6
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x98 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4076
Memory Address: 0x17b9
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4077
Memory Address: 0x17ba
Opcode: 0xa0
ANA B
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; B
Z; S; P; CY; AC

Instruction Number 4078
Memory Address: 0x17bb
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4079
Memory Address: 0x17bc
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x05 0x00'
special


Instruction Number 4080
Memory Address: 0x17be
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4081
Memory Address: 0x17bf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4082
Memory Address: 0x17c0
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 4083
Memory Address: 0x17c3
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4084
Memory Address: 0x17c4
Opcode: 0xd2
JNC adr
Operands (memory order, little endian): '0xca 0x17'
if NCY; PC<-adr


Instruction Number 4085
Memory Address: 0x17c7
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 4086
Memory Address: 0x17c9
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4087
Memory Address: 0x17ca
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 4088
Memory Address: 0x17cc
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4089
Memory Address: 0x17cd
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x02 0x00'
special


Instruction Number 4090
Memory Address: 0x17cf
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x04 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4091
Memory Address: 0x17d1
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 4092
Memory Address: 0x17d2
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x9a 0x20'
A <- (adr)


Instruction Number 4093
Memory Address: 0x17d5
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4094
Memory Address: 0x17d6
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4095
Memory Address: 0x17d7
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x24'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 4096
Memory Address: 0x17da
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x04 0x00'
B <- byte 2


Instruction Number 4097
Memory Address: 0x17dc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd6 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4098
Memory Address: 0x17df
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4099
Memory Address: 0x17e0
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xdc 0x17'
if NZ; PC <- adr


Instruction Number 4100
Memory Address: 0x17e3
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 4101
Memory Address: 0x17e5
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x9a 0x20'
(adr) <- A


Instruction Number 4102
Memory Address: 0x17e8
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4103
Memory Address: 0x17eb
Opcode: 0xfb
EI
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4104
Memory Address: 0x17ec
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xbc 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 4105
Memory Address: 0x17ef
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x16 0x30'
H <- byte 3; L <- byte 2


Instruction Number 4106
Memory Address: 0x17f2
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x04 0x00'
C <- byte 2


Instruction Number 4107
Memory Address: 0x17f4
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4108
Memory Address: 0x17f7
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4109
Memory Address: 0x17fa
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 4110
Memory Address: 0x17fb
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x9a 0x20'
(adr) <- A


Instruction Number 4111
Memory Address: 0x17fe
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x93 0x20'
(adr) <- A


Instruction Number 4112
Memory Address: 0x1801
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xc9 0x16'
PC <= adr


Instruction Number 4113
Memory Address: 0x1804
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x84 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4114
Memory Address: 0x1807
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4115
Memory Address: 0x1808
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4116
Memory Address: 0x1809
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x07 0x07'
if Z; PC <- adr


Instruction Number 4117
Memory Address: 0x180c
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4118
Memory Address: 0x180d
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4119
Memory Address: 0x180e
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4120
Memory Address: 0x180f
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4121
Memory Address: 0x1810
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x01 0x00'
B <- byte 2


Instruction Number 4122
Memory Address: 0x1812
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xfa 0x18'
PC <= adr


Instruction Number 4123
Memory Address: 0x1815
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x10 0x28'
H <- byte 3; L <- byte 2


Instruction Number 4124
Memory Address: 0x1818
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xa3 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 4125
Memory Address: 0x181b
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x15 0x00'
C <- byte 2


Instruction Number 4126
Memory Address: 0x181d
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xf3 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4127
Memory Address: 0x1820
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x0a 0x00'
A <- byte 2


Instruction Number 4128
Memory Address: 0x1822
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x6c 0x20'
(adr) <- A


Instruction Number 4129
Memory Address: 0x1825
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xbe 0x1d'
B <- byte 3; C <- byte 2


Instruction Number 4130
Memory Address: 0x1828
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x56 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4131
Memory Address: 0x182b
Opcode: 0xda
JC adr
Operands (memory order, little endian): '0x37 0x18'
if CY; PC<-adr


Instruction Number 4132
Memory Address: 0x182e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x44 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4133
Memory Address: 0x1831
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x28 0x18'
PC <= adr


Instruction Number 4134
Memory Address: 0x1834
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xb1 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4135
Memory Address: 0x1837
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xcf 0x1d'
B <- byte 3; C <- byte 2


Instruction Number 4136
Memory Address: 0x183a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x56 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4137
Memory Address: 0x183d
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 4138
Memory Address: 0x183e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x4c 0x18'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4139
Memory Address: 0x1841
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x3a 0x18'
PC <= adr


Instruction Number 4140
Memory Address: 0x1844
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 4141
Memory Address: 0x1845
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 4142
Memory Address: 0x1847
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x39 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4143
Memory Address: 0x184a
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 4144
Memory Address: 0x184b
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4145
Memory Address: 0x184c
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 4146
Memory Address: 0x184d
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6c 0x20'
A <- (adr)


Instruction Number 4147
Memory Address: 0x1850
Opcode: 0x4f
MOV C;A
Operands (memory order, little endian): '0x00 0x00'
C <- A


Instruction Number 4148
Memory Address: 0x1851
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x93 0x0a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4149
Memory Address: 0x1854
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 4150
Memory Address: 0x1855
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4151
Memory Address: 0x1856
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4152
Memory Address: 0x1857
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0xff 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4153
Memory Address: 0x1859
Opcode: 0x37
STC
Operands (memory order, little endian): '0x00 0x00'
CY = 1
CY

Instruction Number 4154
Memory Address: 0x185a
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 4155
Memory Address: 0x185b
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 4156
Memory Address: 0x185c
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4157
Memory Address: 0x185d
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4158
Memory Address: 0x185e
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 4159
Memory Address: 0x185f
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4160
Memory Address: 0x1860
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4161
Memory Address: 0x1861
Opcode: 0x5f
MOV E;A
Operands (memory order, little endian): '0x00 0x00'
E <- A


Instruction Number 4162
Memory Address: 0x1862
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4163
Memory Address: 0x1863
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4164
Memory Address: 0x1864
Opcode: 0x57
MOV D;A
Operands (memory order, little endian): '0x00 0x00'
D <- A


Instruction Number 4165
Memory Address: 0x1865
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4166
Memory Address: 0x1866
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4167
Memory Address: 0x1867
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4168
Memory Address: 0x1868
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xc2 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4169
Memory Address: 0x186b
Opcode: 0x34
INR M
Operands (memory order, little endian): '0x00 0x00'
(HL) <- (HL)+1
Z; S; P; AC

Instruction Number 4170
Memory Address: 0x186c
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4171
Memory Address: 0x186d
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 4172
Memory Address: 0x186e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd9 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4173
Memory Address: 0x1871
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 4174
Memory Address: 0x1872
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xca 0x20'
A <- (adr)


Instruction Number 4175
Memory Address: 0x1875
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 4176
Memory Address: 0x1876
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0x98 0x18'
if Z; PC <- adr


Instruction Number 4177
Memory Address: 0x1879
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xc2 0x20'
A <- (adr)


Instruction Number 4178
Memory Address: 0x187c
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x04 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4179
Memory Address: 0x187e
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0xcc 0x20'
L <- (adr); H<-(adr+1)


Instruction Number 4180
Memory Address: 0x1881
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x88 0x18'
if NZ; PC <- adr


Instruction Number 4181
Memory Address: 0x1884
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x30 0x00'
D <- byte 3; E <- byte 2


Instruction Number 4182
Memory Address: 0x1887
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4183
Memory Address: 0x1888
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0xc7 0x20'
(adr) <-L; (adr+1)<-H


Instruction Number 4184
Memory Address: 0x188b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xc5 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4185
Memory Address: 0x188e
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3b 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4186
Memory Address: 0x1891
Opcode: 0xeb
XCHG
Operands (memory order, little endian): '0x00 0x00'
H <-&gt; D; L <-&gt; E


Instruction Number 4187
Memory Address: 0x1892
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd3 0x15'
PC <= adr


Instruction Number 4188
Memory Address: 0x1895
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4189
Memory Address: 0x1896
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4190
Memory Address: 0x1897
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4191
Memory Address: 0x1898
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 4192
Memory Address: 0x189a
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xcb 0x20'
(adr) <- A


Instruction Number 4193
Memory Address: 0x189d
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4194
Memory Address: 0x189e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x50 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4195
Memory Address: 0x18a1
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xc0 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 4196
Memory Address: 0x18a4
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 4197
Memory Address: 0x18a6
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x32 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4198
Memory Address: 0x18a9
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x02 0x00'
A <- byte 2


Instruction Number 4199
Memory Address: 0x18ab
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x80 0x20'
(adr) <- A


Instruction Number 4200
Memory Address: 0x18ae
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0xff 0x00'
A <- byte 2


Instruction Number 4201
Memory Address: 0x18b0
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x7e 0x20'
(adr) <- A


Instruction Number 4202
Memory Address: 0x18b3
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x04 0x00'
A <- byte 2


Instruction Number 4203
Memory Address: 0x18b5
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 4204
Memory Address: 0x18b8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x55 0x20'
A <- (adr)


Instruction Number 4205
Memory Address: 0x18bb
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4206
Memory Address: 0x18bd
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xb8 0x18'
if Z; PC <- adr


Instruction Number 4207
Memory Address: 0x18c0
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x55 0x20'
A <- (adr)


Instruction Number 4208
Memory Address: 0x18c3
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x01 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4209
Memory Address: 0x18c5
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xc0 0x18'
if NZ; PC <- adr


Instruction Number 4210
Memory Address: 0x18c8
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x11 0x33'
H <- byte 3; L <- byte 2


Instruction Number 4211
Memory Address: 0x18cb
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x26 0x00'
A <- byte 2


Instruction Number 4212
Memory Address: 0x18cd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4213
Memory Address: 0x18ce
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xff 0x08'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4214
Memory Address: 0x18d1
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xb6 0x0a'
PC <= adr


Instruction Number 4215
Memory Address: 0x18d4
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x24'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 4216
Memory Address: 0x18d7
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 4217
Memory Address: 0x18d9
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe6 0x01'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4218
Memory Address: 0x18dc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x56 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4219
Memory Address: 0x18df
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x08 0x00'
A <- byte 2


Instruction Number 4220
Memory Address: 0x18e1
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xcf 0x20'
(adr) <- A


Instruction Number 4221
Memory Address: 0x18e4
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xea 0x0a'
PC <= adr


Instruction Number 4222
Memory Address: 0x18e7
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 4223
Memory Address: 0x18ea
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xe7 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4224
Memory Address: 0x18ed
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4225
Memory Address: 0x18ee
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 4226
Memory Address: 0x18ef
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4227
Memory Address: 0x18f0
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4228
Memory Address: 0x18f1
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x02 0x00'
B <- byte 2


Instruction Number 4229
Memory Address: 0x18f3
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x82 0x20'
A <- (adr)


Instruction Number 4230
Memory Address: 0x18f6
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4231
Memory Address: 0x18f7
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4232
Memory Address: 0x18f8
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4233
Memory Address: 0x18f9
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4234
Memory Address: 0x18fa
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x94 0x20'
A <- (adr)


Instruction Number 4235
Memory Address: 0x18fd
Opcode: 0xb0
ORA B
Operands (memory order, little endian): '0x00 0x00'
A <- A | B
Z; S; P; CY; AC

Instruction Number 4236
Memory Address: 0x18fe
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x94 0x20'
(adr) <- A


Instruction Number 4237
Memory Address: 0x1901
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 4238
Memory Address: 0x1903
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4239
Memory Address: 0x1904
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x22'
H <- byte 3; L <- byte 2


Instruction Number 4240
Memory Address: 0x1907
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xc3 0x01'
PC <= adr


Instruction Number 4241
Memory Address: 0x190a
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd8 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4242
Memory Address: 0x190d
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x97 0x15'
PC <= adr


Instruction Number 4243
Memory Address: 0x1910
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xe7 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4244
Memory Address: 0x1913
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x67 0x20'
A <- (adr)


Instruction Number 4245
Memory Address: 0x1916
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4246
Memory Address: 0x1917
Opcode: 0xd8
RC
Operands (memory order, little endian): '0x00 0x00'
if CY; RET


Instruction Number 4247
Memory Address: 0x1918
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4248
Memory Address: 0x1919
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4249
Memory Address: 0x191a
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x1c 0x00'
C <- byte 2


Instruction Number 4250
Memory Address: 0x191c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x1e 0x24'
H <- byte 3; L <- byte 2


Instruction Number 4251
Memory Address: 0x191f
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xe4 0x1a'
D <- byte 3; E <- byte 2


Instruction Number 4252
Memory Address: 0x1922
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf3 0x08'
PC <= adr


Instruction Number 4253
Memory Address: 0x1925
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xf8 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4254
Memory Address: 0x1928
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x31 0x19'
PC <= adr


Instruction Number 4255
Memory Address: 0x192b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xfc 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4256
Memory Address: 0x192e
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x31 0x19'
PC <= adr


Instruction Number 4257
Memory Address: 0x1931
Opcode: 0x5e
MOV E;M
Operands (memory order, little endian): '0x00 0x00'
E <- (HL)


Instruction Number 4258
Memory Address: 0x1932
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4259
Memory Address: 0x1933
Opcode: 0x56
MOV D;M
Operands (memory order, little endian): '0x00 0x00'
D <- (HL)


Instruction Number 4260
Memory Address: 0x1934
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4261
Memory Address: 0x1935
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4262
Memory Address: 0x1936
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4263
Memory Address: 0x1937
Opcode: 0x66
MOV H;M
Operands (memory order, little endian): '0x00 0x00'
H <- (HL)


Instruction Number 4264
Memory Address: 0x1938
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 4265
Memory Address: 0x1939
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xad 0x09'
PC <= adr


Instruction Number 4266
Memory Address: 0x193c
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x07 0x00'
C <- byte 2


Instruction Number 4267
Memory Address: 0x193e
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x35'
H <- byte 3; L <- byte 2


Instruction Number 4268
Memory Address: 0x1941
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xa9 0x1f'
D <- byte 3; E <- byte 2


Instruction Number 4269
Memory Address: 0x1944
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf3 0x08'
PC <= adr


Instruction Number 4270
Memory Address: 0x1947
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0xeb 0x20'
A <- (adr)


Instruction Number 4271
Memory Address: 0x194a
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x3c'
H <- byte 3; L <- byte 2


Instruction Number 4272
Memory Address: 0x194d
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xb2 0x09'
PC <= adr


Instruction Number 4273
Memory Address: 0x1950
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0xf4 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4274
Memory Address: 0x1953
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x31 0x19'
PC <= adr


Instruction Number 4275
Memory Address: 0x1956
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x5c 0x1a'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4276
Memory Address: 0x1959
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x1a 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4277
Memory Address: 0x195c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x25 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4278
Memory Address: 0x195f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2b 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4279
Memory Address: 0x1962
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x50 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4280
Memory Address: 0x1965
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x3c 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4281
Memory Address: 0x1968
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x47 0x19'
PC <= adr


Instruction Number 4282
Memory Address: 0x196b
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xdc 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4283
Memory Address: 0x196e
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x71 0x16'
PC <= adr


Instruction Number 4284
Memory Address: 0x1971
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 4285
Memory Address: 0x1973
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x6d 0x20'
(adr) <- A


Instruction Number 4286
Memory Address: 0x1976
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xe6 0x16'
PC <= adr


Instruction Number 4287
Memory Address: 0x1979
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xd7 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4288
Memory Address: 0x197c
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x47 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4289
Memory Address: 0x197f
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0x3c 0x19'
PC <= adr


Instruction Number 4290
Memory Address: 0x1982
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xc1 0x20'
(adr) <- A


Instruction Number 4291
Memory Address: 0x1985
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4292
Memory Address: 0x1986
Opcode: 0x8b
ADC E
Operands (memory order, little endian): '0x00 0x00'
A <- A + E + CY
Z; S; P; CY; AC

Instruction Number 4293
Memory Address: 0x1987
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4294
Memory Address: 0x1988
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd6 0x09'
PC <= adr


Instruction Number 4295
Memory Address: 0x198b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x03 0x28'
H <- byte 3; L <- byte 2


Instruction Number 4296
Memory Address: 0x198e
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xbe 0x19'
D <- byte 3; E <- byte 2


Instruction Number 4297
Memory Address: 0x1991
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x13 0x00'
C <- byte 2


Instruction Number 4298
Memory Address: 0x1993
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf3 0x08'
PC <= adr


Instruction Number 4299
Memory Address: 0x1996
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4300
Memory Address: 0x1997
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4301
Memory Address: 0x1998
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4302
Memory Address: 0x1999
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4303
Memory Address: 0x199a
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x1e 0x20'
A <- (adr)


Instruction Number 4304
Memory Address: 0x199d
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4305
Memory Address: 0x199e
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xac 0x19'
if NZ; PC <- adr


Instruction Number 4306
Memory Address: 0x19a1
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 4307
Memory Address: 0x19a3
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x76 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4308
Memory Address: 0x19a5
Opcode: 0xd6
SUI D8
Operands (memory order, little endian): '0x72 0x00'
A <- A - data
Z; S; P; CY; AC

Instruction Number 4309
Memory Address: 0x19a7
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4310
Memory Address: 0x19a8
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4311
Memory Address: 0x19a9
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x1e 0x20'
(adr) <- A


Instruction Number 4312
Memory Address: 0x19ac
Opcode: 0xdb
IN D8
Operands (memory order, little endian): '0x01 0x00'
special


Instruction Number 4313
Memory Address: 0x19ae
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x76 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4314
Memory Address: 0x19b0
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x34 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4315
Memory Address: 0x19b2
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4316
Memory Address: 0x19b3
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x1b 0x2e'
H <- byte 3; L <- byte 2


Instruction Number 4317
Memory Address: 0x19b6
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0xf7 0x0b'
D <- byte 3; E <- byte 2


Instruction Number 4318
Memory Address: 0x19b9
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x09 0x00'
C <- byte 2


Instruction Number 4319
Memory Address: 0x19bb
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xf3 0x08'
PC <= adr


Instruction Number 4320
Memory Address: 0x19be
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4321
Memory Address: 0x19bf
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4322
Memory Address: 0x19c0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4323
Memory Address: 0x19c1
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4324
Memory Address: 0x19c2
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4325
Memory Address: 0x19c3
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x26 0x00'
C <- byte 2


Instruction Number 4326
Memory Address: 0x19c5
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4327
Memory Address: 0x19c6
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4328
Memory Address: 0x19c8
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4329
Memory Address: 0x19c9
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4330
Memory Address: 0x19cb
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4331
Memory Address: 0x19cc
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4332
Memory Address: 0x19cd
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4333
Memory Address: 0x19ce
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0d 0x00'
C <- byte 2


Instruction Number 4334
Memory Address: 0x19d0
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4335
Memory Address: 0x19d1
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x01 0x00'
A <- byte 2


Instruction Number 4336
Memory Address: 0x19d3
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0xe9 0x20'
(adr) <- A


Instruction Number 4337
Memory Address: 0x19d6
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4338
Memory Address: 0x19d7
Opcode: 0xaf
XRA A
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ A
Z; S; P; CY; AC

Instruction Number 4339
Memory Address: 0x19d8
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xd3 0x19'
PC <= adr


Instruction Number 4340
Memory Address: 0x19db
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4341
Memory Address: 0x19dc
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x94 0x20'
A <- (adr)


Instruction Number 4342
Memory Address: 0x19df
Opcode: 0xa0
ANA B
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; B
Z; S; P; CY; AC

Instruction Number 4343
Memory Address: 0x19e0
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x94 0x20'
(adr) <- A


Instruction Number 4344
Memory Address: 0x19e3
Opcode: 0xd3
OUT D8
Operands (memory order, little endian): '0x03 0x00'
special


Instruction Number 4345
Memory Address: 0x19e5
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4346
Memory Address: 0x19e6
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x27'
H <- byte 3; L <- byte 2


Instruction Number 4347
Memory Address: 0x19e9
Opcode: 0xca
JZ adr
Operands (memory order, little endian): '0xfa 0x19'
if Z; PC <- adr


Instruction Number 4348
Memory Address: 0x19ec
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x60 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 4349
Memory Address: 0x19ef
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 4350
Memory Address: 0x19f1
Opcode: 0x4f
MOV C;A
Operands (memory order, little endian): '0x00 0x00'
C <- A


Instruction Number 4351
Memory Address: 0x19f2
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x39 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4352
Memory Address: 0x19f5
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 4353
Memory Address: 0x19f6
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4354
Memory Address: 0x19f7
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xec 0x19'
if NZ; PC <- adr


Instruction Number 4355
Memory Address: 0x19fa
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x10 0x00'
B <- byte 2


Instruction Number 4356
Memory Address: 0x19fc
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xcb 0x14'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4357
Memory Address: 0x19ff
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 4358
Memory Address: 0x1a00
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x35 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4359
Memory Address: 0x1a02
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0xfa 0x19'
if NZ; PC <- adr


Instruction Number 4360
Memory Address: 0x1a05
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4361
Memory Address: 0x1a06
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x72 0x20'
H <- byte 3; L <- byte 2


Instruction Number 4362
Memory Address: 0x1a09
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 4363
Memory Address: 0x1a0a
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4364
Memory Address: 0x1a0b
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x80 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4365
Memory Address: 0x1a0d
Opcode: 0xa8
XRA B
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ B
Z; S; P; CY; AC

Instruction Number 4366
Memory Address: 0x1a0e
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4367
Memory Address: 0x1a0f
Opcode: 0x37
STC
Operands (memory order, little endian): '0x00 0x00'
CY = 1
CY

Instruction Number 4368
Memory Address: 0x1a10
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4369
Memory Address: 0x1a11
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x2b 0x24'
(adr) <- A


Instruction Number 4370
Memory Address: 0x1a14
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4371
Memory Address: 0x1a15
Opcode: 0x16
MVI D; D8
Operands (memory order, little endian): '0x11 0x00'
D <- byte 2


Instruction Number 4372
Memory Address: 0x1a17
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4373
Memory Address: 0x1a18
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4374
Memory Address: 0x1a19
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4375
Memory Address: 0x1a1a
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4376
Memory Address: 0x1a1b
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x05 0x00'
B <- byte 2


Instruction Number 4377
Memory Address: 0x1a1d
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4378
Memory Address: 0x1a1e
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4379
Memory Address: 0x1a1f
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4380
Memory Address: 0x1a20
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x34 0x2e'
B <- byte 3; C <- byte 2


Instruction Number 4381
Memory Address: 0x1a23
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4382
Memory Address: 0x1a24
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x1c 0x18'
(adr) <-L; (adr+1)<-H


Instruction Number 4383
Memory Address: 0x1a27
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 4384
Memory Address: 0x1a28
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4385
Memory Address: 0x1a29
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4386
Memory Address: 0x1a2a
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0d 0x00'
C <- byte 2


Instruction Number 4387
Memory Address: 0x1a2c
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 4388
Memory Address: 0x1a2d
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4389
Memory Address: 0x1a2e
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 4390
Memory Address: 0x1a2f
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4391
Memory Address: 0x1a30
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4392
Memory Address: 0x1a31
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4393
Memory Address: 0x1a32
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4394
Memory Address: 0x1a33
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4395
Memory Address: 0x1a34
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4396
Memory Address: 0x1a35
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4397
Memory Address: 0x1a36
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4398
Memory Address: 0x1a37
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x32 0x1a'
if NZ; PC <- adr


Instruction Number 4399
Memory Address: 0x1a3a
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4400
Memory Address: 0x1a3b
Opcode: 0x5e
MOV E;M
Operands (memory order, little endian): '0x00 0x00'
E <- (HL)


Instruction Number 4401
Memory Address: 0x1a3c
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4402
Memory Address: 0x1a3d
Opcode: 0x56
MOV D;M
Operands (memory order, little endian): '0x00 0x00'
D <- (HL)


Instruction Number 4403
Memory Address: 0x1a3e
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4404
Memory Address: 0x1a3f
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4405
Memory Address: 0x1a40
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4406
Memory Address: 0x1a41
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 4407
Memory Address: 0x1a42
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4408
Memory Address: 0x1a43
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 4409
Memory Address: 0x1a44
Opcode: 0x61
MOV H;C
Operands (memory order, little endian): '0x00 0x00'
H <- C


Instruction Number 4410
Memory Address: 0x1a45
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 4411
Memory Address: 0x1a46
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4412
Memory Address: 0x1a47
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 4413
Memory Address: 0x1a48
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x03 0x00'
B <- byte 2


Instruction Number 4414
Memory Address: 0x1a4a
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 4415
Memory Address: 0x1a4b
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4416
Memory Address: 0x1a4c
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 4417
Memory Address: 0x1a4d
Opcode: 0x7d
MOV A;L
Operands (memory order, little endian): '0x00 0x00'
A <- L


Instruction Number 4418
Memory Address: 0x1a4e
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4419
Memory Address: 0x1a4f
Opcode: 0x6f
MOV L;A
Operands (memory order, little endian): '0x00 0x00'
L <- A


Instruction Number 4420
Memory Address: 0x1a50
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4421
Memory Address: 0x1a51
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x4a 0x1a'
if NZ; PC <- adr


Instruction Number 4422
Memory Address: 0x1a54
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 4423
Memory Address: 0x1a55
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x3f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4424
Memory Address: 0x1a57
Opcode: 0xf6
ORI D8
Operands (memory order, little endian): '0x20 0x00'
A <- A | data
Z; S; P; CY; AC

Instruction Number 4425
Memory Address: 0x1a59
Opcode: 0x67
MOV H;A
Operands (memory order, little endian): '0x00 0x00'
H <- A


Instruction Number 4426
Memory Address: 0x1a5a
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 4427
Memory Address: 0x1a5b
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4428
Memory Address: 0x1a5c
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x00 0x24'
H <- byte 3; L <- byte 2


Instruction Number 4429
Memory Address: 0x1a5f
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 4430
Memory Address: 0x1a61
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4431
Memory Address: 0x1a62
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 4432
Memory Address: 0x1a63
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x40 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4433
Memory Address: 0x1a65
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x5f 0x1a'
if NZ; PC <- adr


Instruction Number 4434
Memory Address: 0x1a68
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4435
Memory Address: 0x1a69
Opcode: 0xc5
PUSH B
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-C; (sp-1)<-B; sp <- sp - 2


Instruction Number 4436
Memory Address: 0x1a6a
Opcode: 0xe5
PUSH H
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-L; (sp-1)<-H; sp <- sp - 2


Instruction Number 4437
Memory Address: 0x1a6b
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4438
Memory Address: 0x1a6c
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 4439
Memory Address: 0x1a6d
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4440
Memory Address: 0x1a6e
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4441
Memory Address: 0x1a6f
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 4442
Memory Address: 0x1a70
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4443
Memory Address: 0x1a71
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x6b 0x1a'
if NZ; PC <- adr


Instruction Number 4444
Memory Address: 0x1a74
Opcode: 0xe1
POP H
Operands (memory order, little endian): '0x00 0x00'
L <- (sp); H <- (sp+1); sp <- sp+2


Instruction Number 4445
Memory Address: 0x1a75
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x20 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4446
Memory Address: 0x1a78
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 4447
Memory Address: 0x1a79
Opcode: 0xc1
POP B
Operands (memory order, little endian): '0x00 0x00'
C <- (sp); B <- (sp+1); sp <- sp+2


Instruction Number 4448
Memory Address: 0x1a7a
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4449
Memory Address: 0x1a7b
Opcode: 0xc2
JNZ adr
Operands (memory order, little endian): '0x69 0x1a'
if NZ; PC <- adr


Instruction Number 4450
Memory Address: 0x1a7e
Opcode: 0xc9
RET
Operands (memory order, little endian): '0x00 0x00'
PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2


Instruction Number 4451
Memory Address: 0x1a7f
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0x2e 0x09'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4452
Memory Address: 0x1a82
Opcode: 0xa7
ANA A
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; A
Z; S; P; CY; AC

Instruction Number 4453
Memory Address: 0x1a83
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 4454
Memory Address: 0x1a84
Opcode: 0xf5
PUSH PSW
Operands (memory order, little endian): '0x00 0x00'
(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2


Instruction Number 4455
Memory Address: 0x1a85
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4456
Memory Address: 0x1a86
Opcode: 0x77
MOV M;A
Operands (memory order, little endian): '0x00 0x00'
(HL) <- C


Instruction Number 4457
Memory Address: 0x1a87
Opcode: 0xcd
CALL adr
Operands (memory order, little endian): '0xe6 0x19'
(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP+2;PC=adr


Instruction Number 4458
Memory Address: 0x1a8a
Opcode: 0xf1
POP PSW
Operands (memory order, little endian): '0x00 0x00'
flags <- (sp); A <- (sp+1); sp <- sp+2


Instruction Number 4459
Memory Address: 0x1a8b
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x25'
H <- byte 3; L <- byte 2


Instruction Number 4460
Memory Address: 0x1a8e
Opcode: 0xe6
ANI D8
Operands (memory order, little endian): '0x0f 0x00'
A <- A &amp; data
Z; S; P; CY; AC

Instruction Number 4461
Memory Address: 0x1a90
Opcode: 0xc3
JMP adr
Operands (memory order, little endian): '0xc5 0x09'
PC <= adr


Instruction Number 4462
Memory Address: 0x1a93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4463
Memory Address: 0x1a94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4464
Memory Address: 0x1a95
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4465
Memory Address: 0x1a96
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4466
Memory Address: 0x1a97
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4467
Memory Address: 0x1a98
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 4468
Memory Address: 0x1a99
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x20 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4469
Memory Address: 0x1a9b
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4470
Memory Address: 0x1a9c
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4471
Memory Address: 0x1a9d
Opcode: 0x9e
SBB M
Operands (memory order, little endian): '0x00 0x00'
A <- A - (HL) - CY
Z; S; P; CY; AC

Instruction Number 4472
Memory Address: 0x1a9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4473
Memory Address: 0x1a9f
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4474
Memory Address: 0x1aa0
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4475
Memory Address: 0x1aa1
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4476
Memory Address: 0x1aa2
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4477
Memory Address: 0x1aa3
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4478
Memory Address: 0x1aa4
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4479
Memory Address: 0x1aa5
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4480
Memory Address: 0x1aa6
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 4481
Memory Address: 0x1aa8
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 4482
Memory Address: 0x1aa9
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4483
Memory Address: 0x1aaa
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0e 0x00'
L <- byte 2


Instruction Number 4484
Memory Address: 0x1aac
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 4485
Memory Address: 0x1aad
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4486
Memory Address: 0x1aae
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x26 0x26'
D <- byte 3; E <- byte 2


Instruction Number 4487
Memory Address: 0x1ab1
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4488
Memory Address: 0x1ab2
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4489
Memory Address: 0x1ab3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4490
Memory Address: 0x1ab4
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4491
Memory Address: 0x1ab5
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4492
Memory Address: 0x1ab6
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x24 0x26'
D <- byte 3; E <- byte 2


Instruction Number 4493
Memory Address: 0x1ab9
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 4494
Memory Address: 0x1aba
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 4495
Memory Address: 0x1abb
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0e 0x00'
L <- byte 2


Instruction Number 4496
Memory Address: 0x1abd
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x26 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 4497
Memory Address: 0x1ac0
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4498
Memory Address: 0x1ac1
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4499
Memory Address: 0x1ac2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4500
Memory Address: 0x1ac3
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4501
Memory Address: 0x1ac4
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4502
Memory Address: 0x1ac5
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x12 0x26'
D <- byte 3; E <- byte 2


Instruction Number 4503
Memory Address: 0x1ac8
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x14 0x13'
B <- byte 3; C <- byte 2


Instruction Number 4504
Memory Address: 0x1acb
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4505
Memory Address: 0x1acc
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0d 0x00'
C <- byte 2


Instruction Number 4506
Memory Address: 0x1ace
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0e 0x00'
L <- byte 2


Instruction Number 4507
Memory Address: 0x1ad0
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4508
Memory Address: 0x1ad1
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4509
Memory Address: 0x1ad2
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4510
Memory Address: 0x1ad3
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x1b 0x00'
L <- byte 2


Instruction Number 4511
Memory Address: 0x1ad5
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4512
Memory Address: 0x1ad6
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4513
Memory Address: 0x1ad7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4514
Memory Address: 0x1ad8
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4515
Memory Address: 0x1ad9
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4516
Memory Address: 0x1ada
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x26 0x26'
D <- byte 3; E <- byte 2


Instruction Number 4517
Memory Address: 0x1add
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x14 0x13'
B <- byte 3; C <- byte 2


Instruction Number 4518
Memory Address: 0x1ae0
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4519
Memory Address: 0x1ae1
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x0d 0x00'
C <- byte 2


Instruction Number 4520
Memory Address: 0x1ae3
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x26 0x00'
L <- byte 2


Instruction Number 4521
Memory Address: 0x1ae5
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 4522
Memory Address: 0x1ae6
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4523
Memory Address: 0x1ae7
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4524
Memory Address: 0x1ae9
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4525
Memory Address: 0x1aea
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 4526
Memory Address: 0x1aeb
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 4527
Memory Address: 0x1aec
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 4528
Memory Address: 0x1aed
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x07 0x00'
L <- byte 2


Instruction Number 4529
Memory Address: 0x1aef
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4530
Memory Address: 0x1af0
Opcode: 0x3f
CMC
Operands (memory order, little endian): '0x00 0x00'
CY=!CY
CY

Instruction Number 4531
Memory Address: 0x1af1
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 4532
Memory Address: 0x1af2
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4533
Memory Address: 0x1af3
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4534
Memory Address: 0x1af5
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4535
Memory Address: 0x1af6
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x12 0x00'
L <- byte 2


Instruction Number 4536
Memory Address: 0x1af8
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4537
Memory Address: 0x1af9
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4538
Memory Address: 0x1afb
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4539
Memory Address: 0x1afc
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 4540
Memory Address: 0x1afd
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4541
Memory Address: 0x1afe
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 4542
Memory Address: 0x1aff
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x01 0x00'
L <- byte 2


Instruction Number 4543
Memory Address: 0x1b01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4544
Memory Address: 0x1b02
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4545
Memory Address: 0x1b03
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4546
Memory Address: 0x1b04
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4547
Memory Address: 0x1b05
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4548
Memory Address: 0x1b06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4549
Memory Address: 0x1b07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4550
Memory Address: 0x1b08
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4551
Memory Address: 0x1b09
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4552
Memory Address: 0x1b0a
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4553
Memory Address: 0x1b0b
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4554
Memory Address: 0x1b0c
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4555
Memory Address: 0x1b0d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4556
Memory Address: 0x1b0e
Opcode: 0xf8
RM
Operands (memory order, little endian): '0x00 0x00'
if M; RET


Instruction Number 4557
Memory Address: 0x1b0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4558
Memory Address: 0x1b10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4559
Memory Address: 0x1b11
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 4560
Memory Address: 0x1b12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4561
Memory Address: 0x1b13
Opcode: 0x8e
ADC M
Operands (memory order, little endian): '0x00 0x00'
A <- A + (HL) + CY
Z; S; P; CY; AC

Instruction Number 4562
Memory Address: 0x1b14
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4563
Memory Address: 0x1b15
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4564
Memory Address: 0x1b16
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4565
Memory Address: 0x1b17
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 4566
Memory Address: 0x1b18
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 4567
Memory Address: 0x1b19
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4568
Memory Address: 0x1b1a
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4569
Memory Address: 0x1b1b
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4570
Memory Address: 0x1b1c
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4571
Memory Address: 0x1b1d
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4572
Memory Address: 0x1b20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4573
Memory Address: 0x1b21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4574
Memory Address: 0x1b22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4575
Memory Address: 0x1b23
Opcode: 0xbb
CMP E
Operands (memory order, little endian): '0x00 0x00'
A - E
Z; S; P; CY; AC

Instruction Number 4576
Memory Address: 0x1b24
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4577
Memory Address: 0x1b25
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4578
Memory Address: 0x1b26
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4579
Memory Address: 0x1b27
Opcode: 0x90
SUB B
Operands (memory order, little endian): '0x00 0x00'
A <- A - B
Z; S; P; CY; AC

Instruction Number 4580
Memory Address: 0x1b28
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4581
Memory Address: 0x1b29
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4582
Memory Address: 0x1b2a
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4583
Memory Address: 0x1b2b
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x04 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4584
Memory Address: 0x1b2e
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4585
Memory Address: 0x1b2f
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4586
Memory Address: 0x1b30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4587
Memory Address: 0x1b31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4588
Memory Address: 0x1b32
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4589
Memory Address: 0x1b33
Opcode: 0x76
HLT
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4590
Memory Address: 0x1b34
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4591
Memory Address: 0x1b35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4592
Memory Address: 0x1b36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4593
Memory Address: 0x1b37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4594
Memory Address: 0x1b38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4595
Memory Address: 0x1b39
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4596
Memory Address: 0x1b3a
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4597
Memory Address: 0x1b3b
Opcode: 0xee
XRI D8
Operands (memory order, little endian): '0x1c 0x00'
A <- A ^ data
Z; S; P; CY; AC

Instruction Number 4598
Memory Address: 0x1b3d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4599
Memory Address: 0x1b3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4600
Memory Address: 0x1b3f
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4601
Memory Address: 0x1b40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4602
Memory Address: 0x1b41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4603
Memory Address: 0x1b42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4604
Memory Address: 0x1b43
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 4605
Memory Address: 0x1b44
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4606
Memory Address: 0x1b45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4607
Memory Address: 0x1b46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4608
Memory Address: 0x1b47
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x1d'
B <- byte 3; C <- byte 2


Instruction Number 4609
Memory Address: 0x1b4a
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4610
Memory Address: 0x1b4b
Opcode: 0xe2
JPO adr
Operands (memory order, little endian): '0x1c 0x00'
if PO; PC <- adr


Instruction Number 4611
Memory Address: 0x1b4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4612
Memory Address: 0x1b4f
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4613
Memory Address: 0x1b50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4614
Memory Address: 0x1b51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4615
Memory Address: 0x1b52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4616
Memory Address: 0x1b53
Opcode: 0x82
ADD D
Operands (memory order, little endian): '0x00 0x00'
A <- A + D
Z; S; P; CY; AC

Instruction Number 4617
Memory Address: 0x1b54
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 4618
Memory Address: 0x1b56
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4619
Memory Address: 0x1b57
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x06 0x1d'
B <- byte 3; C <- byte 2


Instruction Number 4620
Memory Address: 0x1b5a
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4621
Memory Address: 0x1b5b
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 4622
Memory Address: 0x1b5c
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4623
Memory Address: 0x1b5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4624
Memory Address: 0x1b5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4625
Memory Address: 0x1b5f
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4626
Memory Address: 0x1b60
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4627
Memory Address: 0x1b61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4628
Memory Address: 0x1b62
Opcode: 0xc0
RNZ
Operands (memory order, little endian): '0x00 0x00'
if NZ; RET


Instruction Number 4629
Memory Address: 0x1b63
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4630
Memory Address: 0x1b64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4631
Memory Address: 0x1b65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4632
Memory Address: 0x1b66
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4633
Memory Address: 0x1b67
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x01 0x00'
H <- byte 3; L <- byte 2


Instruction Number 4634
Memory Address: 0x1b6a
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4635
Memory Address: 0x1b6b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4636
Memory Address: 0x1b6c
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 4637
Memory Address: 0x1b6d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4638
Memory Address: 0x1b6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4639
Memory Address: 0x1b6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4640
Memory Address: 0x1b70
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4641
Memory Address: 0x1b71
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4642
Memory Address: 0x1b72
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4643
Memory Address: 0x1b73
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4644
Memory Address: 0x1b74
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 4645
Memory Address: 0x1b76
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4646
Memory Address: 0x1b77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4647
Memory Address: 0x1b78
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4648
Memory Address: 0x1b79
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4649
Memory Address: 0x1b7a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x24 0x1b'
D <- byte 3; E <- byte 2


Instruction Number 4650
Memory Address: 0x1b7d
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 4651
Memory Address: 0x1b7e
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0x00 0x01'
if M; CALL adr


Instruction Number 4652
Memory Address: 0x1b81
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4653
Memory Address: 0x1b82
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4654
Memory Address: 0x1b83
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4655
Memory Address: 0x1b84
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4656
Memory Address: 0x1b85
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4657
Memory Address: 0x1b86
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4658
Memory Address: 0x1b87
Opcode: 0x64
MOV H;H
Operands (memory order, little endian): '0x00 0x00'
H <- H


Instruction Number 4659
Memory Address: 0x1b88
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 4660
Memory Address: 0x1b89
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 4661
Memory Address: 0x1b8a
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 4662
Memory Address: 0x1b8b
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4663
Memory Address: 0x1b8c
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4664
Memory Address: 0x1b8d
Opcode: 0x54
MOV D;H
Operands (memory order, little endian): '0x00 0x00'
D <- H


Instruction Number 4665
Memory Address: 0x1b8e
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 4666
Memory Address: 0x1b8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4667
Memory Address: 0x1b90
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4668
Memory Address: 0x1b91
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4669
Memory Address: 0x1b92
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x00 0x00'
B <- byte 2


Instruction Number 4670
Memory Address: 0x1b94
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4671
Memory Address: 0x1b95
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x40 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4672
Memory Address: 0x1b98
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4673
Memory Address: 0x1b9b
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4674
Memory Address: 0x1b9c
Opcode: 0x9e
SBB M
Operands (memory order, little endian): '0x00 0x00'
A <- A - (HL) - CY
Z; S; P; CY; AC

Instruction Number 4675
Memory Address: 0x1b9d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4676
Memory Address: 0x1b9e
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4677
Memory Address: 0x1b9f
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4678
Memory Address: 0x1ba0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4679
Memory Address: 0x1ba1
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4680
Memory Address: 0x1ba2
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4681
Memory Address: 0x1ba3
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4682
Memory Address: 0x1ba4
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 4683
Memory Address: 0x1ba5
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4684
Memory Address: 0x1ba6
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4685
Memory Address: 0x1ba7
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4686
Memory Address: 0x1ba8
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4687
Memory Address: 0x1ba9
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 4688
Memory Address: 0x1baa
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0xfc 0x68'
if M; CALL adr


Instruction Number 4689
Memory Address: 0x1bad
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4690
Memory Address: 0x1bae
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4691
Memory Address: 0x1baf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4692
Memory Address: 0x1bb0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4693
Memory Address: 0x1bb1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4694
Memory Address: 0x1bb2
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xb8 0x98'
B <- byte 3; C <- byte 2


Instruction Number 4695
Memory Address: 0x1bb5
Opcode: 0xa0
ANA B
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; B
Z; S; P; CY; AC

Instruction Number 4696
Memory Address: 0x1bb6
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 4697
Memory Address: 0x1bb7
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4698
Memory Address: 0x1bb8
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4699
Memory Address: 0x1bb9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4700
Memory Address: 0x1bba
Opcode: 0xa0
ANA B
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; B
Z; S; P; CY; AC

Instruction Number 4701
Memory Address: 0x1bbb
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 4702
Memory Address: 0x1bbc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4703
Memory Address: 0x1bbd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4704
Memory Address: 0x1bbe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4705
Memory Address: 0x1bbf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4706
Memory Address: 0x1bc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4707
Memory Address: 0x1bc1
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4708
Memory Address: 0x1bc2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4709
Memory Address: 0x1bc3
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x05 0x00'
C <- byte 2


Instruction Number 4710
Memory Address: 0x1bc5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4711
Memory Address: 0x1bc6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4712
Memory Address: 0x1bc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4713
Memory Address: 0x1bc8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4714
Memory Address: 0x1bc9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4715
Memory Address: 0x1bca
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4716
Memory Address: 0x1bcb
Opcode: 0xd0
RNC
Operands (memory order, little endian): '0x00 0x00'
if NCY; RET


Instruction Number 4717
Memory Address: 0x1bcc
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4718
Memory Address: 0x1bcd
Opcode: 0xc8
RZ
Operands (memory order, little endian): '0x00 0x00'
if Z; RET


Instruction Number 4719
Memory Address: 0x1bce
Opcode: 0x9b
SBB E
Operands (memory order, little endian): '0x00 0x00'
A <- A - E - CY
Z; S; P; CY; AC

Instruction Number 4720
Memory Address: 0x1bcf
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4721
Memory Address: 0x1bd0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4722
Memory Address: 0x1bd1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4723
Memory Address: 0x1bd2
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4724
Memory Address: 0x1bd3
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4725
Memory Address: 0x1bd4
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4726
Memory Address: 0x1bd5
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 4727
Memory Address: 0x1bd6
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4728
Memory Address: 0x1bd7
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4729
Memory Address: 0x1bd8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6d 0xfa'
A <- (adr)


Instruction Number 4730
Memory Address: 0x1bdb
Opcode: 0xfa
JM adr
Operands (memory order, little endian): '0x6d 0x3a'
if M; PC <- adr


Instruction Number 4731
Memory Address: 0x1bde
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4732
Memory Address: 0x1bdf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4733
Memory Address: 0x1be0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4734
Memory Address: 0x1be1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4735
Memory Address: 0x1be2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4736
Memory Address: 0x1be3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4737
Memory Address: 0x1be4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4738
Memory Address: 0x1be5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4739
Memory Address: 0x1be6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4740
Memory Address: 0x1be7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4741
Memory Address: 0x1be8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4742
Memory Address: 0x1be9
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x00'
B <- byte 3; C <- byte 2


Instruction Number 4743
Memory Address: 0x1bec
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x74 0x1f'
B <- byte 3; C <- byte 2


Instruction Number 4744
Memory Address: 0x1bef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4745
Memory Address: 0x1bf0
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 4746
Memory Address: 0x1bf1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4747
Memory Address: 0x1bf2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4748
Memory Address: 0x1bf3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4749
Memory Address: 0x1bf4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4750
Memory Address: 0x1bf5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4751
Memory Address: 0x1bf6
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4752
Memory Address: 0x1bf7
Opcode: 0x2f
CMA
Operands (memory order, little endian): '0x00 0x00'
A <- !A


Instruction Number 4753
Memory Address: 0x1bf8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4754
Memory Address: 0x1bf9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4755
Memory Address: 0x1bfa
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4756
Memory Address: 0x1bfb
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4757
Memory Address: 0x1bfc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4758
Memory Address: 0x1bfd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4759
Memory Address: 0x1bfe
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 4760
Memory Address: 0x1bff
Opcode: 0x39
DAD SP
Operands (memory order, little endian): '0x00 0x00'
HL = HL + SP
CY

Instruction Number 4761
Memory Address: 0x1c00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4762
Memory Address: 0x1c01
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4763
Memory Address: 0x1c02
Opcode: 0x39
DAD SP
Operands (memory order, little endian): '0x00 0x00'
HL = HL + SP
CY

Instruction Number 4764
Memory Address: 0x1c03
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 4765
Memory Address: 0x1c04
Opcode: 0x7a
MOV A;D
Operands (memory order, little endian): '0x00 0x00'
A <- D


Instruction Number 4766
Memory Address: 0x1c05
Opcode: 0x6e
MOV L;M
Operands (memory order, little endian): '0x00 0x00'
L <- (HL)


Instruction Number 4767
Memory Address: 0x1c06
Opcode: 0xec
CPE adr
Operands (memory order, little endian): '0xfa 0xfa'
if PE; CALL adr


Instruction Number 4768
Memory Address: 0x1c09
Opcode: 0xec
CPE adr
Operands (memory order, little endian): '0x6e 0x7a'
if PE; CALL adr


Instruction Number 4769
Memory Address: 0x1c0c
Opcode: 0x79
MOV A;C
Operands (memory order, little endian): '0x00 0x00'
A <- C


Instruction Number 4770
Memory Address: 0x1c0d
Opcode: 0x39
DAD SP
Operands (memory order, little endian): '0x00 0x00'
HL = HL + SP
CY

Instruction Number 4771
Memory Address: 0x1c0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4772
Memory Address: 0x1c0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4773
Memory Address: 0x1c10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4774
Memory Address: 0x1c11
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4775
Memory Address: 0x1c12
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4776
Memory Address: 0x1c13
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4777
Memory Address: 0x1c14
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 4778
Memory Address: 0x1c15
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4779
Memory Address: 0x1c16
Opcode: 0x6c
MOV L;H
Operands (memory order, little endian): '0x00 0x00'
L <- H


Instruction Number 4780
Memory Address: 0x1c17
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4781
Memory Address: 0x1c18
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4782
Memory Address: 0x1c19
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4783
Memory Address: 0x1c1a
Opcode: 0x6c
MOV L;H
Operands (memory order, little endian): '0x00 0x00'
L <- H


Instruction Number 4784
Memory Address: 0x1c1b
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4785
Memory Address: 0x1c1c
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 4786
Memory Address: 0x1c1d
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 4787
Memory Address: 0x1c1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4788
Memory Address: 0x1c1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4789
Memory Address: 0x1c20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4790
Memory Address: 0x1c21
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4791
Memory Address: 0x1c22
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4792
Memory Address: 0x1c23
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4793
Memory Address: 0x1c24
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4794
Memory Address: 0x1c25
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6d 0xfa'
A <- (adr)


Instruction Number 4795
Memory Address: 0x1c28
Opcode: 0xfa
JM adr
Operands (memory order, little endian): '0x6d 0x3a'
if M; PC <- adr


Instruction Number 4796
Memory Address: 0x1c2b
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 4797
Memory Address: 0x1c2c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4798
Memory Address: 0x1c2d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4799
Memory Address: 0x1c2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4800
Memory Address: 0x1c2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4801
Memory Address: 0x1c30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4802
Memory Address: 0x1c31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4803
Memory Address: 0x1c32
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4804
Memory Address: 0x1c33
Opcode: 0x7a
MOV A;D
Operands (memory order, little endian): '0x00 0x00'
A <- D


Instruction Number 4805
Memory Address: 0x1c34
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 4806
Memory Address: 0x1c35
Opcode: 0x6d
MOV L;L
Operands (memory order, little endian): '0x00 0x00'
L <- L


Instruction Number 4807
Memory Address: 0x1c36
Opcode: 0xec
CPE adr
Operands (memory order, little endian): '0xfa 0xfa'
if PE; CALL adr


Instruction Number 4808
Memory Address: 0x1c39
Opcode: 0xec
CPE adr
Operands (memory order, little endian): '0x6d 0x7f'
if PE; CALL adr


Instruction Number 4809
Memory Address: 0x1c3c
Opcode: 0x7a
MOV A;D
Operands (memory order, little endian): '0x00 0x00'
A <- D


Instruction Number 4810
Memory Address: 0x1c3d
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4811
Memory Address: 0x1c3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4812
Memory Address: 0x1c3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4813
Memory Address: 0x1c40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4814
Memory Address: 0x1c41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4815
Memory Address: 0x1c42
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4816
Memory Address: 0x1c43
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x18 0x00'
C <- byte 2


Instruction Number 4817
Memory Address: 0x1c45
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4818
Memory Address: 0x1c46
Opcode: 0x6d
MOV L;L
Operands (memory order, little endian): '0x00 0x00'
L <- L


Instruction Number 4819
Memory Address: 0x1c47
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4820
Memory Address: 0x1c48
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4821
Memory Address: 0x1c49
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4822
Memory Address: 0x1c4a
Opcode: 0x6d
MOV L;L
Operands (memory order, little endian): '0x00 0x00'
L <- L


Instruction Number 4823
Memory Address: 0x1c4b
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4824
Memory Address: 0x1c4c
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4825
Memory Address: 0x1c4d
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x00 0x00'
C <- byte 2


Instruction Number 4826
Memory Address: 0x1c4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4827
Memory Address: 0x1c50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4828
Memory Address: 0x1c51
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4829
Memory Address: 0x1c52
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4830
Memory Address: 0x1c53
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4831
Memory Address: 0x1c54
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4832
Memory Address: 0x1c55
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4833
Memory Address: 0x1c56
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 4834
Memory Address: 0x1c57
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0xfc 0x68'
if M; CALL adr


Instruction Number 4835
Memory Address: 0x1c5a
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4836
Memory Address: 0x1c5b
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4837
Memory Address: 0x1c5c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4838
Memory Address: 0x1c5d
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4839
Memory Address: 0x1c5e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4840
Memory Address: 0x1c5f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4841
Memory Address: 0x1c60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4842
Memory Address: 0x1c61
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4843
Memory Address: 0x1c62
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4844
Memory Address: 0x1c63
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4845
Memory Address: 0x1c64
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4846
Memory Address: 0x1c65
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4847
Memory Address: 0x1c66
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4848
Memory Address: 0x1c67
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 4849
Memory Address: 0x1c68
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4850
Memory Address: 0x1c69
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 4851
Memory Address: 0x1c6a
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4852
Memory Address: 0x1c6b
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4853
Memory Address: 0x1c6c
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4854
Memory Address: 0x1c6d
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4855
Memory Address: 0x1c6e
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4856
Memory Address: 0x1c6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4857
Memory Address: 0x1c70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4858
Memory Address: 0x1c71
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4859
Memory Address: 0x1c72
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x13 0x03'
B <- byte 3; C <- byte 2


Instruction Number 4860
Memory Address: 0x1c75
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4861
Memory Address: 0x1c76
Opcode: 0xb3
ORA E
Operands (memory order, little endian): '0x00 0x00'
A <- A | E
Z; S; P; CY; AC

Instruction Number 4862
Memory Address: 0x1c77
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4863
Memory Address: 0x1c78
Opcode: 0x2f
CMA
Operands (memory order, little endian): '0x00 0x00'
A <- !A


Instruction Number 4864
Memory Address: 0x1c79
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4865
Memory Address: 0x1c7a
Opcode: 0x2f
CMA
Operands (memory order, little endian): '0x00 0x00'
A <- !A


Instruction Number 4866
Memory Address: 0x1c7b
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 4867
Memory Address: 0x1c7c
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4868
Memory Address: 0x1c7d
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4869
Memory Address: 0x1c7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4870
Memory Address: 0x1c7f
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x40 0x08'
B <- byte 3; C <- byte 2


Instruction Number 4871
Memory Address: 0x1c82
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4872
Memory Address: 0x1c83
Opcode: 0xa3
ANA E
Operands (memory order, little endian): '0x00 0x00'
A <- A &amp; E
Z; S; P; CY; AC

Instruction Number 4873
Memory Address: 0x1c84
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4874
Memory Address: 0x1c85
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4875
Memory Address: 0x1c86
Opcode: 0x5b
MOV E;E
Operands (memory order, little endian): '0x00 0x00'
E <- E


Instruction Number 4876
Memory Address: 0x1c87
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4877
Memory Address: 0x1c88
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4878
Memory Address: 0x1c89
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4879
Memory Address: 0x1c8a
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4880
Memory Address: 0x1c8b
Opcode: 0x4b
MOV C;E
Operands (memory order, little endian): '0x00 0x00'
C <- E


Instruction Number 4881
Memory Address: 0x1c8c
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 4882
Memory Address: 0x1c8d
Opcode: 0x84
ADD H
Operands (memory order, little endian): '0x00 0x00'
A <- A + H
Z; S; P; CY; AC

Instruction Number 4883
Memory Address: 0x1c8e
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x48 0x0f'
D <- byte 3; E <- byte 2


Instruction Number 4884
Memory Address: 0x1c91
Opcode: 0x99
SBB C
Operands (memory order, little endian): '0x00 0x00'
A <- A - C - CY
Z; S; P; CY; AC

Instruction Number 4885
Memory Address: 0x1c92
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 4886
Memory Address: 0x1c93
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 4887
Memory Address: 0x1c94
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 4888
Memory Address: 0x1c95
Opcode: 0xbc
CMP H
Operands (memory order, little endian): '0x00 0x00'
A - H
Z; S; P; CY; AC

Instruction Number 4889
Memory Address: 0x1c96
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x7c 0x00'
A <- byte 2


Instruction Number 4890
Memory Address: 0x1c98
Opcode: 0x99
SBB C
Operands (memory order, little endian): '0x00 0x00'
A <- A - C - CY
Z; S; P; CY; AC

Instruction Number 4891
Memory Address: 0x1c99
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4892
Memory Address: 0x1c9a
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 4893
Memory Address: 0x1c9b
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 4894
Memory Address: 0x1c9c
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 4895
Memory Address: 0x1c9e
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 4896
Memory Address: 0x1ca0
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4897
Memory Address: 0x1ca1
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4898
Memory Address: 0x1ca2
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 4899
Memory Address: 0x1ca3
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4900
Memory Address: 0x1ca4
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 4901
Memory Address: 0x1ca5
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4902
Memory Address: 0x1ca6
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x11 0x00'
C <- byte 2


Instruction Number 4903
Memory Address: 0x1ca8
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4904
Memory Address: 0x1ca9
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 4905
Memory Address: 0x1cab
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4906
Memory Address: 0x1cac
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 4907
Memory Address: 0x1cad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4908
Memory Address: 0x1cae
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 4909
Memory Address: 0x1caf
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4910
Memory Address: 0x1cb0
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4911
Memory Address: 0x1cb1
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x13 0x00'
L <- byte 2


Instruction Number 4912
Memory Address: 0x1cb3
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4913
Memory Address: 0x1cb4
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x0b 0x04'
B <- byte 3; C <- byte 2


Instruction Number 4914
Memory Address: 0x1cb7
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4915
Memory Address: 0x1cb8
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4916
Memory Address: 0x1cb9
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4917
Memory Address: 0x1cba
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4918
Memory Address: 0x1cbb
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 4919
Memory Address: 0x1cbc
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4920
Memory Address: 0x1cbd
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4921
Memory Address: 0x1cbe
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4922
Memory Address: 0x1cbf
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 4923
Memory Address: 0x1cc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4924
Memory Address: 0x1cc1
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4925
Memory Address: 0x1cc2
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 4926
Memory Address: 0x1cc3
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x14 0x81'
(adr) <-L; (adr+1)<-H


Instruction Number 4927
Memory Address: 0x1cc6
Opcode: 0x42
MOV B;D
Operands (memory order, little endian): '0x00 0x00'
B <- D


Instruction Number 4928
Memory Address: 0x1cc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4929
Memory Address: 0x1cc8
Opcode: 0x42
MOV B;D
Operands (memory order, little endian): '0x00 0x00'
B <- D


Instruction Number 4930
Memory Address: 0x1cc9
Opcode: 0x81
ADD C
Operands (memory order, little endian): '0x00 0x00'
A <- A + C
Z; S; P; CY; AC

Instruction Number 4931
Memory Address: 0x1cca
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 4932
Memory Address: 0x1ccb
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x49 0x08'
(adr) <-L; (adr+1)<-H


Instruction Number 4933
Memory Address: 0x1cce
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4934
Memory Address: 0x1ccf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4935
Memory Address: 0x1cd0
Opcode: 0x44
MOV B;H
Operands (memory order, little endian): '0x00 0x00'
B <- H


Instruction Number 4936
Memory Address: 0x1cd1
Opcode: 0xaa
XRA D
Operands (memory order, little endian): '0x00 0x00'
A <- A ^ D
Z; S; P; CY; AC

Instruction Number 4937
Memory Address: 0x1cd2
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4938
Memory Address: 0x1cd3
Opcode: 0x88
ADC B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B + CY
Z; S; P; CY; AC

Instruction Number 4939
Memory Address: 0x1cd4
Opcode: 0x54
MOV D;H
Operands (memory order, little endian): '0x00 0x00'
D <- H


Instruction Number 4940
Memory Address: 0x1cd5
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x10 0xaa'
(adr) <-L; (adr+1)<-H


Instruction Number 4941
Memory Address: 0x1cd8
Opcode: 0x44
MOV B;H
Operands (memory order, little endian): '0x00 0x00'
B <- H


Instruction Number 4942
Memory Address: 0x1cd9
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x54 0x88'
(adr) <-L; (adr+1)<-H


Instruction Number 4943
Memory Address: 0x1cdc
Opcode: 0x4a
MOV C;D
Operands (memory order, little endian): '0x00 0x00'
C <- D


Instruction Number 4944
Memory Address: 0x1cdd
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 4945
Memory Address: 0x1cde
Opcode: 0xbe
CMP M
Operands (memory order, little endian): '0x00 0x00'
A - (HL)
Z; S; P; CY; AC

Instruction Number 4946
Memory Address: 0x1cdf
Opcode: 0x3f
CMC
Operands (memory order, little endian): '0x00 0x00'
CY=!CY
CY

Instruction Number 4947
Memory Address: 0x1ce0
Opcode: 0x5e
MOV E;M
Operands (memory order, little endian): '0x00 0x00'
E <- (HL)


Instruction Number 4948
Memory Address: 0x1ce1
Opcode: 0x25
DCR H
Operands (memory order, little endian): '0x00 0x00'
H <- H-1
Z; S; P; AC

Instruction Number 4949
Memory Address: 0x1ce2
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4950
Memory Address: 0x1ce3
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0x04 0x10'
if M; CALL adr


Instruction Number 4951
Memory Address: 0x1ce6
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0x10 0x20'
if M; CALL adr


Instruction Number 4952
Memory Address: 0x1ce9
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0x20 0x80'
if M; CALL adr


Instruction Number 4953
Memory Address: 0x1cec
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0x80 0x00'
if M; CALL adr


Instruction Number 4954
Memory Address: 0x1cef
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x00 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4955
Memory Address: 0x1cf1
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 4956
Memory Address: 0x1cf2
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x12 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4957
Memory Address: 0x1cf4
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4958
Memory Address: 0x1cf5
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x00 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4959
Memory Address: 0x1cf7
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 4960
Memory Address: 0x1cf8
Opcode: 0xfe
CPI D8
Operands (memory order, little endian): '0x90 0x00'
A - data
Z; S; P; CY; AC

Instruction Number 4961
Memory Address: 0x1cfa
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4962
Memory Address: 0x1cfb
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4963
Memory Address: 0x1cfc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4964
Memory Address: 0x1cfd
Opcode: 0x29
DAD H
Operands (memory order, little endian): '0x00 0x00'
HL = HL + HI
CY

Instruction Number 4965
Memory Address: 0x1cfe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4966
Memory Address: 0x1cff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4967
Memory Address: 0x1d00
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x07 0x01'
B <- byte 3; C <- byte 2


Instruction Number 4968
Memory Address: 0x1d03
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x01 0x04'
B <- byte 3; C <- byte 2


Instruction Number 4969
Memory Address: 0x1d06
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4970
Memory Address: 0x1d07
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x06 0x03'
B <- byte 3; C <- byte 2


Instruction Number 4971
Memory Address: 0x1d0a
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x01 0x0b'
B <- byte 3; C <- byte 2


Instruction Number 4972
Memory Address: 0x1d0d
Opcode: 0x09
DAD B
Operands (memory order, little endian): '0x00 0x00'
HL = HL + BC
CY

Instruction Number 4973
Memory Address: 0x1d0e
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4974
Memory Address: 0x1d0f
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4975
Memory Address: 0x1d10
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4976
Memory Address: 0x1d11
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 4977
Memory Address: 0x1d12
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4978
Memory Address: 0x1d13
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 4979
Memory Address: 0x1d14
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4980
Memory Address: 0x1d15
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4981
Memory Address: 0x1d16
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 4982
Memory Address: 0x1d17
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 4983
Memory Address: 0x1d18
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 4984
Memory Address: 0x1d19
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x07 0x00'
B <- byte 2


Instruction Number 4985
Memory Address: 0x1d1b
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 4986
Memory Address: 0x1d1c
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 4987
Memory Address: 0x1d1d
Opcode: 0x06
MVI B; D8
Operands (memory order, little endian): '0x0a 0x00'
B <- byte 2


Instruction Number 4988
Memory Address: 0x1d1f
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 4989
Memory Address: 0x1d20
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4990
Memory Address: 0x1d21
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 4991
Memory Address: 0x1d22
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4992
Memory Address: 0x1d23
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 4993
Memory Address: 0x1d24
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4994
Memory Address: 0x1d25
Opcode: 0x3f
CMC
Operands (memory order, little endian): '0x00 0x00'
CY=!CY
CY

Instruction Number 4995
Memory Address: 0x1d26
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4996
Memory Address: 0x1d27
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 4997
Memory Address: 0x1d28
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4998
Memory Address: 0x1d29
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 4999
Memory Address: 0x1d2a
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0xff 0xf8'
if M; CALL adr


Instruction Number 5000
Memory Address: 0x1d2d
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5001
Memory Address: 0x1d2e
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5002
Memory Address: 0x1d2f
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5003
Memory Address: 0x1d30
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5004
Memory Address: 0x1d31
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5005
Memory Address: 0x1d32
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5006
Memory Address: 0x1d33
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5007
Memory Address: 0x1d34
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5008
Memory Address: 0x1d35
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5009
Memory Address: 0x1d36
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5010
Memory Address: 0x1d37
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5011
Memory Address: 0x1d38
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5012
Memory Address: 0x1d39
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5013
Memory Address: 0x1d3a
Opcode: 0xf0
RP
Operands (memory order, little endian): '0x00 0x00'
if P; RET


Instruction Number 5014
Memory Address: 0x1d3b
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5015
Memory Address: 0x1d3c
Opcode: 0xf8
RM
Operands (memory order, little endian): '0x00 0x00'
if M; RET


Instruction Number 5016
Memory Address: 0x1d3d
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5017
Memory Address: 0x1d3e
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0xff 0xff'
if M; CALL adr


Instruction Number 5018
Memory Address: 0x1d41
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5019
Memory Address: 0x1d42
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5020
Memory Address: 0x1d43
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5021
Memory Address: 0x1d44
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5022
Memory Address: 0x1d45
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5023
Memory Address: 0x1d46
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5024
Memory Address: 0x1d47
Opcode: 0x3f
CMC
Operands (memory order, little endian): '0x00 0x00'
CY=!CY
CY

Instruction Number 5025
Memory Address: 0x1d48
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5026
Memory Address: 0x1d49
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5027
Memory Address: 0x1d4a
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5028
Memory Address: 0x1d4b
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5029
Memory Address: 0x1d4c
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5030
Memory Address: 0x1d4d
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5031
Memory Address: 0x1d4e
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 5032
Memory Address: 0x1d4f
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5033
Memory Address: 0x1d50
Opcode: 0x94
SUB H
Operands (memory order, little endian): '0x00 0x00'
A <- A + H
Z; S; P; CY; AC

Instruction Number 5034
Memory Address: 0x1d51
Opcode: 0x97
SUB A
Operands (memory order, little endian): '0x00 0x00'
A <- A - A
Z; S; P; CY; AC

Instruction Number 5035
Memory Address: 0x1d52
Opcode: 0x9a
SBB D
Operands (memory order, little endian): '0x00 0x00'
A <- A - D - CY
Z; S; P; CY; AC

Instruction Number 5036
Memory Address: 0x1d53
Opcode: 0x9d
SBB L
Operands (memory order, little endian): '0x00 0x00'
A <- A - L - CY
Z; S; P; CY; AC

Instruction Number 5037
Memory Address: 0x1d54
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5038
Memory Address: 0x1d55
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5039
Memory Address: 0x1d56
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5040
Memory Address: 0x1d57
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5041
Memory Address: 0x1d58
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 5042
Memory Address: 0x1d59
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5043
Memory Address: 0x1d5a
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5044
Memory Address: 0x1d5b
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5045
Memory Address: 0x1d5c
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5046
Memory Address: 0x1d5d
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5047
Memory Address: 0x1d5e
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5048
Memory Address: 0x1d5f
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5049
Memory Address: 0x1d60
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5050
Memory Address: 0x1d61
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 5051
Memory Address: 0x1d62
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5052
Memory Address: 0x1d63
Opcode: 0x05
DCR B
Operands (memory order, little endian): '0x00 0x00'
B <- B-1
Z; S; P; AC

Instruction Number 5053
Memory Address: 0x1d64
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5054
Memory Address: 0x1d65
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5055
Memory Address: 0x1d66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5056
Memory Address: 0x1d67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5057
Memory Address: 0x1d68
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5058
Memory Address: 0x1d69
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 5059
Memory Address: 0x1d6a
Opcode: 0x1e
MVI E;D8
Operands (memory order, little endian): '0x37 0x00'
E <- byte 2


Instruction Number 5060
Memory Address: 0x1d6c
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x7c 0x00'
A <- byte 2


Instruction Number 5061
Memory Address: 0x1d6e
Opcode: 0x74
MOV M;H
Operands (memory order, little endian): '0x00 0x00'
(HL) <- H


Instruction Number 5062
Memory Address: 0x1d6f
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 5063
Memory Address: 0x1d70
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 5064
Memory Address: 0x1d71
Opcode: 0x74
MOV M;H
Operands (memory order, little endian): '0x00 0x00'
(HL) <- H


Instruction Number 5065
Memory Address: 0x1d72
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 5066
Memory Address: 0x1d73
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x37 0x00'
A <- byte 2


Instruction Number 5067
Memory Address: 0x1d75
Opcode: 0x1e
MVI E;D8
Operands (memory order, little endian): '0x0c 0x00'
E <- byte 2


Instruction Number 5068
Memory Address: 0x1d77
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5069
Memory Address: 0x1d78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5070
Memory Address: 0x1d79
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5071
Memory Address: 0x1d7a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5072
Memory Address: 0x1d7b
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5073
Memory Address: 0x1d7c
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5074
Memory Address: 0x1d7d
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x00 0xa5'
(adr) <-L; (adr+1)<-H


Instruction Number 5075
Memory Address: 0x1d80
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5076
Memory Address: 0x1d81
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5077
Memory Address: 0x1d82
Opcode: 0x98
SBB B
Operands (memory order, little endian): '0x00 0x00'
A <- A - B - CY
Z; S; P; CY; AC

Instruction Number 5078
Memory Address: 0x1d83
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 5079
Memory Address: 0x1d84
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 5080
Memory Address: 0x1d85
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 5081
Memory Address: 0x1d86
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x1d 0x00'
(HL) <- byte 2


Instruction Number 5082
Memory Address: 0x1d88
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5083
Memory Address: 0x1d89
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5084
Memory Address: 0x1d8a
Opcode: 0x62
MOV H;D
Operands (memory order, little endian): '0x00 0x00'
H <- D


Instruction Number 5085
Memory Address: 0x1d8b
Opcode: 0xb6
ORA M
Operands (memory order, little endian): '0x00 0x00'
A <- A | (HL)
Z; S; P; CY; AC

Instruction Number 5086
Memory Address: 0x1d8c
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5087
Memory Address: 0x1d8d
Opcode: 0x98
SBB B
Operands (memory order, little endian): '0x00 0x00'
A <- A - B - CY
Z; S; P; CY; AC

Instruction Number 5088
Memory Address: 0x1d8e
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5089
Memory Address: 0x1d8f
Opcode: 0x42
MOV B;D
Operands (memory order, little endian): '0x00 0x00'
B <- D


Instruction Number 5090
Memory Address: 0x1d90
Opcode: 0x90
SUB B
Operands (memory order, little endian): '0x00 0x00'
A <- A - B
Z; S; P; CY; AC

Instruction Number 5091
Memory Address: 0x1d91
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5092
Memory Address: 0x1d92
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5093
Memory Address: 0x1d93
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5094
Memory Address: 0x1d94
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x1f 0x00'
L <- byte 2


Instruction Number 5095
Memory Address: 0x1d96
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5096
Memory Address: 0x1d97
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 5097
Memory Address: 0x1d98
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5098
Memory Address: 0x1d99
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5099
Memory Address: 0x1d9a
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 5100
Memory Address: 0x1d9b
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5101
Memory Address: 0x1d9c
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5102
Memory Address: 0x1d9d
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5103
Memory Address: 0x1d9e
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5104
Memory Address: 0x1d9f
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5105
Memory Address: 0x1da0
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5106
Memory Address: 0x1da1
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5107
Memory Address: 0x1da2
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5108
Memory Address: 0x1da3
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5109
Memory Address: 0x1da4
Opcode: 0x50
MOV D;B
Operands (memory order, little endian): '0x00 0x00'
D <- B


Instruction Number 5110
Memory Address: 0x1da5
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5111
Memory Address: 0x1da6
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5112
Memory Address: 0x1da7
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5113
Memory Address: 0x1da8
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5114
Memory Address: 0x1da9
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5115
Memory Address: 0x1daa
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5116
Memory Address: 0x1dab
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5117
Memory Address: 0x1dac
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 5118
Memory Address: 0x1dad
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5119
Memory Address: 0x1dae
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5120
Memory Address: 0x1daf
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5121
Memory Address: 0x1db0
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5122
Memory Address: 0x1db1
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5123
Memory Address: 0x1db2
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5124
Memory Address: 0x1db3
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5125
Memory Address: 0x1db4
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x26 0x00'
L <- byte 2


Instruction Number 5126
Memory Address: 0x1db6
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5127
Memory Address: 0x1db7
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5128
Memory Address: 0x1db8
Opcode: 0x15
DCR D
Operands (memory order, little endian): '0x00 0x00'
D <- D-1
Z; S; P; AC

Instruction Number 5129
Memory Address: 0x1db9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5130
Memory Address: 0x1dba
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 5131
Memory Address: 0x1dbb
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5132
Memory Address: 0x1dbc
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x12 0x0e'
D <- byte 3; E <- byte 2


Instruction Number 5133
Memory Address: 0x1dbf
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 5134
Memory Address: 0x1dc0
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 5135
Memory Address: 0x1dc1
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5136
Memory Address: 0x1dc2
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 5137
Memory Address: 0x1dc3
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 5138
Memory Address: 0x1dc4
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5139
Memory Address: 0x1dc5
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5140
Memory Address: 0x1dc6
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 5141
Memory Address: 0x1dc7
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 5142
Memory Address: 0x1dc8
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5143
Memory Address: 0x1dc9
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5144
Memory Address: 0x1dca
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5145
Memory Address: 0x1dcb
Opcode: 0x2c
INR L
Operands (memory order, little endian): '0x00 0x00'
L <- L+1
Z; S; P; AC

Instruction Number 5146
Memory Address: 0x1dcc
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5147
Memory Address: 0x1dcd
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5148
Memory Address: 0x1dce
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5149
Memory Address: 0x1dcf
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x2e 0x00'
C <- byte 2


Instruction Number 5150
Memory Address: 0x1dd1
Opcode: 0xe0
RPO
Operands (memory order, little endian): '0x00 0x00'
if PO; RET


Instruction Number 5151
Memory Address: 0x1dd2
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5152
Memory Address: 0x1dd3
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 5153
Memory Address: 0x1dd4
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xea 0x00'
L <- byte 2


Instruction Number 5154
Memory Address: 0x1dd6
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5155
Memory Address: 0x1dd7
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 5156
Memory Address: 0x1dd8
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0xf4 0x00'
L <- byte 2


Instruction Number 5157
Memory Address: 0x1dda
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5158
Memory Address: 0x1ddb
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5159
Memory Address: 0x1ddc
Opcode: 0x2e
MVI L; D8
Operands (memory order, little endian): '0x99 0x00'
L <- byte 2


Instruction Number 5160
Memory Address: 0x1dde
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5161
Memory Address: 0x1ddf
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5162
Memory Address: 0x1de0
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5163
Memory Address: 0x1de1
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5164
Memory Address: 0x1de2
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0c 0x00'
L <- byte 2


Instruction Number 5165
Memory Address: 0x1de4
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5166
Memory Address: 0x1de5
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5167
Memory Address: 0x1de6
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 5168
Memory Address: 0x1de7
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5169
Memory Address: 0x1de8
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x18 0x27'
D <- byte 3; E <- byte 2


Instruction Number 5170
Memory Address: 0x1deb
Opcode: 0x1d
DCR E
Operands (memory order, little endian): '0x00 0x00'
E <- E-1
Z; S; P; AC

Instruction Number 5171
Memory Address: 0x1dec
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5172
Memory Address: 0x1ded
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 5173
Memory Address: 0x1def
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 5174
Memory Address: 0x1df1
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5175
Memory Address: 0x1df2
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 5176
Memory Address: 0x1df3
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5177
Memory Address: 0x1df4
Opcode: 0x27
DAA
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5178
Memory Address: 0x1df5
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5179
Memory Address: 0x1df6
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5180
Memory Address: 0x1df7
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 5181
Memory Address: 0x1df9
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 5182
Memory Address: 0x1dfb
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5183
Memory Address: 0x1dfc
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 5184
Memory Address: 0x1dfd
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5185
Memory Address: 0x1dfe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5186
Memory Address: 0x1dff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5187
Memory Address: 0x1e00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5188
Memory Address: 0x1e01
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5189
Memory Address: 0x1e02
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 5190
Memory Address: 0x1e03
Opcode: 0x44
MOV B;H
Operands (memory order, little endian): '0x00 0x00'
B <- H


Instruction Number 5191
Memory Address: 0x1e04
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 5192
Memory Address: 0x1e05
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5193
Memory Address: 0x1e06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5194
Memory Address: 0x1e07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5195
Memory Address: 0x1e08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5196
Memory Address: 0x1e09
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5197
Memory Address: 0x1e0a
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5198
Memory Address: 0x1e0b
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5199
Memory Address: 0x1e0c
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5200
Memory Address: 0x1e0d
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 5201
Memory Address: 0x1e0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5202
Memory Address: 0x1e10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5203
Memory Address: 0x1e11
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x41 0x00'
A <- byte 2


Instruction Number 5204
Memory Address: 0x1e13
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5205
Memory Address: 0x1e14
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5206
Memory Address: 0x1e15
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x00 0x00'
(adr) <-L; (adr+1)<-H


Instruction Number 5207
Memory Address: 0x1e18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5208
Memory Address: 0x1e19
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5209
Memory Address: 0x1e1a
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5210
Memory Address: 0x1e1b
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5211
Memory Address: 0x1e1c
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5212
Memory Address: 0x1e1d
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x00 0x00'
A <- byte 2


Instruction Number 5213
Memory Address: 0x1e1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5214
Memory Address: 0x1e20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5215
Memory Address: 0x1e21
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5216
Memory Address: 0x1e22
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5217
Memory Address: 0x1e23
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5218
Memory Address: 0x1e24
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5219
Memory Address: 0x1e25
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5220
Memory Address: 0x1e26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5221
Memory Address: 0x1e27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5222
Memory Address: 0x1e28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5223
Memory Address: 0x1e29
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5224
Memory Address: 0x1e2a
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5225
Memory Address: 0x1e2b
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5226
Memory Address: 0x1e2c
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5227
Memory Address: 0x1e2d
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5228
Memory Address: 0x1e2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5229
Memory Address: 0x1e2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5230
Memory Address: 0x1e30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5231
Memory Address: 0x1e31
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x41 0x00'
A <- byte 2


Instruction Number 5232
Memory Address: 0x1e33
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5233
Memory Address: 0x1e34
Opcode: 0x45
MOV B;L
Operands (memory order, little endian): '0x00 0x00'
B <- L


Instruction Number 5234
Memory Address: 0x1e35
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 5235
Memory Address: 0x1e36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5236
Memory Address: 0x1e37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5237
Memory Address: 0x1e38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5238
Memory Address: 0x1e39
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5239
Memory Address: 0x1e3a
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5240
Memory Address: 0x1e3b
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5241
Memory Address: 0x1e3c
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5242
Memory Address: 0x1e3d
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5243
Memory Address: 0x1e3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5244
Memory Address: 0x1e3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5245
Memory Address: 0x1e40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5246
Memory Address: 0x1e41
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5247
Memory Address: 0x1e42
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5248
Memory Address: 0x1e43
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5249
Memory Address: 0x1e44
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5250
Memory Address: 0x1e45
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5251
Memory Address: 0x1e46
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5252
Memory Address: 0x1e47
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5253
Memory Address: 0x1e48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5254
Memory Address: 0x1e49
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5255
Memory Address: 0x1e4a
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x01 0x01'
B <- byte 3; C <- byte 2


Instruction Number 5256
Memory Address: 0x1e4d
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 5257
Memory Address: 0x1e4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5258
Memory Address: 0x1e4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5259
Memory Address: 0x1e50
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5260
Memory Address: 0x1e51
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5261
Memory Address: 0x1e52
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5262
Memory Address: 0x1e53
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5263
Memory Address: 0x1e54
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x41 0x00'
(adr) <-L; (adr+1)<-H


Instruction Number 5264
Memory Address: 0x1e57
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5265
Memory Address: 0x1e58
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5266
Memory Address: 0x1e59
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5267
Memory Address: 0x1e5a
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x01 0x01'
B <- byte 3; C <- byte 2


Instruction Number 5268
Memory Address: 0x1e5d
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x00'
B <- byte 3; C <- byte 2


Instruction Number 5269
Memory Address: 0x1e60
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5270
Memory Address: 0x1e61
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5271
Memory Address: 0x1e62
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5272
Memory Address: 0x1e63
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5273
Memory Address: 0x1e64
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5274
Memory Address: 0x1e65
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5275
Memory Address: 0x1e66
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5276
Memory Address: 0x1e67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5277
Memory Address: 0x1e68
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5278
Memory Address: 0x1e69
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5279
Memory Address: 0x1e6a
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5280
Memory Address: 0x1e6b
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5281
Memory Address: 0x1e6c
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5282
Memory Address: 0x1e6d
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5283
Memory Address: 0x1e6e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5284
Memory Address: 0x1e6f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5285
Memory Address: 0x1e70
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5286
Memory Address: 0x1e71
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x41 0x00'
A <- byte 2


Instruction Number 5287
Memory Address: 0x1e73
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5288
Memory Address: 0x1e74
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5289
Memory Address: 0x1e75
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x00 0x00'
A <- byte 2


Instruction Number 5290
Memory Address: 0x1e77
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5291
Memory Address: 0x1e78
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5292
Memory Address: 0x1e79
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5293
Memory Address: 0x1e7a
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5294
Memory Address: 0x1e7b
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5295
Memory Address: 0x1e7c
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5296
Memory Address: 0x1e7d
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5297
Memory Address: 0x1e7e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5298
Memory Address: 0x1e7f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5299
Memory Address: 0x1e80
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5300
Memory Address: 0x1e81
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x41 0x00'
A <- byte 2


Instruction Number 5301
Memory Address: 0x1e83
Opcode: 0x45
MOV B;L
Operands (memory order, little endian): '0x00 0x00'
B <- L


Instruction Number 5302
Memory Address: 0x1e84
Opcode: 0x42
MOV B;D
Operands (memory order, little endian): '0x00 0x00'
B <- D


Instruction Number 5303
Memory Address: 0x1e85
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 5304
Memory Address: 0x1e86
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5305
Memory Address: 0x1e87
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5306
Memory Address: 0x1e88
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5307
Memory Address: 0x1e89
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5308
Memory Address: 0x1e8a
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5309
Memory Address: 0x1e8b
Opcode: 0x4c
MOV C;H
Operands (memory order, little endian): '0x00 0x00'
C <- H


Instruction Number 5310
Memory Address: 0x1e8c
Opcode: 0x4a
MOV C;D
Operands (memory order, little endian): '0x00 0x00'
C <- D


Instruction Number 5311
Memory Address: 0x1e8d
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x00'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 5312
Memory Address: 0x1e90
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5313
Memory Address: 0x1e91
Opcode: 0x32
STA adr
Operands (memory order, little endian): '0x49 0x49'
(adr) <- A


Instruction Number 5314
Memory Address: 0x1e94
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5315
Memory Address: 0x1e95
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 5316
Memory Address: 0x1e97
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5317
Memory Address: 0x1e98
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5318
Memory Address: 0x1e99
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5319
Memory Address: 0x1e9a
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5320
Memory Address: 0x1e9b
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5321
Memory Address: 0x1e9c
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5322
Memory Address: 0x1e9d
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5323
Memory Address: 0x1e9e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5324
Memory Address: 0x1e9f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5325
Memory Address: 0x1ea0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5326
Memory Address: 0x1ea1
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 5327
Memory Address: 0x1ea2
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x01 0x01'
B <- byte 3; C <- byte 2


Instruction Number 5328
Memory Address: 0x1ea5
Opcode: 0x7e
MOV A;M
Operands (memory order, little endian): '0x00 0x00'
A <- (HL)


Instruction Number 5329
Memory Address: 0x1ea6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5330
Memory Address: 0x1ea7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5331
Memory Address: 0x1ea8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5332
Memory Address: 0x1ea9
Opcode: 0x7c
MOV A;H
Operands (memory order, little endian): '0x00 0x00'
A <- H


Instruction Number 5333
Memory Address: 0x1eaa
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5334
Memory Address: 0x1eab
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x02 0x7c'
B <- byte 3; C <- byte 2


Instruction Number 5335
Memory Address: 0x1eae
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5336
Memory Address: 0x1eaf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5337
Memory Address: 0x1eb0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5338
Memory Address: 0x1eb1
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5339
Memory Address: 0x1eb2
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5340
Memory Address: 0x1eb3
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 5341
Memory Address: 0x1eb4
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5342
Memory Address: 0x1eb5
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5343
Memory Address: 0x1eb6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5344
Memory Address: 0x1eb7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5345
Memory Address: 0x1eb8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5346
Memory Address: 0x1eb9
Opcode: 0x63
MOV H;E
Operands (memory order, little endian): '0x00 0x00'
H <- E


Instruction Number 5347
Memory Address: 0x1eba
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5348
Memory Address: 0x1ebb
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5349
Memory Address: 0x1ebc
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5350
Memory Address: 0x1ebd
Opcode: 0x63
MOV H;E
Operands (memory order, little endian): '0x00 0x00'
H <- E


Instruction Number 5351
Memory Address: 0x1ebe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5352
Memory Address: 0x1ebf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5353
Memory Address: 0x1ec0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5354
Memory Address: 0x1ec1
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5355
Memory Address: 0x1ec2
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5356
Memory Address: 0x1ec3
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5357
Memory Address: 0x1ec4
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5358
Memory Address: 0x1ec5
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5359
Memory Address: 0x1ec6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5360
Memory Address: 0x1ec7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5361
Memory Address: 0x1ec8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5362
Memory Address: 0x1ec9
Opcode: 0x43
MOV B;E
Operands (memory order, little endian): '0x00 0x00'
B <- E


Instruction Number 5363
Memory Address: 0x1eca
Opcode: 0x45
MOV B;L
Operands (memory order, little endian): '0x00 0x00'
B <- L


Instruction Number 5364
Memory Address: 0x1ecb
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5365
Memory Address: 0x1ecc
Opcode: 0x51
MOV D;C
Operands (memory order, little endian): '0x00 0x00'
D <- C


Instruction Number 5366
Memory Address: 0x1ecd
Opcode: 0x61
MOV H;C
Operands (memory order, little endian): '0x00 0x00'
H <- C


Instruction Number 5367
Memory Address: 0x1ece
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5368
Memory Address: 0x1ecf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5369
Memory Address: 0x1ed0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5370
Memory Address: 0x1ed1
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x45 0x00'
A <- byte 2


Instruction Number 5371
Memory Address: 0x1ed3
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5372
Memory Address: 0x1ed4
Opcode: 0x51
MOV D;C
Operands (memory order, little endian): '0x00 0x00'
D <- C


Instruction Number 5373
Memory Address: 0x1ed5
Opcode: 0x3e
MVI A;D8
Operands (memory order, little endian): '0x00 0x00'
A <- byte 2


Instruction Number 5374
Memory Address: 0x1ed7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5375
Memory Address: 0x1ed8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5376
Memory Address: 0x1ed9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5377
Memory Address: 0x1eda
Opcode: 0x21
LXI H;D16
Operands (memory order, little endian): '0x7f 0x01'
H <- byte 3; L <- byte 2


Instruction Number 5378
Memory Address: 0x1edd
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5379
Memory Address: 0x1ede
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5380
Memory Address: 0x1edf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5381
Memory Address: 0x1ee0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5382
Memory Address: 0x1ee1
Opcode: 0x23
INX H
Operands (memory order, little endian): '0x00 0x00'
HL <- HL + 1


Instruction Number 5383
Memory Address: 0x1ee2
Opcode: 0x45
MOV B;L
Operands (memory order, little endian): '0x00 0x00'
B <- L


Instruction Number 5384
Memory Address: 0x1ee3
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5385
Memory Address: 0x1ee4
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5386
Memory Address: 0x1ee5
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x00 0x00'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 5387
Memory Address: 0x1ee8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5388
Memory Address: 0x1ee9
Opcode: 0x42
MOV B;D
Operands (memory order, little endian): '0x00 0x00'
B <- D


Instruction Number 5389
Memory Address: 0x1eea
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5390
Memory Address: 0x1eeb
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5391
Memory Address: 0x1eec
Opcode: 0x59
MOV E;C
Operands (memory order, little endian): '0x00 0x00'
E <- C


Instruction Number 5392
Memory Address: 0x1eed
Opcode: 0x66
MOV H;M
Operands (memory order, little endian): '0x00 0x00'
H <- (HL)


Instruction Number 5393
Memory Address: 0x1eee
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5394
Memory Address: 0x1eef
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5395
Memory Address: 0x1ef0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5396
Memory Address: 0x1ef1
Opcode: 0x0c
INR C
Operands (memory order, little endian): '0x00 0x00'
C <- C+1
Z; S; P; AC

Instruction Number 5397
Memory Address: 0x1ef2
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5398
Memory Address: 0x1ef3
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 5399
Memory Address: 0x1ef4
Opcode: 0x7f
MOV A;A
Operands (memory order, little endian): '0x00 0x00'
A <- A


Instruction Number 5400
Memory Address: 0x1ef5
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5401
Memory Address: 0x1ef6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5402
Memory Address: 0x1ef7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5403
Memory Address: 0x1ef8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5404
Memory Address: 0x1ef9
Opcode: 0x72
MOV M;D
Operands (memory order, little endian): '0x00 0x00'
(HL) <- D


Instruction Number 5405
Memory Address: 0x1efa
Opcode: 0x51
MOV D;C
Operands (memory order, little endian): '0x00 0x00'
D <- C


Instruction Number 5406
Memory Address: 0x1efb
Opcode: 0x51
MOV D;C
Operands (memory order, little endian): '0x00 0x00'
D <- C


Instruction Number 5407
Memory Address: 0x1efc
Opcode: 0x51
MOV D;C
Operands (memory order, little endian): '0x00 0x00'
D <- C


Instruction Number 5408
Memory Address: 0x1efd
Opcode: 0x4e
MOV C;M
Operands (memory order, little endian): '0x00 0x00'
C <- (HL)


Instruction Number 5409
Memory Address: 0x1efe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5410
Memory Address: 0x1eff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5411
Memory Address: 0x1f00
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5412
Memory Address: 0x1f01
Opcode: 0x1e
MVI E;D8
Operands (memory order, little endian): '0x29 0x00'
E <- byte 2


Instruction Number 5413
Memory Address: 0x1f03
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5414
Memory Address: 0x1f04
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5415
Memory Address: 0x1f05
Opcode: 0x46
MOV B;M
Operands (memory order, little endian): '0x00 0x00'
B <- (HL)


Instruction Number 5416
Memory Address: 0x1f06
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5417
Memory Address: 0x1f07
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5418
Memory Address: 0x1f08
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5419
Memory Address: 0x1f09
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5420
Memory Address: 0x1f0a
Opcode: 0x47
MOV B;A
Operands (memory order, little endian): '0x00 0x00'
B <- A


Instruction Number 5421
Memory Address: 0x1f0b
Opcode: 0x48
MOV C;B
Operands (memory order, little endian): '0x00 0x00'
C <- B


Instruction Number 5422
Memory Address: 0x1f0c
Opcode: 0x50
MOV D;B
Operands (memory order, little endian): '0x00 0x00'
D <- B


Instruction Number 5423
Memory Address: 0x1f0d
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5424
Memory Address: 0x1f0e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5425
Memory Address: 0x1f0f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5426
Memory Address: 0x1f10
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5427
Memory Address: 0x1f11
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x49 0x00'
(HL) <- byte 2


Instruction Number 5428
Memory Address: 0x1f13
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5429
Memory Address: 0x1f14
Opcode: 0x49
MOV C;C
Operands (memory order, little endian): '0x00 0x00'
C <- C


Instruction Number 5430
Memory Address: 0x1f15
Opcode: 0x36
MVI M;D8
Operands (memory order, little endian): '0x00 0x00'
(HL) <- byte 2


Instruction Number 5431
Memory Address: 0x1f17
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5432
Memory Address: 0x1f18
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5433
Memory Address: 0x1f19
Opcode: 0x31
LXI SP; D16
Operands (memory order, little endian): '0x49 0x49'
SP.hi <- byte 3; SP.lo <- byte 2


Instruction Number 5434
Memory Address: 0x1f1c
Opcode: 0x4a
MOV C;D
Operands (memory order, little endian): '0x00 0x00'
C <- D


Instruction Number 5435
Memory Address: 0x1f1d
Opcode: 0x3c
INR A
Operands (memory order, little endian): '0x00 0x00'
A <- A+1
Z; S; P; AC

Instruction Number 5436
Memory Address: 0x1f1e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5437
Memory Address: 0x1f1f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5438
Memory Address: 0x1f20
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5439
Memory Address: 0x1f21
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5440
Memory Address: 0x1f22
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5441
Memory Address: 0x1f23
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x41 0x00'
(adr) <-L; (adr+1)<-H


Instruction Number 5442
Memory Address: 0x1f26
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5443
Memory Address: 0x1f27
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5444
Memory Address: 0x1f28
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5445
Memory Address: 0x1f29
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5446
Memory Address: 0x1f2a
Opcode: 0x41
MOV B;C
Operands (memory order, little endian): '0x00 0x00'
B <- C


Instruction Number 5447
Memory Address: 0x1f2b
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x14 0x08'
(adr) <-L; (adr+1)<-H


Instruction Number 5448
Memory Address: 0x1f2e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5449
Memory Address: 0x1f2f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5450
Memory Address: 0x1f30
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5451
Memory Address: 0x1f31
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5452
Memory Address: 0x1f32
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5453
Memory Address: 0x1f33
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5454
Memory Address: 0x1f34
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5455
Memory Address: 0x1f35
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5456
Memory Address: 0x1f36
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5457
Memory Address: 0x1f37
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5458
Memory Address: 0x1f38
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5459
Memory Address: 0x1f39
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5460
Memory Address: 0x1f3a
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5461
Memory Address: 0x1f3b
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5462
Memory Address: 0x1f3c
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5463
Memory Address: 0x1f3d
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5464
Memory Address: 0x1f3e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5465
Memory Address: 0x1f3f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5466
Memory Address: 0x1f40
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5467
Memory Address: 0x1f41
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x14 0x7f'
(adr) <-L; (adr+1)<-H


Instruction Number 5468
Memory Address: 0x1f44
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5469
Memory Address: 0x1f45
Opcode: 0x22
SHLD adr
Operands (memory order, little endian): '0x00 0x00'
(adr) <-L; (adr+1)<-H


Instruction Number 5470
Memory Address: 0x1f48
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5471
Memory Address: 0x1f49
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 5472
Memory Address: 0x1f4a
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5473
Memory Address: 0x1f4b
Opcode: 0x78
MOV A;B
Operands (memory order, little endian): '0x00 0x00'
A <- B


Instruction Number 5474
Memory Address: 0x1f4c
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5475
Memory Address: 0x1f4d
Opcode: 0x03
INX B
Operands (memory order, little endian): '0x00 0x00'
BC <- BC+1


Instruction Number 5476
Memory Address: 0x1f4e
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5477
Memory Address: 0x1f4f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5478
Memory Address: 0x1f50
Opcode: 0x24
INR H
Operands (memory order, little endian): '0x00 0x00'
H <- H+1
Z; S; P; AC

Instruction Number 5479
Memory Address: 0x1f51
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 5480
Memory Address: 0x1f52
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0e 0x00'
L <- byte 2


Instruction Number 5481
Memory Address: 0x1f54
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x26 0x1c'
D <- byte 3; E <- byte 2


Instruction Number 5482
Memory Address: 0x1f57
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 5483
Memory Address: 0x1f59
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 5484
Memory Address: 0x1f5a
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5485
Memory Address: 0x1f5b
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5486
Memory Address: 0x1f5c
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5487
Memory Address: 0x1f5d
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x12 0x25'
D <- byte 3; E <- byte 2


Instruction Number 5488
Memory Address: 0x1f60
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x26 0x00'
L <- byte 2


Instruction Number 5489
Memory Address: 0x1f62
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5490
Memory Address: 0x1f63
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 5491
Memory Address: 0x1f64
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 5492
Memory Address: 0x1f66
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 5493
Memory Address: 0x1f67
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5494
Memory Address: 0x1f68
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5495
Memory Address: 0x1f69
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5496
Memory Address: 0x1f6a
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x26 0x26'
D <- byte 3; E <- byte 2


Instruction Number 5497
Memory Address: 0x1f6d
Opcode: 0x1b
DCX D
Operands (memory order, little endian): '0x00 0x00'
DE = DE-1


Instruction Number 5498
Memory Address: 0x1f6e
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x02 0x00'
L <- byte 2


Instruction Number 5499
Memory Address: 0x1f70
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 5500
Memory Address: 0x1f72
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5501
Memory Address: 0x1f73
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x01 0x00'
L <- byte 2


Instruction Number 5502
Memory Address: 0x1f75
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x00'
B <- byte 3; C <- byte 2


Instruction Number 5503
Memory Address: 0x1f78
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x02'
B <- byte 3; C <- byte 2


Instruction Number 5504
Memory Address: 0x1f7b
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x02'
B <- byte 3; C <- byte 2


Instruction Number 5505
Memory Address: 0x1f7e
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0x00 0x60'
B <- byte 3; C <- byte 2


Instruction Number 5506
Memory Address: 0x1f81
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5507
Memory Address: 0x1f82
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5508
Memory Address: 0x1f83
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5509
Memory Address: 0x1f84
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5510
Memory Address: 0x1f85
Opcode: 0x30
SIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5511
Memory Address: 0x1f86
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5512
Memory Address: 0x1f87
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5513
Memory Address: 0x1f88
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 5514
Memory Address: 0x1f89
Opcode: 0x68
MOV L;B
Operands (memory order, little endian): '0x00 0x00'
L <- B


Instruction Number 5515
Memory Address: 0x1f8a
Opcode: 0xfc
CM adr
Operands (memory order, little endian): '0xfc 0x68'
if M; CALL adr


Instruction Number 5516
Memory Address: 0x1f8d
Opcode: 0x3d
DCR A
Operands (memory order, little endian): '0x00 0x00'
A <- A-1
Z; S; P; AC

Instruction Number 5517
Memory Address: 0x1f8e
Opcode: 0x1a
LDAX D
Operands (memory order, little endian): '0x00 0x00'
A <- (DE)


Instruction Number 5518
Memory Address: 0x1f8f
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5519
Memory Address: 0x1f90
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5520
Memory Address: 0x1f91
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5521
Memory Address: 0x1f92
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5522
Memory Address: 0x1f93
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5523
Memory Address: 0x1f94
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x13 0x26'
D <- byte 3; E <- byte 2


Instruction Number 5524
Memory Address: 0x1f97
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x02 0x00'
L <- byte 2


Instruction Number 5525
Memory Address: 0x1f99
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 5526
Memory Address: 0x1f9b
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5527
Memory Address: 0x1f9c
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5528
Memory Address: 0x1f9d
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x50 0x1f'
L <- (adr); H<-(adr+1)


Instruction Number 5529
Memory Address: 0x1fa0
Opcode: 0x0a
LDAX B
Operands (memory order, little endian): '0x00 0x00'
A <- (BC)


Instruction Number 5530
Memory Address: 0x1fa1
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0x62 0x1f'
L <- (adr); H<-(adr+1)


Instruction Number 5531
Memory Address: 0x1fa4
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 5532
Memory Address: 0x1fa5
Opcode: 0x2a
LHLD adr
Operands (memory order, little endian): '0xe1 0x1f'
L <- (adr); H<-(adr+1)


Instruction Number 5533
Memory Address: 0x1fa8
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5534
Memory Address: 0x1fa9
Opcode: 0x02
STAX B
Operands (memory order, little endian): '0x00 0x00'
(BC) <- A


Instruction Number 5535
Memory Address: 0x1faa
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x04 0x03'
D <- byte 3; E <- byte 2


Instruction Number 5536
Memory Address: 0x1fad
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5537
Memory Address: 0x1fae
Opcode: 0x13
INX D
Operands (memory order, little endian): '0x00 0x00'
DE <- DE + 1


Instruction Number 5538
Memory Address: 0x1faf
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 5539
Memory Address: 0x1fb1
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5540
Memory Address: 0x1fb2
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5541
Memory Address: 0x1fb3
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5542
Memory Address: 0x1fb4
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5543
Memory Address: 0x1fb5
Opcode: 0x60
MOV H;B
Operands (memory order, little endian): '0x00 0x00'
H <- B


Instruction Number 5544
Memory Address: 0x1fb6
Opcode: 0x38
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5545
Memory Address: 0x1fb7
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 5546
Memory Address: 0x1fb8
Opcode: 0x3a
LDA adr
Operands (memory order, little endian): '0x6d 0xfa'
A <- (adr)


Instruction Number 5547
Memory Address: 0x1fbb
Opcode: 0xfa
JM adr
Operands (memory order, little endian): '0x6d 0x3a'
if M; PC <- adr


Instruction Number 5548
Memory Address: 0x1fbe
Opcode: 0x19
DAD D
Operands (memory order, little endian): '0x00 0x00'
HL = HL + DE
CY

Instruction Number 5549
Memory Address: 0x1fbf
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5550
Memory Address: 0x1fc0
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5551
Memory Address: 0x1fc1
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5552
Memory Address: 0x1fc2
Opcode: 0x40
MOV B;B
Operands (memory order, little endian): '0x00 0x00'
B <- B


Instruction Number 5553
Memory Address: 0x1fc3
Opcode: 0x4d
MOV C;L
Operands (memory order, little endian): '0x00 0x00'
C <- L


Instruction Number 5554
Memory Address: 0x1fc4
Opcode: 0x50
MOV D;B
Operands (memory order, little endian): '0x00 0x00'
D <- B


Instruction Number 5555
Memory Address: 0x1fc5
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5556
Memory Address: 0x1fc6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5557
Memory Address: 0x1fc7
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5558
Memory Address: 0x1fc8
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5559
Memory Address: 0x1fc9
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5560
Memory Address: 0x1fca
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5561
Memory Address: 0x1fcb
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5562
Memory Address: 0x1fcc
Opcode: 0xb8
CMP B
Operands (memory order, little endian): '0x00 0x00'
A - B
Z; S; P; CY; AC

Instruction Number 5563
Memory Address: 0x1fcd
Opcode: 0xff
RST 7
Operands (memory order, little endian): '0x00 0x00'
CALL $38


Instruction Number 5564
Memory Address: 0x1fce
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 5565
Memory Address: 0x1fcf
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5566
Memory Address: 0x1fd0
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5567
Memory Address: 0x1fd1
Opcode: 0x97
SUB A
Operands (memory order, little endian): '0x00 0x00'
A <- A - A
Z; S; P; CY; AC

Instruction Number 5568
Memory Address: 0x1fd2
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5569
Memory Address: 0x1fd3
Opcode: 0x80
ADD B
Operands (memory order, little endian): '0x00 0x00'
A <- A + B
Z; S; P; CY; AC

Instruction Number 5570
Memory Address: 0x1fd4
Opcode: 0x1f
RAR
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0
CY

Instruction Number 5571
Memory Address: 0x1fd5
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5572
Memory Address: 0x1fd6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5573
Memory Address: 0x1fd7
Opcode: 0x01
LXI B;D16
Operands (memory order, little endian): '0xd0 0x22'
B <- byte 3; C <- byte 2


Instruction Number 5574
Memory Address: 0x1fda
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5575
Memory Address: 0x1fdb
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5576
Memory Address: 0x1fdc
Opcode: 0x10
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5577
Memory Address: 0x1fdd
Opcode: 0x94
SUB H
Operands (memory order, little endian): '0x00 0x00'
A <- A + H
Z; S; P; CY; AC

Instruction Number 5578
Memory Address: 0x1fde
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5579
Memory Address: 0x1fdf
Opcode: 0x20
RIM
Operands (memory order, little endian): '0x00 0x00'
special


Instruction Number 5580
Memory Address: 0x1fe0
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5581
Memory Address: 0x1fe1
Opcode: 0x28
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5582
Memory Address: 0x1fe2
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5583
Memory Address: 0x1fe3
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x0f 0x00'
L <- byte 2


Instruction Number 5584
Memory Address: 0x1fe5
Opcode: 0x0b
DCX B
Operands (memory order, little endian): '0x00 0x00'
BC = BC-1


Instruction Number 5585
Memory Address: 0x1fe6
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5586
Memory Address: 0x1fe7
Opcode: 0x18
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5587
Memory Address: 0x1fe8
Opcode: 0x04
INR B
Operands (memory order, little endian): '0x00 0x00'
B <- B+1
Z; S; P; AC

Instruction Number 5588
Memory Address: 0x1fe9
Opcode: 0x11
LXI D;D16
Operands (memory order, little endian): '0x12 0x26'
D <- byte 3; E <- byte 2


Instruction Number 5589
Memory Address: 0x1fec
Opcode: 0x1c
INR E
Operands (memory order, little endian): '0x00 0x00'
E <-E+1
Z; S; P; AC

Instruction Number 5590
Memory Address: 0x1fed
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x02 0x00'
L <- byte 2


Instruction Number 5591
Memory Address: 0x1fef
Opcode: 0x0e
MVI C;D8
Operands (memory order, little endian): '0x08 0x00'
C <- byte 2


Instruction Number 5592
Memory Address: 0x1ff1
Opcode: 0x0d
DCR C
Operands (memory order, little endian): '0x00 0x00'
C <-C-1
Z; S; P; AC

Instruction Number 5593
Memory Address: 0x1ff2
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5594
Memory Address: 0x1ff3
Opcode: 0x0f
RRC
Operands (memory order, little endian): '0x00 0x00'
A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0
CY

Instruction Number 5595
Memory Address: 0x1ff4
Opcode: 0x14
INR D
Operands (memory order, little endian): '0x00 0x00'
D <- D+1
Z; S; P; AC

Instruction Number 5596
Memory Address: 0x1ff5
Opcode: 0x12
STAX D
Operands (memory order, little endian): '0x00 0x00'
(DE) <- A


Instruction Number 5597
Memory Address: 0x1ff6
Opcode: 0x07
RLC
Operands (memory order, little endian): '0x00 0x00'
A = A << 1; bit 0 = prev bit 7; CY = prev bit 7
CY

Instruction Number 5598
Memory Address: 0x1ff7
Opcode: 0x26
MVI H;D8
Operands (memory order, little endian): '0x00 0x00'
L <- byte 2


Instruction Number 5599
Memory Address: 0x1ff9
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5600
Memory Address: 0x1ffa
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5601
Memory Address: 0x1ffb
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5602
Memory Address: 0x1ffc
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5603
Memory Address: 0x1ffd
Opcode: 0x08
-
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5604
Memory Address: 0x1ffe
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



Instruction Number 5605
Memory Address: 0x1fff
Opcode: 0x00
NOP
Operands (memory order, little endian): '0x00 0x00'



